{"version":3,"file":"ej2-pdf.min.js","sources":["../../src/pdf/core/utils.js","../../src/pdf/core/pdf-primitives.js","../../src/pdf/core/enumerator.js","../../src/pdf/core/graphics/pdf-stream-writer.js","../../src/pdf/core/fonts/pdf-string-format.js","../../src/pdf/core/fonts/pdf-font-metrics.js","../../src/pdf/core/fonts/string-layouter.js","../../src/pdf/core/fonts/ttf-table.js","../../src/pdf/core/fonts/ttf-reader.js","../../src/pdf/core/fonts/unicode-true-type-font.js","../../src/pdf/core/graphics/rightToLeft/text-shape.js","../../src/pdf/core/graphics/rightToLeft/bidirectional.js","../../src/pdf/core/graphics/rightToLeft/text-renderer.js","../../src/pdf/core/fonts/pdf-standard-font.js","../../src/pdf/core/graphics/pdf-path.js","../../src/pdf/core/graphics/images/pdf-image.js","../../src/pdf/core/graphics/pdf-graphics.js","../../src/pdf/core/import-export/xml-writer.js","../../src/pdf/core/import-export/xfdf-document.js","../../src/pdf/core/import-export/json-document.js","../../src/pdf/core/graphics/pdf-template.js","../../src/pdf/core/pdf-action.js","../../src/pdf/core/form/field.js","../../src/pdf/core/annotations/pdf-appearance.js","../../src/pdf/core/annotations/annotation.js","../../src/pdf/core/annotations/annotation-collection.js","../../src/pdf/core/pdf-outline.js","../../src/pdf/core/pdf-page.js","../../src/pdf/core/graphics/images/image-decoder.js","../../src/pdf/core/graphics/images/jpeg-decoder.js","../../src/pdf/core/compression/enum.js","../../src/pdf/core/graphics/images/png-decoder.js","../../src/pdf/core/compression/decompressed-output.js","../../src/pdf/core/compression/in-buffer.js","../../src/pdf/core/compression/huffman-tree.js","../../src/pdf/core/compression/inflater.js","../../src/pdf/core/compression/deflate-stream.js","../../src/pdf/core/base-stream.js","../../src/pdf/core/content-parser.js","../../src/pdf/core/decode-stream.js","../../src/pdf/core/decrypt-stream.js","../../src/pdf/core/flate-stream.js","../../src/pdf/core/pdf-catalog.js","../../src/pdf/core/predictor-stream.js","../../src/pdf/core/security/encryptor.js","../../src/pdf/core/pdf-parser.js","../../src/pdf/core/pdf-cross-reference.js","../../src/pdf/core/form/form.js","../../src/pdf/core/import-export/fdf-document.js","../../src/pdf/core/import-export/xml-document.js","../../src/pdf/core/pdf-file-structure.js","../../src/pdf/core/pdf-page-import-options.js","../../src/pdf/core/pdf-merge.js","../../src/pdf/core/pdf-document.js","../../src/pdf/core/annotations/pdf-paddings.js","../../src/pdf/core/graphics/pdf-layouter.js","../../src/pdf/core/graphics/images/pdf-bitmap.js","../../src/pdf/core/list/pdf-list-item.js","../../src/pdf/core/list/pdf-list.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfDestination } from './pdf-page';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType, PdfDestinationMode, PdfNumberStyle } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation, PdfLineAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\nimport { _JpegDecoder } from './graphics/images/jpeg-decoder';\nimport { _PngDecoder } from './graphics/images/png-decoder';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * Gets the unsigned value.\n *\n * @param {number} value input value.\n * @param {number} bits bits to process.\n * @returns {number} unsigned value.\n */\nexport function _toUnsigned(value, bits) {\n    return (value & ((Math.pow(2, bits)) - 1));\n}\n/**\n * Gets the signed 16 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned16(value) {\n    return (value << 16) >> 16;\n}\n/**\n * Gets the signed 32 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned32(value) {\n    return (value << 0);\n}\n/**\n * Copy values from one array to another.\n *\n * @param {number[]} target destination array.\n * @param {number} at target index.\n * @param {number[]} source source array.\n * @param {number} start start index.\n * @param {number} end end index.\n * @returns {void} Returns nothing.\n */\nexport function _copyRange(target, at, source, start, end) {\n    if (start === null || typeof start === 'undefined') {\n        start = 0;\n    }\n    end = (typeof end === 'undefined') ? source.length : end;\n    start = Math.max(0, Math.min(source.length, start));\n    end = Math.max(0, Math.min(source.length, end));\n    if (at + (end - start) > target.length) {\n        target.length = at + (end - start);\n    }\n    for (var i = start, j = at; i < end; i++, j++) {\n        target[Number.parseInt(j.toString(), 10)] = source[Number.parseInt(i.toString(), 10)];\n    }\n}\n/**\n * Checks the type of the image using header bytes.\n *\n * @param {Uint8Array} imageData image data.\n * @param {number[]} header header bytes.\n * @returns {boolean} Header matched or not.\n */\nexport function _checkType(imageData, header) {\n    for (var i = 0; i < header.length; i++) {\n        if (header[Number.parseInt(i.toString(), 10)] !== imageData[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the image decoder.\n *\n * @param {Uint8Array} imageData image data.\n * @returns {_ImageDecoder} Image decoder.\n */\nexport function _getDecoder(imageData) {\n    var decoder;\n    if (_checkType(imageData, [255, 216])) {\n        decoder = new _JpegDecoder(imageData);\n    }\n    else if (_checkType(imageData, [137, 80, 78, 71, 13, 10, 26, 10])) {\n        decoder = new _PngDecoder(imageData);\n    }\n    else {\n        throw new Error('Unsupported image format');\n    }\n    return decoder;\n}\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (typeof value === 'string' && value.length > 0 && value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return a number[] or Uint8Array.\n * @param {boolean} isPassword Whether the string is a password.\n * @param {number[]} destination Destination array.\n * @returns {number[] | Uint8Array} Byte array\n */\nexport function _stringToBytes(value, isDirect, isPassword, destination) {\n    if (isDirect === void 0) { isDirect = false; }\n    if (isPassword === void 0) { isPassword = false; }\n    var bytes = [];\n    if (destination) {\n        bytes = destination;\n    }\n    if (isPassword) {\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n    }\n    else {\n        for (var i = 0; i < value.length; i++) {\n            var charCode = value.charCodeAt(i);\n            if (charCode < 0x80) {\n                bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                bytes.push((charCode >> 6) | 0xC0);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else if (charCode < 0xD800 || charCode >= 0xE000) {\n                bytes.push((charCode >> 12) | 0xE0);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3FF) << 10) | (value.charCodeAt(i) & 0x3FF));\n                bytes.push((charCode >> 18) | 0xF0);\n                bytes.push(((charCode >> 12) & 0x3F) | 0x80);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n        }\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @param {boolean} isJson Whether is json or xfdf.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes, isJson) {\n    if (isJson === void 0) { isJson = false; }\n    var length = bytes.length;\n    var max = 8192;\n    var stringBuffer = [];\n    if (length < max) {\n        return (isJson ? _decodeUnicodeBytes(bytes) : String.fromCharCode.apply(null, bytes));\n    }\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(isJson ? _decodeUnicodeBytes(chunk) : String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Decode unicode string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _decodeUnicodeBytes(bytes) {\n    var result = '';\n    var i = 0;\n    while (i < bytes.length) {\n        var byte = bytes[i++];\n        if (byte < 0x80) {\n            result += String.fromCharCode(byte);\n        }\n        else if (byte < 0xE0) {\n            result += String.fromCharCode(((byte & 0x1F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else if (byte < 0xF0) {\n            result += String.fromCharCode(((byte & 0x0F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else {\n            var codePoint = ((byte & 0x07) << 18) | ((bytes[i++] & 0x3F) << 12) |\n                ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F) - 0x10000;\n            result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & 0x03FF) + 0xDC00);\n        }\n    }\n    return result;\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode a chunk of base64 string into Uint8Array.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @returns {Uint8Array} Decoded bytes as Uint8Array.\n */\nfunction _decodeChunk(input) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return new Uint8Array(output);\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var chunkSize = 3000000;\n    if (input.length >= chunkSize) {\n        input = input.replace(/[^A-Za-z0-9+/=]/g, '');\n        var outputChunks = [];\n        var totalLength = 0;\n        for (var i = 0; i < input.length; i += chunkSize) {\n            var chunk = input.substring(i, i + chunkSize);\n            var decodedChunk = _decodeChunk(chunk);\n            outputChunks.push(decodedChunk);\n            totalLength += decodedChunk.length;\n        }\n        var output = new Uint8Array(totalLength);\n        var offset = 0;\n        for (var _i = 0, outputChunks_1 = outputChunks; _i < outputChunks_1.length; _i++) {\n            var chunk = outputChunks_1[_i];\n            output.set(chunk, offset);\n            offset += chunk.length;\n        }\n        return isDirect ? Array.from(output) : output;\n    }\n    else {\n        var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1 = void 0;\n        var chr2 = void 0;\n        var chr3 = void 0;\n        var enc1 = void 0;\n        var enc2 = void 0;\n        var enc3 = void 0;\n        var enc4 = void 0;\n        var i = 0;\n        var resultIndex = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === key.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = key.indexOf(input.charAt(i++));\n            enc2 = key.indexOf(input.charAt(i++));\n            enc3 = key.indexOf(input.charAt(i++));\n            enc4 = key.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr1;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr2;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return isDirect ? output : new Uint8Array(output);\n    }\n}\n/**\n * Encode a chunk of bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @param {boolean} isLastChunk Defines a last chunk of bytes.\n * @returns {string} Decoded string.\n */\nfunction _encodeChunk(bytes, isLastChunk) {\n    if (isLastChunk === void 0) { isLastChunk = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = [];\n    var length = bytes.length;\n    var i = 0;\n    while (i < length) {\n        var byte1 = bytes[i++];\n        var byte2 = i < length ? bytes[i++] : 0;\n        var byte3 = i < length ? bytes[i++] : 0;\n        var value1 = byte1 >> 2;\n        var value2 = ((byte1 & 3) << 4) | (byte2 >> 4);\n        var value3 = ((byte2 & 15) << 2) | (byte3 >> 6);\n        var value4 = byte3 & 63;\n        output.push(key[Number.parseInt(value1.toString(), 10)], key[Number.parseInt(value2.toString(), 10)], i - 1 > length ? '=' : key[Number.parseInt(value3.toString(), 10)], i > length ? '=' : key[Number.parseInt(value4.toString(), 10)]);\n    }\n    if (isLastChunk) {\n        if (length % 3 === 1) {\n            output[output.length - 1] = '=';\n            output[output.length - 2] = '=';\n        }\n        else if (length % 3 === 2) {\n            output[output.length - 1] = '=';\n        }\n    }\n    return output.join('');\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var chunkSize = 3000000;\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var length = bytes.length;\n    if (length >= chunkSize) {\n        var output = [];\n        if (length > chunkSize) {\n            for (var start = 0; start < length; start += chunkSize) {\n                var chunk = bytes.subarray(start, Math.min(start + chunkSize, length));\n                if ((start + chunkSize) >= length) {\n                    output.push(_encodeChunk(chunk, true));\n                }\n                else {\n                    output.push(_encodeChunk(chunk));\n                }\n            }\n        }\n        else {\n            output.push(_encodeChunk(bytes, true));\n        }\n        return output.join('');\n    }\n    else {\n        var output = '';\n        var currentChar = 0;\n        for (var i = 0; i < bytes.length; i++) {\n            if (i % 3 === 0) {\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n            }\n            else if (i % 3 === 1) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n            }\n            else if (i % 3 === 2) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n            }\n        }\n        if (bytes.length % 3 === 1) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n        }\n        if (bytes.length % 3 === 2) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n        }\n        return output;\n    }\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            if (angle === 90) {\n                matrix._translate(box[3], -box[0]);\n            }\n            else if (angle === 180) {\n                matrix._translate(box[2], box[3]);\n            }\n            else if (angle === 270) {\n                matrix._translate(-box[1], box[2]);\n            }\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n        case 'SBApproved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n        case 'SBAsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n        case 'SBCompleted':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n        case 'SBConfidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n        case 'SBDepartmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n        case 'SBDraft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n        case 'SBExperimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n        case 'SBExpired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n        case 'SBFinal':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n        case 'SBForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n        case 'SBForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n        case 'SBInformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n        case 'SBNotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n        case 'SBNotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n        case 'SBPreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n        case 'SBSold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n        case 'SBTopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n        case 'SBVoid':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = [];\n    if ((style & PdfFontStyle.bold) > 0) {\n        value.push('Bold');\n    }\n    if ((style & PdfFontStyle.italic) > 0) {\n        value.push('Italic');\n    }\n    if ((style & PdfFontStyle.underline) > 0) {\n        value.push('Underline');\n    }\n    if ((style & PdfFontStyle.strikeout) > 0) {\n        value.push('Strikeout');\n    }\n    if (value.length === 0) {\n        return 'Regular';\n    }\n    return value.join(', ');\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    if (typeof size === 'undefined' && annotation instanceof PdfLineAnnotation && annotation._isLoaded) {\n        size = 10;\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helv':\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Cour':\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symb':\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TiRo':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZaDb':\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance instanceof _PdfDictionary && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the Destination.\n *\n * @param {_PdfDictionary} dictionary widget dictionary.\n * @param {string} key bookmark or action dictionary key.\n * @returns {PdfDestination} destination.\n */\nexport function _obtainDestination(dictionary, key) {\n    var page;\n    var destination;\n    if (dictionary) {\n        var destinationArray = void 0; // eslint-disable-line\n        if (dictionary.has(key)) {\n            destinationArray = dictionary.getArray(key);\n        }\n        var loadedDocument = dictionary._crossReference._document;\n        var mode = void 0;\n        if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n            var value = destinationArray[0]; // eslint-disable-line\n            var left = void 0;\n            var height = void 0;\n            var bottom = void 0;\n            var right = void 0;\n            var zoom = void 0;\n            if (typeof value === 'number') {\n                var pageNumber = destinationArray[0];\n                if (pageNumber >= 0) {\n                    var document_1 = dictionary._crossReference._document;\n                    if (document_1 && document_1.pageCount > pageNumber) {\n                        page = document_1.getPage(pageNumber);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode && mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = pageNumber;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value instanceof _PdfDictionary) {\n                var pageDictionary = value;\n                var index = void 0;\n                if (loadedDocument && pageDictionary) {\n                    index = _getPageIndex(loadedDocument, pageDictionary);\n                }\n                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                    page = loadedDocument.getPage(index);\n                }\n                if (destinationArray.length > 1) {\n                    mode = destinationArray[1];\n                }\n                if (mode) {\n                    if (mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                topValue = _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = index;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                    else {\n                        if (mode.name === 'FitR') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                bottom = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                right = destinationArray[4];\n                            }\n                            if (destinationArray.length > 5) {\n                                height = destinationArray[5];\n                            }\n                            if (page) {\n                                left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                destination = new PdfDestination(page, [left, bottom, right, height]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitR;\n                            }\n                        }\n                        else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                            if (destinationArray.length >= 3) {\n                                height = destinationArray[2];\n                            }\n                            if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                page = loadedDocument.getPage(index);\n                            }\n                            if (page && page.size) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                destination = new PdfDestination(page, [0, topValue]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitH;\n                                if (height === null || typeof height === 'undefined') {\n                                    destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                destination = new PdfDestination(page);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return destination;\n}\n/**\n * Update the annotation bounds.\n *\n * @param {PdfAnnotation} annotation annotation.\n * @param {number[]} bounds annotation bounds.\n * @returns {number[]} bounds.\n */\nexport function _updateBounds(annotation, bounds) {\n    if (bounds) {\n        annotation._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n    }\n    var rect;\n    if (annotation._page && annotation.bounds) {\n        rect = [annotation.bounds.x, annotation.bounds.y + annotation.bounds.height,\n            annotation.bounds.width, annotation.bounds.height];\n        if (annotation._page._isNew && annotation._page._pageSettings) {\n            var pageSettings = annotation._page._pageSettings;\n            var pageBounds = [pageSettings.margins.left, pageSettings.margins.top, pageSettings.size[0] -\n                    (pageSettings.margins.left + pageSettings.margins.right),\n                pageSettings.size[1] - (pageSettings.margins.top + pageSettings.margins.bottom)];\n            rect[0] += pageBounds[0];\n            rect[1] = pageSettings.size[1] - (pageBounds[1] + rect[1]);\n        }\n        else {\n            var size = annotation._page.size;\n            rect[1] = size[1] - (annotation.bounds.y + annotation.bounds.height);\n            var cropBoxOrMediaBox = annotation._getCropOrMediaBox();\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]];\n    }\n    return rect;\n}\n/**\n * Decode text.\n *\n * @param {string} text Text to decode.\n * @param {boolean} isColorSpace Color space or not\n * @param {boolean} isPassword Password or not\n * @returns {string} Decoded text.\n */\nexport function _decodeText(text, isColorSpace, isPassword) {\n    if (text && typeof text === 'string' && !isColorSpace && !isPassword) {\n        if (text.startsWith('þÿ')) {\n            text = text.substring(2);\n            if (text.endsWith('ÿý')) {\n                text = text.substring(0, text.length - 2);\n            }\n            var bytes = _stringToBytes(text, false, true);\n            var result = '';\n            for (var i = 0; i < bytes.length; i += 2) {\n                var x = bytes[Number.parseInt(i.toString(), 10)] << 8;\n                var y = bytes[Number.parseInt((i + 1).toString(), 10)];\n                var codeUnit = x | y;\n                result += String.fromCharCode(codeUnit);\n            }\n            text = result;\n        }\n    }\n    return text;\n}\n/**\n * Number of bytes required to save the number.\n *\n * @param {number} input number.\n * @returns {number} number of bytes.\n */\nexport function _getSize(input) {\n    var size = 0;\n    var uintMaxValue = 0xFFFFFFFF;\n    var ushortMaxValue = 0xFFFF;\n    var byteMaxValue = 0xFF;\n    if (input <= uintMaxValue) {\n        if (input <= ushortMaxValue) {\n            if (input <= byteMaxValue) {\n                size = 1;\n            }\n            else {\n                size = 2;\n            }\n        }\n        else {\n            if (input <= (ushortMaxValue | (ushortMaxValue << 8))) {\n                size = 3;\n            }\n            else {\n                size = 4;\n            }\n        }\n    }\n    else {\n        size = 8;\n    }\n    return size;\n}\n/**\n * Convert the string to big endian bytes.\n *\n * @param {string} input string.\n * @returns {number[]} bytes.\n */\nexport function _stringToBigEndianBytes(input) {\n    var bytes = [];\n    for (var i = 0; i < input.length; i++) {\n        var charCode = input.charCodeAt(Number.parseInt(i.toString(), 10));\n        if (charCode <= 0xFFFF) {\n            bytes.push((charCode >> 8) & 0xFF);\n            bytes.push(charCode & 0xFF);\n        }\n    }\n    return bytes;\n}\n/**\n * Convert number respect to ordered list number style.\n *\n * @param {number} intArabic Input value.\n * @param {PdfNumberStyle} numberStyle Number style.\n * @returns {string} String value.\n */\nexport function _convertNumber(intArabic, numberStyle) {\n    switch (numberStyle) {\n        case PdfNumberStyle.none:\n            return '';\n        case PdfNumberStyle.numeric:\n            return intArabic.toString();\n        case PdfNumberStyle.lowerLatin:\n            return _arabicToLetter(intArabic).toLowerCase();\n        case PdfNumberStyle.lowerRoman:\n            return _arabicToRoman(intArabic).toLowerCase();\n        case PdfNumberStyle.upperLatin:\n            return _arabicToLetter(intArabic);\n        case PdfNumberStyle.upperRoman:\n            return _arabicToRoman(intArabic);\n    }\n}\n/**\n * Convert arabic numbers to roman style.\n *\n * @param {number} intArabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToRoman(intArabic) {\n    var retval = '';\n    var romanNumerals = [\n        [1000, 'M'], [900, 'CM'], [500, 'D'], [400, 'CD'],\n        [100, 'C'], [90, 'XC'], [50, 'L'], [40, 'XL'],\n        [10, 'X'], [9, 'IX'], [5, 'V'], [4, 'IV'], [1, 'I']\n    ];\n    for (var _i = 0, romanNumerals_1 = romanNumerals; _i < romanNumerals_1.length; _i++) {\n        var _a = romanNumerals_1[_i], value = _a[0], numeral = _a[1];\n        while (intArabic >= value) {\n            retval += numeral;\n            intArabic -= value;\n        }\n    }\n    return retval;\n}\n/**\n * Convert arabic numbers to alphabet.\n *\n * @param {number} arabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToLetter(arabic) {\n    var result = '';\n    while (arabic > 0) {\n        var remainder = arabic % 26;\n        arabic = Math.floor(arabic / 26);\n        if (remainder === 0) {\n            arabic--;\n            remainder = 26;\n        }\n        result = _appendChar(remainder) + result;\n    }\n    return result;\n}\n/**\n * Convert character code to string.\n *\n * @param {number} value Input value.\n * @returns {string} String value.\n */\nexport function _appendChar(value) {\n    if (value <= 0 || value > 26) {\n        throw new Error('Value can not be less 0 and greater 26');\n    }\n    return String.fromCharCode(64 + value);\n}\n/**\n * Check whether the value is null or undefined.\n *\n * @param {any} value Input value.\n * @returns {boolean} Return true if the value is null or undefined; otherwise, return false\n */\nexport function _isNullOrUndefined(value) {\n    if (value !== null && typeof value !== 'undefined') {\n        return true;\n    }\n    return false;\n}\n/**\n * Compresses the content of a PDFBaseStream\n *\n * @param {_PdfBaseStream} stream - Base stream to compress.\n * @param {boolean} isExport - Denotes compress the stream as a hex-encoded string.\n * @returns {boolean} compressed string.\n */\nexport function _compressStream(stream, isExport) {\n    if (isExport === void 0) { isExport = false; }\n    var value = stream.getString();\n    var byteArray = [];\n    for (var i = 0; i < value.length; i++) {\n        byteArray.push(value.charCodeAt(i));\n    }\n    var dataArray = new Uint8Array(byteArray);\n    var sw = new CompressedStreamWriter();\n    sw.write(dataArray, 0, dataArray.length);\n    sw.close();\n    value = sw.getCompressedString;\n    stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n    if (isExport) {\n        var buffer = [];\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n        return _byteArrayToHexString(new Uint8Array(buffer));\n    }\n    return value;\n}\n/**\n * Base64 encoded string representing an empty PDF document.\n */\nexport var _emptyPdfData = 'JVBERi0xLjQNCiWDkvr+DQoxIDAgb2JqDQo8PA0KL1R5cGUgL0NhdGFsb2cNCi9QYWdlcyAyIDAgUg0KL0Fjcm9Gb3JtIDMgMCBSDQo+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PA0KL1R5cGUgL1BhZ2VzDQovS2lkcyBbNCAwIFJdDQovQ291bnQgMQ0KL1Jlc291cmNlcyA8PD4+DQoNCi9NZWRpYUJveCBbLjAwIC4wMCA1OTUuMDAgODQyLjAwXQ0KL1JvdGF0ZSAwDQo+Pg0KZW5kb2JqDQozIDAgb2JqDQo8PA0KL0ZpZWxkcyBbXQ0KPj4NCmVuZG9iag0KNCAwIG9iag0KPDwNCi9Db3VudCAxDQovVHlwZSAvUGFnZXMNCi9LaWRzIFs1IDAgUl0NCi9QYXJlbnQgMiAwIFINCj4+DQplbmRvYmoNCjUgMCBvYmoNCjw8DQovVHlwZSAvUGFnZQ0KL1BhcmVudCA0IDAgUg0KPj4NCmVuZG9iag0KeHJlZg0KMCA2DQowMDAwMDAwMDAwIDY1NTM1IGYNCjAwMDAwMDAwMTcgMDAwMDAgbg0KMDAwMDAwMDA4OSAwMDAwMCBuDQowMDAwMDAwMjE4IDAwMDAwIG4NCjAwMDAwMDAyNTUgMDAwMDAgbg0KMDAwMDAwMDMzNCAwMDAwMCBuDQp0cmFpbGVyDQo8PA0KL1Jvb3QgMSAwIFINCi9TaXplIDYNCj4+DQoNCnN0YXJ0eHJlZg0KMzg3DQolJUVPRg0K';\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define the types of points and segments in a path.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Add path points\n * let pathPoints: Array<number[]> = [[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]];\n * // Add path types\n * let pathTypes: PathPointType[] = [0, 1, 1, 1, 1];\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath(pathPoints, pathTypes);\n * // Draw the path to the PDF page\n * page.graphics.drawPath(path, pen, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * The starting point of a path.\n     */\n    PathPointType[PathPointType[\"start\"] = 0] = \"start\";\n    /**\n     * A straight line segment.\n     */\n    PathPointType[PathPointType[\"line\"] = 1] = \"line\";\n    /**\n     * A Bezier curve segment.\n     */\n    PathPointType[PathPointType[\"bezier\"] = 3] = \"bezier\";\n    /**\n     * A mask for extracting the type of a point.\n     */\n    PathPointType[PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    /**\n     * Indicates that the segment has dashed line style.\n     */\n    PathPointType[PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    /**\n     * Indicates a marker point in the path.\n     */\n    PathPointType[PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    /**\n     * Closes the current path.\n     */\n    PathPointType[PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(PathPointType || (PathPointType = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\nexport var _PdfColorSpace;\n(function (_PdfColorSpace) {\n    _PdfColorSpace[_PdfColorSpace[\"rgb\"] = 0] = \"rgb\";\n    _PdfColorSpace[_PdfColorSpace[\"cmyk\"] = 1] = \"cmyk\";\n    _PdfColorSpace[_PdfColorSpace[\"grayScale\"] = 2] = \"grayScale\";\n    _PdfColorSpace[_PdfColorSpace[\"indexed\"] = 3] = \"indexed\";\n})(_PdfColorSpace || (_PdfColorSpace = {}));\n/**\n * Public enum type to represent the ordered list style\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the ordered list number style for the list items\n * list.style = PdfNumberStyle.lowerLatin;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * No numbering at all.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type '1'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"numeric\"] = 1] = \"numeric\";\n    /**\n     * Specifies the style 'a'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerLatin\"] = 2] = \"lowerLatin\";\n    /**\n     * Specifies the style 'i'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerRoman\"] = 3] = \"lowerRoman\";\n    /**\n     * Specifies the style 'A'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperLatin\"] = 4] = \"upperLatin\";\n    /**\n     * Specifies the style 'I'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperRoman\"] = 5] = \"upperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * Public enum to define the style used for unordered list.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a unordered list and pass the list item collection\n * let list: PdfUnorderedList = new PdfUnorderedList(items);\n * // Set the unordered list style for the list items\n * list.style = PdfUnorderedListStyle.circle;\n * // Draw the unordered list associated with items\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfUnorderedListStyle;\n(function (PdfUnorderedListStyle) {\n    /**\n     * No bulleting at all.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies disk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"disk\"] = 1] = \"disk\";\n    /**\n     * Specifies square style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"square\"] = 2] = \"square\";\n    /**\n     * Specifies asterisk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"asterisk\"] = 3] = \"asterisk\";\n    /**\n     * Specifies circle style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"circle\"] = 4] = \"circle\";\n})(PdfUnorderedListStyle || (PdfUnorderedListStyle = {}));\n/**\n * Public enum to define a layout type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to the list item collection by passing the array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout format for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Initialize layout type for drawing\n * pageLayout.layout = PdfLayoutType.paginate;\n * // Draw the list on the page along with the specified layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Get the layout type used to draw the list\n * let layoutType: PdfLayoutType = pageLayout.layout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies pagination across multiple pages based on the specified dimensions and layout options\n     */\n    PdfLayoutType[PdfLayoutType[\"paginate\"] = 0] = \"paginate\";\n    /**\n     * Specifies content to be laid out to fit within a single page, without pagination\n     */\n    PdfLayoutType[PdfLayoutType[\"onePage\"] = 1] = \"onePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * Public enum to define a layout Break type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the item to list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set  the layout break type for drawing\n * pageLayout.break = PdfLayoutBreakType.fitPage;\n * // Draw the list associated with items along with layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies that content should break to a new page to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitPage\"] = 0] = \"fitPage\";\n    /**\n     * Specifies that content should break to a new page or element to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitElement\"] = 1] = \"fitElement\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n/**\n * Public enum to define a list marker alignment\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the marker alignment\n * list.alignment = PdfListMarkerAlignment.left;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfListMarkerAlignment;\n(function (PdfListMarkerAlignment) {\n    /**\n     * Left alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Right alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"right\"] = 1] = \"right\";\n})(PdfListMarkerAlignment || (PdfListMarkerAlignment = {}));\n","import { _escapePdfName } from './../utils';\nimport { _PdfColorSpace } from '../enumerator';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, arg2, arg3) {\n        if (typeof value === 'string' && typeof arg2 === 'boolean') {\n            this._stream.write(\"/\" + value + \" \");\n            this._writeOperator(arg2 ? 'CS' : 'cs');\n        }\n        else if (Array.isArray(value) && typeof arg2 === 'number' && typeof arg3 === 'boolean') {\n            var colorSpaceName = void 0;\n            switch (arg2) {\n                case _PdfColorSpace.rgb:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n                case _PdfColorSpace.cmyk:\n                    colorSpaceName = 'DeviceCMYK';\n                    break;\n                case _PdfColorSpace.grayScale:\n                    colorSpaceName = 'DeviceGray';\n                    break;\n                default:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n            }\n            this._stream.write(\"/\" + colorSpaceName + \" \");\n            this._writeOperator(arg3 ? 'CS' : 'cs');\n            this._setColor(value, arg3);\n        }\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._setLeading = function (leading) {\n        this._write(leading.toFixed(3) + \" \");\n        this._write(this._whiteSpace);\n        this._writeOperator('TL');\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this._isList = false;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines === null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && typeof this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && typeof this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs !== null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs !== null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 !== null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (!internals) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 === null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        if (this._metrics._name === 'Helvetica' ||\n            this._metrics._name === 'Courier' ||\n            this._metrics._name === 'TimesRoman' ||\n            this._metrics._name === 'Symbol' ||\n            this._metrics._name === 'ZapfDingbats') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this.style = style;\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                metrics._name = 'Courier';\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                metrics._name = 'TimesRoman';\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                metrics._name = 'Symbol';\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                metrics._name = 'ZapfDingbats';\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode, PathPointType } from './../enumerator';\n/**\n * Implements graphics path, which is a sequence of primitive graphics elements.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics object of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath();\n * // Add a line to the Graphics path\n * path.addLine(10, 250, 200, 250);\n * // Draw the path on the PDF page\n * graphics.drawPath(path, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPath = /** @class */ (function () {\n    function PdfPath(points, pathTypes) {\n        this._points = [];\n        this._pathTypes = [];\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._isStart = true;\n        this._isXps = false;\n        this._brush = undefined;\n        this._pen = undefined;\n        if (points && pathTypes) {\n            if (Array.isArray(points) && Array.isArray(pathTypes)) {\n                this._points = points;\n                this._pathTypes = pathTypes;\n            }\n            else {\n                throw new Error('Invalid constructor arguments.');\n            }\n        }\n        else {\n            this._points = [];\n            this._pathTypes = [];\n        }\n    }\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last point of the path.\n         *\n         * @returns {number[]} The value of the last point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the last point of the path.\n         * let lastPoint: number[] = path.lastPoint;\n         * // Draw the path on the PDF page.\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[count - 1][0];\n                value[1] = this._points[count - 1][1];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the array of points that represent the x and y coordinates defining the path.\n         *\n         * @returns {Array<number[]>} An array of arrays of numbers, where each inner array represents a set of points.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path points of the path\n         * let pathPoints: Array<number[]> = path.pathPoints;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the types of the corresponding points in the path.\n         *\n         * @returns {PathPointType[]} An array of `PathPointType` objects representing the types of each path point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path types of the path\n         * let pathTypes: PathPointType[] = path.pathTypes;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        /**\n         * Gets the fill mode.\n         *\n         * @returns {PdfFillMode} The fill mode of the PDF path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the fill mode of the path\n         * let fillMode: PdfFillMode = path.fillMode;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fillMode;\n        },\n        /**\n         * Sets the fill mode.\n         *\n         * @param {PdfFillMode} mode The fill mode of the path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Set the fill mode of the path\n         * path.fillMode = PdfFillMode.alternate;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (mode) {\n            this._fillMode = mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this._addPath(arg1._points, arg1._pathTypes);\n        }\n        else if (Array.isArray(arg1) && Array.isArray(arg2)) {\n            this._addPath(arg1, arg2);\n        }\n    };\n    PdfPath.prototype._addPath = function (pathPoints, pathTypes) {\n        if (!pathPoints || pathPoints.length === 0) {\n            throw new Error('Path points cannot be null or undefined.');\n        }\n        if (!pathTypes || pathTypes.length === 0) {\n            throw new Error('Path types cannot be null or undefined.');\n        }\n        if (pathPoints.length !== pathTypes.length) {\n            throw new Error('The argument arrays should be of equal length.');\n        }\n        for (var i = 0; i < pathPoints.length; i++) {\n            if (i >= pathPoints.length || i < 0) {\n                throw new Error('Index' + i + 'is out of bounds.');\n            }\n            this._points.push(pathPoints[Number.parseInt(i.toString(), 10)].slice());\n            this._pathTypes.push(pathTypes[Number.parseInt(i.toString(), 10)]);\n        }\n    };\n    /**\n     * Adds a line segment to the path.\n     *\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a line segment to the path\n     * path.addLine(10, 250, 200, 250);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], PathPointType.line);\n    };\n    PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this.addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i += 2) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this.lastPoint[0] || point[1] !== this.lastPoint[1])) {\n                    this._addPoint(point, PathPointType.line);\n                }\n                else if (point[0] !== this.lastPoint[0] && point[1] !== this.lastPoint[1]) {\n                    this._addPoint(point, PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n        }\n    };\n    PdfPath.prototype._addPoint = function (point, type) {\n        this._points.push(point);\n        this._pathTypes.push(type);\n    };\n    /**\n     * Adds an arc within a bounding rectangle using the angles that define the start and sweep of the arc.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} width The width of the rectangular region.\n     * @param {number} height The height of the rectangular region.\n     * @param {number} startAngle The start angle of the arc.\n     * @param {number} sweepAngle The angle between start angle and the end of the arc.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('Empty.pdf'));\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(10, 100, 50, 150, 150, 150, 200, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, PathPointType.bezier);\n        }\n    };\n    /**\n     * Adds a rectangle to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangle.\n     * @param {number} width The width of the rectangle.\n     * @param {number} height The height of the rectangle.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a rectangle to the path\n     * path.addRectangle(10, 20, 50, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addRectangle = function (x, y, width, height) {\n        this.startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds a polygon to the path.\n     *\n     * @param {Array<number[]>} points The points of the polygon, where each point is an array of two numbers representing the x and y coordinates.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a polygon to the path\n     * path.addPolygon([[200, 10], [300, 100], [150, 100], [200, 10]]);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this.startFigure();\n        this._addPoints(newPoints, PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds an ellipse to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} width The width of the bounding rectangle for the ellipse.\n     * @param {number} height The height of the bounding rectangle for the ellipse.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add an ellipse to the path\n     * path.addEllipse(200, 200, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addEllipse = function (x, y, width, height) {\n        this.startFigure();\n        this.addArc(x, y, width, height, 0, 360);\n        this.closeFigure();\n    };\n    /**\n     * Adds a Bezier curve to the path using specified coordinates for the start point, two control points, and the end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(100, 100, 150, 150, 50, 250, 100, 300);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [startX, startY, firstX, firstY, secondX, secondY, endX, endY];\n        this._addPoints(points, PathPointType.bezier);\n    };\n    PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this.addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    /**\n     * Adds a pie slice to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} width The width of the bounding rectangle.\n     * @param {number} height The height of the bounding rectangle.\n     * @param {number} startAngle The angle in degrees measured clockwise from the x-axis to the start of the pie slice.\n     * @param {number} sweepAngle The angle in degrees measured clockwise from the startAngle parameter to the end of the pie slice.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a pie slice to the path\n     * path.addPie(0, 20, 100, 100, 270, 45);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPie = function (x, y, width, height, startAngle, sweepAngle) {\n        this.startFigure();\n        this.addArc(x, y, width, height, startAngle, sweepAngle);\n        this._addPoint([x + width / 2, y + height / 2], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Starts a new figure in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Start a new figure in the path\n     * path.startFigure();\n     * // Add some path points (optional)\n     * path.addLine(50, 50, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.startFigure = function () {\n        this._isStart = true;\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this.closeFigure(this._points.length - 1);\n            }\n            this.startFigure();\n        }\n    };\n    /**\n     * Closes all non-closed figures in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n     * // Close all non-closed figures\n     * path.closeAllFigures();\n     * // Draw the path on the PDF page\n     * page.graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        for (var i = 0; i < this._points.length; ++i) {\n            var pointType = this._pathTypes[Number.parseInt(i.toString(), 10)];\n            var flag = false;\n            if (i !== 0 && pointType === PathPointType.start) {\n                this.closeFigure(i - 1);\n                flag = true;\n            }\n            else if (i === this._pathTypes.length - 1 && !flag && this._isXps) {\n                if (this._points[0][0] === this._points[Number.parseInt(i.toString(), 10)][0] &&\n                    this._points[0][1] === this._points[Number.parseInt(i.toString(), 10)][1]) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return PdfPath;\n}());\nexport { PdfPath };\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _PdfBaseStream } from './../base-stream';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfFont, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode, PathPointType } from './../enumerator';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { PdfPath } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphics` class.\n     *\n     * @param {number[]} size The graphics client size.\n     * @param {_PdfContentStream} content Content stream.\n     * @param {_PdfCrossReference} xref Cross reference.\n     * @param {PdfPage | PdfTemplate} source Source object of the graphics.\n     * @private\n     */\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._isItalic = false;\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj) {\n                if (obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = xref._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the size of the canvas reduced by margins and page templates (Read only).\n         *\n         * @returns {number[]} The width and height of the client area as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics client size.\n         * let size: number[] = page.graphics.clientSize;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return [this._clipBounds[2], this._clipBounds[3]];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject && this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(result.pen, result.brush);\n    };\n    /**\n     * Draws a Bezier curve using a specified pen and coordinates for the start point, two control points, and end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a Bezier curve on the page graphics\n     * graphics.drawBezier(50, 100, 200, 50, 100, 150, 150, 100, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY, pen) {\n        this._stateControl(pen, null, null);\n        this._sw._beginPath(startX, startY);\n        this._sw._appendBezierSegment(firstX, firstY, secondX, secondY, endX, endY);\n        this._drawGraphicsPath(pen);\n    };\n    PdfGraphics.prototype.drawPie = function (x, y, width, height, startAngle, sweepAngle, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._constructPiePath(x, y, x + width, y + height, startAngle, sweepAngle);\n        this._sw._appendLineSegment(x + width / 2, y + height / 2);\n        this._drawGraphicsPath(result.pen, result.brush, null, true);\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        if (points.length > 0) {\n            var result = this._setPenBrush(first, second);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n        }\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} width Width of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} height Height of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} startAngle Angle measured in degrees clockwise from the x-axis to the first side of the arc shape.\n     * @param {number} sweepAngle Angle measured in degrees clockwise from the startAngle parameter to the second side of the arc shape.\n     * @param {PdfPen} pen Pen that determines the stroke color, width, and style of the arc.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw an arc on the page graphics\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    /**\n     * Draws a PDF template onto the page graphics.\n     *\n     * @param {PdfTemplate} template The PDF template to be drawn.\n     * @param {{x: number, y: number, width: number, height: number}} bounds The bounds of the template.\n     * @param {number} bounds.x The x-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.y The y-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.width The width of the area where the template will be drawn.\n     * @param {number} bounds.height The height of the area where the template will be drawn.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Get the appearance template of the annotation\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Get the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Draw the template on the page graphics within the specified bounds\n     * graphics.drawTemplate(template, { x: 10, y: 20, width: template.size[0], height: template.size[1] });\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawTemplate = function (template, bounds) {\n        var _this = this;\n        if (typeof template !== 'undefined') {\n            if (template._isExported || template._isResourceExport) {\n                if (this._crossReference) {\n                    template._crossReference = this._crossReference;\n                    template._importStream(true, template._isResourceExport);\n                }\n                else {\n                    template._importStream(false, template._isResourceExport);\n                    this._pendingResource.push(template);\n                }\n            }\n            var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n            var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n            var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n            var cropBox = void 0;\n            var mediaBox = void 0;\n            if (this._page) {\n                cropBox = this._page.cropBox;\n                mediaBox = this._page.mediaBox;\n                if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                    if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                        this.translateTransform(cropBox[0], -cropBox[1]);\n                        bounds.x = -cropBox[0];\n                        bounds.y = cropBox[1];\n                    }\n                }\n            }\n            var state = this.save();\n            var matrix = new _PdfTransformationMatrix();\n            if (this._page) {\n                var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                    this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                    cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                    (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n                matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n            }\n            else {\n                matrix._translate(bounds.x, -(bounds.y + bounds.height));\n            }\n            if (needScale) {\n                if (template._isAnnotationTemplate && template._needScale) {\n                    var scaleApplied = false;\n                    if (template._content && template._content.dictionary) {\n                        var dictionary = template._content.dictionary;\n                        if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                            var templateMatrix = dictionary.getArray('Matrix');\n                            var templateBox = dictionary.getArray('BBox');\n                            if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                                var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                                var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                                var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                                var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                                if (roundScaleX === templateScaleX &&\n                                    roundScaleY === templateScaleY &&\n                                    templateBox[2] === template._size[0] &&\n                                    templateBox[3] === template._size[1]) {\n                                    matrix = new _PdfTransformationMatrix();\n                                    matrix._translate(bounds.x - templateMatrix[4], -(bounds.y + templateMatrix[5]));\n                                    matrix._scale(1, 1);\n                                    scaleApplied = true;\n                                }\n                            }\n                        }\n                    }\n                    if (!scaleApplied) {\n                        matrix._scale(scaleX, scaleY);\n                    }\n                }\n                else {\n                    matrix._scale(scaleX, scaleY);\n                }\n            }\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var isReference = false;\n            var keyName_1;\n            var isNew = true;\n            var ref_1;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj) {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        sourceDictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        sourceDictionary = obj;\n                    }\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                    this._resources.forEach(function (value, key) {\n                        if (key && key instanceof _PdfReference) {\n                            var base = _this._crossReference._fetch(key);\n                            if (base && template && base === template._content) {\n                                keyName_1 = value;\n                                ref_1 = key;\n                            }\n                        }\n                    });\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName_1 === 'undefined') {\n                keyName_1 = _PdfName.get(_getNewGuidString());\n                if (template && template._content.reference) {\n                    ref_1 = template._content.reference;\n                }\n                else if (this._crossReference) {\n                    ref_1 = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': template._content, 'key': keyName_1, 'source': sourceDictionary });\n                }\n                if (ref_1 && this._crossReference) {\n                    if (!this._crossReference._cacheMap.has(ref_1) && template && template._content) {\n                        this._crossReference._cacheMap.set(ref_1, template._content);\n                    }\n                    sourceDictionary.update(keyName_1.name, ref_1);\n                    this._resources.set(ref_1, keyName_1);\n                }\n                this._resourceObject._updated = true;\n            }\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n            this._sw._executeObject(keyName_1);\n            this.restore(state);\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        this._crossReference = crossReference;\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry instanceof PdfTemplate) {\n                    entry._crossReference = crossReference;\n                    entry._updatePendingResource(crossReference);\n                }\n                else if (entry.resource instanceof _PdfBaseStream) {\n                    var reference = void 0;\n                    if (entry.resource._reference) {\n                        reference = entry.resource._reference;\n                    }\n                    else {\n                        reference = crossReference._getNextReference();\n                        entry.resource._reference = reference;\n                    }\n                    if (!crossReference._cacheMap.has(reference) && entry.resource) {\n                        crossReference._cacheMap.set(reference, entry.resource);\n                    }\n                    entry.source.update(entry.key.name, reference);\n                    this._resources.set(reference, entry.key);\n                }\n                else if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                else if (entry.resource instanceof PdfFont) {\n                    this._updateFontResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var reference;\n        if (image._reference) {\n            reference = image._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            image._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(reference, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n                if (image._maskStream && image._maskStream.dictionary) {\n                    var ref = void 0;\n                    if (image._maskReference) {\n                        ref = image._maskReference;\n                    }\n                    else {\n                        ref = crossReference._getNextReference();\n                        image._maskReference = ref;\n                    }\n                    crossReference._cacheMap.set(ref, image._maskStream);\n                    image._maskStream.dictionary._updated = true;\n                    image._imageStream.dictionary.set('SMask', ref);\n                }\n            }\n        }\n        source.update(keyName.name, reference);\n        this._resources.set(reference, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._updateFontResource = function (font, keyName, source, crossReference) {\n        var reference;\n        if (font._reference) {\n            reference = font._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            font._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (font._dictionary) {\n                crossReference._cacheMap.set(reference, font._dictionary);\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    crossReference._cacheMap.set(reference, internal._fontDictionary);\n                }\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (path, first, second) {\n        var result = this._setPenBrush(first, second);\n        if (result.pen || result.brush) {\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(result.pen, result.brush, path.fillMode, false);\n        }\n    };\n    /**\n     * Draws a rounded rectangle on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} width The width of the rounded rectangle.\n     * @param {number} height The height of the rounded rectangle.\n     * @param {number} radius The radius of the rounded corners of the rectangle.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the rectangle.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the rectangle.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * // Draw a rounded rectangle on the page graphics\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new PdfPath();\n        if (radius === 0) {\n            path.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this.drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path.closeFigure();\n            this.drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._constructPiePath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n            this._sw._beginPath(point[0], point[1]);\n            for (var i = 0; i < points.length; i = i + 8) {\n                point = [points[Number.parseInt(i.toString(), 10)],\n                    points[i + 1],\n                    points[i + 2],\n                    points[i + 3],\n                    points[i + 4],\n                    points[i + 5],\n                    points[i + 6],\n                    points[i + 7]];\n                this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n            }\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        var setPattern = [];\n        for (var i = 0; i < pattern.length; ++i) {\n            setPattern[i] = pattern[i] * pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(setPattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value The string to be drawn.\n     * @param {PdfFont} font The font used to draw the string.\n     * @param {number[]} bounds An array specifying the bounds [x, y, width, height] where the string will be drawn.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the string.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the string.\n     * @param {PdfStringFormat} format The format that specifies text layout information such as alignment, line spacing, and trimming.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 12);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        var layouter = new _PdfStringLayouter();\n        if (!format) {\n            format = new PdfStringFormat();\n        }\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & PathPointType.closePath) === PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        var hasResource = false;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n            }\n            if (typeof sourceDictionary !== 'undefined' && sourceDictionary !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (_this._crossReference) {\n                        if (key !== null && typeof key !== 'undefined') {\n                            var dictionary = _this._crossReference._fetch(key);\n                            if (dictionary && ((font instanceof PdfStandardFont && dictionary === font._dictionary) ||\n                                (font instanceof PdfTrueTypeFont && dictionary === font._fontInternal._fontDictionary))) {\n                                keyName = value;\n                                ref = key;\n                                hasResource = true;\n                            }\n                        }\n                    }\n                    else if (font._reference && font._reference === key) {\n                        keyName = value;\n                        ref = key;\n                        hasResource = true;\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                if (font._reference) {\n                    ref = font._reference;\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (this._crossReference) {\n                    ref = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': font, 'key': keyName, 'source': sourceDictionary });\n                }\n            }\n            if (ref && this._crossReference) {\n                if (!font._reference) {\n                    font._reference = ref;\n                }\n                if (font._dictionary) {\n                    this._crossReference._cacheMap.set(ref, font._dictionary);\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (font instanceof PdfTrueTypeFont) {\n                    var internal = font._fontInternal;\n                    if (internal && internal._fontDictionary) {\n                        this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                    }\n                    sourceDictionary.update(keyName.name, ref);\n                }\n            }\n            if (!hasResource) {\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._setPenBrush = function (first, second) {\n        var pen;\n        var brush;\n        if (first) {\n            if (first instanceof PdfPen) {\n                pen = first;\n            }\n            else {\n                brush = first;\n            }\n        }\n        if (second && second instanceof PdfBrush) {\n            brush = second;\n        }\n        this._stateControl(pen, brush, null);\n        return { pen: pen, brush: brush };\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            if (font && font instanceof PdfTrueTypeFont && font._fontInternal &&\n                font._fontInternal instanceof _UnicodeTrueTypeFont && font.isItalic) {\n                if (!font._fontInternal._ttfMetrics._isItalic) {\n                    state = this.save();\n                    this._isItalic = true;\n                }\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            if (this._isItalic) {\n                this.translateTransform(layoutRectangle[0] + font.size / 5, layoutRectangle[1] - shift + verticalAlignShift);\n                this._skewTransform(0, -11);\n            }\n            else {\n                matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                    verticalAlignShift);\n                this._sw._modifyTM(matrix);\n            }\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            if (this._isItalic) {\n                this._sw._startNextLine(0, 0);\n                this._sw._setLeading(+height);\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            if (this._isItalic) {\n                this.restore(state);\n            }\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex <= pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        else {\n            page = this._crossReference._document.addPage();\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        var setLineWidth = false;\n        if (pen && brush) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (font && font instanceof PdfTrueTypeFont && (font.isUnicode || (font._style & PdfFontStyle.bold) !== 0)) {\n            var fontName = font._fontInternal._metrics._postScriptName;\n            var isBoldFont = false;\n            if (fontName && fontName.toLocaleLowerCase().includes('bold')) {\n                isBoldFont = true;\n            }\n            if (font._fontInternal && font._fontInternal._metrics && font._fontInternal._metrics._isBold !==\n                font.isBold && font.isBold === true && !isBoldFont) {\n                if (!pen && brush) {\n                    pen = new PdfPen(brush._color, 1);\n                }\n                tm = _TextRenderingMode.fillStroke;\n                setLineWidth = true;\n            }\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n        if (font && setLineWidth) {\n            this._sw._setLineWidth(font.size / 30);\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && format.wordSpacing > 0);\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format !== null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && goodLineBreakStyle);\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draws a line on the page graphics.\n     *\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the line.\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a line on the page graphics\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply scale transform\n     * graphics.scaleTransform(0.5, 0.5);\n     * // Draw a string with the scaled transformation\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply translate transform\n     * graphics.translateTransform(100, 100);\n     * // Draw a string with the translation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply rotate transform\n     * graphics.rotateTransform(-90);\n     * // Draw a string with the rotation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region, specified as [x, y, width, height].\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set clipping region\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * // Draw a string within the clipping region\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Sets the transparency for the graphics.\n     *\n     * @param {number} stroke The transparency value for strokes.\n     * @param {number} fill The transparency value for fills.\n     * @param {PdfBlendMode} mode The blend mode to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set transparency\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * // Draw the string\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary) {\n            if (dictionary.has('CA')) {\n                stroke = dictionary.get('CA');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('BM')) {\n                mode = _mapBlendMode(dictionary.get('BM'));\n            }\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    PdfGraphics.prototype._clipTranslateMargins = function (clipBounds) {\n        this._clipBounds = clipBounds;\n        this._sw._writeComment('Clip margins.');\n        this._sw._appendRectangle(clipBounds[0], clipBounds[1], clipBounds[2], clipBounds[3]);\n        this._sw._closePath();\n        this._sw._clipPath(false);\n        this._sw._writeComment('Translate co-ordinate system.');\n        this.translateTransform(clipBounds[0], clipBounds[1]);\n    };\n    PdfGraphics.prototype._skewTransform = function (angleX, angleY) {\n        var matrix = new _PdfTransformationMatrix();\n        this._getSkewTransform(angleX, angleY, matrix);\n        this._sw._modifyCtm(matrix);\n        matrix._multiply(matrix);\n    };\n    PdfGraphics.prototype._getSkewTransform = function (angleX, angleY, input) {\n        input._skew(-angleX, -angleY);\n        return input;\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    _PdfTransformationMatrix.prototype._skew = function (angleX, angleY) {\n        var tanA = Math.tan(this._degreeToRadians(angleX));\n        var tanB = Math.tan(this._degreeToRadians(angleY));\n        var skew = new _Matrix(1, tanA, tanB, 1, 0, 0);\n        this._matrix._multiply(skew);\n    };\n    _PdfTransformationMatrix.prototype._degreeToRadians = function (degreesX) {\n        var degreeRadFactor = Math.PI / 180;\n        return degreeRadFactor * degreesX;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics state\n * let state: PdfGraphicsState = graphics.save();\n * // Set graphics translate transform\n * graphics.translateTransform(100, 100);\n * // Draw the string\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * // Restore the graphics state\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode, _compressStream } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary && dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary && annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup && popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key, isNewReference) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                if (dictionary.has(key)) {\n                    this._writeArray(writer, dictionary.getArray(key), dictionary);\n                }\n                else {\n                    this._writeArray(writer, primitive, dictionary);\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = void 0;\n                    if (isNewReference) {\n                        if (streamDictionary.has('Filter') && streamDictionary.get('Filter').name === 'DCTDecode') {\n                            data = primitive.getString(true);\n                        }\n                        else {\n                            data = _compressStream(primitive, true);\n                        }\n                    }\n                    else {\n                        data = primitive.getString(true);\n                    }\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    data = data.replace(/</g, '&lt;');\n                    data = data.replace(/>/g, '&gt;');\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key, primitive._isNew);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        var bytes;\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                    break;\n                case 'TextMarkupContent':\n                    bytes = _stringToBytes(primitive);\n                    this._writeAttributeString(writer, key.toLowerCase(), _byteArrayToHexString(bytes));\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data, true);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data, true), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                if (annotations._comments && annotations._comments.length > 0) {\n                                    annotations._comments = [];\n                                }\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _bytesToString, _hexStringToByteArray, _decode, _isNullOrUndefined, _compressStream } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._isImport = false;\n        _this._isColorSpace = false;\n        _this._isDuplicate = false;\n        _this._isGroupingSupport = false;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            _this._jsonData = _stringToBytes(key, true, false, _this._jsonData);\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                _this._jsonData = _stringToBytes(value, true, false, _this._jsonData);\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _stringToBytes(i.toString(), true, false, []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            var count = 0;\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    if (count !== 0) {\n                        this._jsonData.push(this._comma);\n                    }\n                    count++;\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _stringToBytes(this._convertToJson(this._table), true, false, this._jsonData);\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary && dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        var rcValue;\n        var bytes;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (_isNullOrUndefined(value)) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive) {\n                    var bytes_1 = _stringToBytes(primitive);\n                    var styleTable = new Map();\n                    styleTable.set('unicodeData', _byteArrayToHexString(bytes_1));\n                    this._table.set(key, this._convertToJson(styleTable));\n                }\n                break;\n            case 'RC':\n                rcValue = dictionary.get('RC');\n                if (typeof rcValue === 'string' && rcValue.includes('<body')) {\n                    var index = rcValue.indexOf('<body');\n                    if (index > 0) {\n                        rcValue = rcValue.substring(index);\n                    }\n                    this._writeAttributeString('contents-richtext', rcValue);\n                }\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n                break;\n            case 'TextMarkupContent':\n                bytes = _stringToBytes(primitive);\n                this._writeAttributeString(key, _byteArrayToHexString(bytes));\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            default:\n                if (typeof primitive === 'string' && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (_isNullOrUndefined(vertices) && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('area', array[0]);\n                }\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('distance', array[0]);\n                }\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('xformat', array[0]);\n                }\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('tformat', array[0]);\n                }\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('vformat', array[0]);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails) {\n            if (measurementDetails.has('C')) {\n                details.set('c', this._getValue(measurementDetails.get('C'), true));\n            }\n            if (measurementDetails.has('F')) {\n                details.set('f', this._getValue(measurementDetails.get('F'), true));\n            }\n            if (measurementDetails.has('D')) {\n                details.set('d', this._getValue(measurementDetails.get('D'), true));\n            }\n            if (measurementDetails.has('RD')) {\n                details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n            }\n            if (measurementDetails.has('U')) {\n                details.set('u', this._getValue(measurementDetails.get('U'), true));\n            }\n            if (measurementDetails.has('RT')) {\n                details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n            }\n            if (measurementDetails.has('SS')) {\n                details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n            }\n            if (measurementDetails.has('FD')) {\n                details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n            }\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && _this._isGroupingSupport))) {\n                    _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n                }\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array, isColorSpace, isNewReference) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        if (isNewReference === void 0) { isNewReference = false; }\n        if (value instanceof _PdfName) {\n            value.name = this._getValidString(value.name);\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var list = [];\n            if (key === 'ColorSpace' || isColorSpace) {\n                this._writeArray(list, value, dictionary, true);\n            }\n            else {\n                this._writeArray(list, value, dictionary);\n            }\n            this._isColorSpace = false;\n            this._writeTable('array', this._convertToJsonArray(list), table, key, array);\n        }\n        else if (typeof value === 'string') {\n            var isTabSpace = false;\n            if (value.indexOf('\\t') !== -1) {\n                isTabSpace = true;\n            }\n            if (key !== 'AllowedInteractions') {\n                value = this._getValidString(value);\n            }\n            if (this._isColorSpace || key === 'AllowedInteractions' || this._hasUnicodeCharacters(value) || isTabSpace) {\n                var bytes = _stringToBytes(value);\n                this._writeTable('unicodeData', _byteArrayToHexString(bytes), table, key, array);\n                isTabSpace = false;\n            }\n            else {\n                this._writeTable('string', value, table, key, array);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = void 0;\n            var baseStream = value; // eslint-disable-line\n            var isImageStream = false;\n            if (streamDictionary.has('Subtype') && streamDictionary.get('Subtype').name === 'Image') {\n                isImageStream = true;\n            }\n            if (isNewReference) {\n                if (value.dictionary.has('Filter') && value.dictionary.get('Filter').name === 'DCTDecode') {\n                    data = value.getString(true);\n                }\n                else {\n                    data = _compressStream(value, true);\n                }\n                if (!streamDictionary.has('Length') && data && data !== '') {\n                    streamDictionary.update('Length', baseStream.length);\n                }\n            }\n            else {\n                if (isImageStream && baseStream.stream) {\n                    if (baseStream.stream instanceof _PdfStream) {\n                        if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                            var streamLength = baseStream.stream.end - baseStream.stream.start;\n                            baseStream.getBytes(streamLength);\n                            var bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                            data = baseStream.getString(true, bytes);\n                        }\n                        else {\n                            var stream = baseStream.stream;\n                            data = baseStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                        }\n                    }\n                    else if (baseStream.stream.stream) {\n                        var flateStream = baseStream.stream; // eslint-disable-line\n                        if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                            var streamLength = flateStream.stream.end - flateStream.stream.start;\n                            flateStream.getBytes(streamLength);\n                            var bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                            data = flateStream.getString(true, bytes);\n                        }\n                        else if (flateStream.stream instanceof _PdfStream) {\n                            var stream = flateStream.stream;\n                            data = flateStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                        }\n                    }\n                }\n                else {\n                    data = value.getString(true);\n                }\n                if (!streamDictionary.has('Length') && data && data !== '') {\n                    streamDictionary.update('Length', value.length);\n                }\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key, array, isColorSpace, value._isNew);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary, isColorSpace) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        for (var i = 0; i < value.length; i++) {\n            if (isColorSpace && typeof value[Number.parseInt(i.toString(), 10)] === 'string') {\n                this._isColorSpace = true;\n            }\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array, isColorSpace);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += \"\\\"\" + key + \"\\\":\" + value;\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._hasUnicodeCharacters = function (value) {\n        var unicodeRegex = /[^\\x00-\\x7F]/; // eslint-disable-line\n        return value.split('').some(function (char) { return unicodeRegex.exec(char) !== null; }); // eslint-disable-line\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data, true);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        this._isImport = true;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            if (annotations_1._comments && annotations_1._comments.length > 0) {\n                                                                annotations_1._comments = [];\n                                                            }\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'contents-richtext':\n                    if (typeof value === 'string') {\n                        _this._addString(dictionary, 'RC', value);\n                    }\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    if (value) {\n                        if (value && typeof value === 'string') {\n                            _this._addString(dictionary, 'AllowedInteractions', value);\n                        }\n                        else {\n                            var interactionKeys = Object.keys(value);\n                            if (interactionKeys && interactionKeys.length > 0 && interactionKeys.indexOf('unicodeData') !== -1) {\n                                var convertString = JSON.stringify(value['unicodeData']);\n                                convertString = convertString.substring(1, convertString.length - 1);\n                                value = _bytesToString(_hexStringToByteArray(convertString, false), true);\n                                _this._addString(dictionary, 'AllowedInteractions', value);\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, typeof value === 'string' ? value : JSON.stringify(value));\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            if (dictionary.size > 0) {\n                value = this._crossReference._getNextReference();\n                dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n                this._crossReference._cacheMap.set(value, dictionary);\n            }\n            else {\n                value = new _PdfDictionary(this._crossReference);\n            }\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else if (keys.indexOf('unicodeData') !== -1) {\n            value = _bytesToString(_hexStringToByteArray(element.unicodeData, false), true);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            if (this._crossReference) {\n                this._parseStreamElements(stream, element);\n            }\n            else {\n                stream._pendingResources = JSON.stringify(element);\n            }\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStreamElements = function (stream, element) {\n        if (typeof element === 'undefined' && stream._pendingResources) {\n            element = JSON.parse(stream._pendingResources);\n        }\n        if (element) {\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage || (this._isImport && stream._isCompress)) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n        }\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\nimport { _JsonDocument } from './../import-export/json-document';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._isExported = false;\n        this._isResourceExport = false;\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n                this._templateOriginalSize = this._size;\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            if (typeof value !== 'undefined') {\n                this._size = [value[2], value[3]];\n                this._content = new _PdfContentStream([]);\n                this._content.dictionary._crossReference = this._crossReference;\n                this._initialize();\n                this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n            }\n            else {\n                this._isReadOnly = true;\n            }\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template. (Read only)\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        /**\n         * Get the size of the PDF template. (Read only)\n         *\n         * @returns {number[]} Template width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array.\n         * let size: number[] = template.size;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"_originalSize\", {\n        /**\n         * Get the original size of the PDF template. (Read only)\n         *\n         * Remarks: The `_originalSize` property is internal and provides access to the original dimensions of the PDF template.\n         *\n         * @returns {number[]} Template original width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array\n         * let size: number[] = template._originalSize;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._templateOriginalSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    PdfTemplate.prototype._exportStream = function (dictionary, crossReference) {\n        var jsonDocument = new _JsonDocument();\n        jsonDocument._crossReference = crossReference;\n        jsonDocument._isAnnotationExport = true;\n        var resourceTable = new Map();\n        jsonDocument._writeObject(resourceTable, dictionary.get('N'), dictionary, 'normal');\n        this._appearance = jsonDocument._convertToJson(resourceTable);\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._importStream = function (hasCrossReference, isResourceExport) {\n        var jsonDocument = new _JsonDocument();\n        if (hasCrossReference) {\n            jsonDocument._crossReference = this._crossReference;\n        }\n        var json = JSON.parse(this._appearance); // eslint-disable-line    \n        if (json) {\n            var entryKey = isResourceExport ? 'resources' : 'normal'; // eslint-disable-line\n            var entry = json[entryKey]; // eslint-disable-line    \n            if (entry) {\n                if (isResourceExport) {\n                    var resourceDictionary = jsonDocument._parseDictionary(entry['dict']);\n                    if (hasCrossReference) {\n                        this._content.dictionary.update('Resources', resourceDictionary);\n                    }\n                }\n                else {\n                    this._content = jsonDocument._parseStream(entry['stream']);\n                    if (hasCrossReference) {\n                        this._content.dictionary._crossReference = this._crossReference;\n                        this._content.dictionary._updated = true;\n                    }\n                }\n            }\n        }\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._updatePendingResource = function (crossReference) {\n        if (this._content._pendingResources && this._content._pendingResources !== '') {\n            var jsonDocument = new _JsonDocument();\n            jsonDocument._crossReference = crossReference;\n            jsonDocument._parseStreamElements(this._content);\n            this._content._pendingResources = '';\n            jsonDocument._dispose();\n        }\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName } from './pdf-primitives';\nimport { _obtainDestination } from './utils';\n/**\n * Represents base class for all action types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the GoTo action to the mouse enter property of the button field\n * let pdfAction: PdfAction = field.actions.mouseEnter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfAction = /** @class */ (function () {\n    function PdfAction() {\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        /**\n         * Get the next action to be performed after the action represented by this instance.\n         *\n         * @returns {PdfAction} The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * // Create a PdfGoToAction for navigating to the specified page.\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._next;\n        },\n        /**\n         * Set the next action to be performed after the action represented by this instance.\n         *\n         * @param {PdfAction} value The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the third page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._next = value;\n            var reference = this._page._crossReference._getNextReference();\n            this._page._crossReference._cacheMap.set(reference, value._dictionary);\n            value._dictionary.objId = reference.toString();\n            this._dictionary.update('Next', reference);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n/**\n * Represents an action which goes to a destination in the current document.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Set the goto action to the button\n * field.actions.mouseEnter = gotoAction;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfGoToAction = /** @class */ (function (_super) {\n    __extends(PdfGoToAction, _super);\n    function PdfGoToAction(arg) {\n        var _this = _super.call(this) || this;\n        if (arg instanceof PdfDestination) {\n            _this._destination = arg;\n            _this._page = arg.page;\n        }\n        else {\n            _this._page = arg;\n            _this._destination = new PdfDestination(arg, [0, 0]);\n        }\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', new _PdfName('Action'));\n        _this._dictionary.update('S', new _PdfName('GoTo'));\n        return _this;\n    }\n    Object.defineProperty(PdfGoToAction.prototype, \"destination\", {\n        /**\n         * Get the destination to be navigated.\n         *\n         * @returns {PdfDestination} The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter.destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Set the destination to be navigated.\n         *\n         * @param {PdfDestination} value The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the goto action to the button\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._destination = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGoToAction;\n}(PdfAction));\nexport { PdfGoToAction };\n/**\n * Represents actions to be performed as response to field events.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the pdf field actions\n * let fieldActions: PdfFieldActions = field.actions;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfFieldActions = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfFieldActions` class.\n     *\n     * @private\n     * @param {PdfField} field field items.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access button field\n     * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n     * // Access the second page\n     * let secondPage: PdfPage = document.getPage(2);\n     * // Create a PdfDestination for the specified page\n     * let destination: PdfDestination = new PdfDestination(secondPage)\n     * // Creates a new PdfGoToAction with the specified destination\n     * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n     * // Set the goto action to the button\n     * field.actions.mouseEnter = gotoAction;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfFieldActions(field) {\n        this._field = field;\n    }\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseEnter\", {\n        /**\n         * Get the action to be performed when the mouse cursor enters the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse enters the field area\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseEnter) {\n                this._mouseEnter = this._getPdfAction('E');\n            }\n            return this._mouseEnter;\n        },\n        /**\n         * Set the action to be performed when the mouse cursor enters the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseEnter = value;\n                this._updateAction(this._mouseEnter, 'E');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseLeave\", {\n        /**\n         * Get the action to be performed when the cursor exits the fields area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse leave the field area.\n         * let action: PdfAction = field.actions.mouseLeave;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseLeave) {\n                this._mouseLeave = this._getPdfAction('X');\n            }\n            return this._mouseLeave;\n        },\n        /**\n         * Set the action to be performed when the cursor exits the fields area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse leave property of the button field\n         * field.actions.mouseLeave = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseLeave = value;\n                this._updateAction(this._mouseLeave, 'X');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseUp\", {\n        /**\n         * Get the action to be performed when the mouse button is released inside the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse up the field area.\n         * let action: PdfAction = field.actions.mouseUp;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseUp) {\n                this._mouseUp = this._getPdfAction('U');\n            }\n            return this._mouseUp;\n        },\n        /**\n         * Set the action to be performed when the mouse button is released inside the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse up property of the button field\n         * field.actions.mouseUp = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseUp = value;\n                this._updateAction(this._mouseUp, 'U');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseDown\", {\n        /**\n         * Get the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse down the field area.\n         * let action: PdfAction = field.actions.mouseDown;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseDown) {\n                this._mouseDown = this._getPdfAction('D');\n            }\n            return this._mouseDown;\n        },\n        /**\n         * Set the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse down property of the button field\n         * field.actions.mouseDown = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseDown = value;\n                this._updateAction(this._mouseDown, 'D');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"gotFocus\", {\n        /**\n         * Get the action to be performed when the field receives the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the got focus the field area.\n         * let action: PdfAction = field.actions.gotFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._gotFocus) {\n                this._gotFocus = this._getPdfAction('Fo');\n            }\n            return this._gotFocus;\n        },\n        /**\n         * Set the action to be performed when the field receives the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the got focus property of the button field\n         * field.actions.gotFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._gotFocus = value;\n                this._updateAction(this._gotFocus, 'Fo');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"lostFocus\", {\n        /**\n         * Get the action to be performed when the field loses the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the lost focus the field area.\n         * let action: PdfAction = field.actions.lostFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._lostFocus) {\n                this._lostFocus = this._getPdfAction('Bl');\n            }\n            return this._lostFocus;\n        },\n        /**\n         * Set the action to be performed when the field loses the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the lost focus property of the button field\n         * field.actions.lostFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._lostFocus = value;\n                this._updateAction(this._lostFocus, 'Bl');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFieldActions.prototype._updateAction = function (action, key) {\n        var widget;\n        if (this._field._kidsCount > 0) {\n            widget = this._field.itemAt(0);\n            if (widget && widget._dictionary && action instanceof PdfGoToAction) {\n                var dictionary = new _PdfDictionary();\n                var page = action._page;\n                var destination = action.destination;\n                if (destination._destinationMode === PdfDestinationMode.location) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('XYZ'), destination.location[0], page.size[1], destination.zoom]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitR) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitR'), 0, 0, 0, 0]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitH) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitH'), page.size[1]]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitToPage) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('Fit')]);\n                }\n                dictionary.set(key, action._dictionary);\n                dictionary._updated = true;\n                widget._dictionary.update('AA', dictionary);\n            }\n        }\n    };\n    PdfFieldActions.prototype._getPdfAction = function (key) {\n        var result;\n        var widget = this._field.itemAt(0);\n        if (widget && widget._dictionary && widget._dictionary.has('AA')) {\n            var action = widget._dictionary.get('AA');\n            if (action && action.has(key)) {\n                var dictionary = action.get(key);\n                if (dictionary && dictionary.has('S')) {\n                    var type = dictionary.get('S');\n                    if (type && type.name === 'GoTo' && dictionary.has('D')) {\n                        if (!dictionary._crossReference) {\n                            dictionary._crossReference = widget._crossReference;\n                        }\n                        result = new PdfGoToAction(_obtainDestination(dictionary, 'D'));\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    return PdfFieldActions;\n}());\nexport { PdfFieldActions };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails, _isNullOrUndefined, _stringToPdfString, _mapFont } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\nimport { PdfFieldActions } from '../pdf-action';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._enableGrouping = false;\n        this._isDuplicatePage = false;\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._isTransparentBorderColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isUpdating = false;\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary && this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color && _isNullOrUndefined(value)) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var annots = void 0;\n                if (this.page._pageDictionary.has('Annots')) {\n                    annots = this.page._pageDictionary.get('Annots');\n                }\n                if (this._kids && this._kids.length > 0) {\n                    for (var i = 0; i < this._kids.length; i++) {\n                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                        if (reference) {\n                            if (this.page._pageDictionary.has('Annots')) {\n                                if (annots) {\n                                    var index1 = annots.indexOf(reference);\n                                    if (index1 !== -1) {\n                                        return index1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (this._dictionary && this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                    if (this._ref) {\n                        if (annots) {\n                            var index1 = annots.indexOf(this._ref);\n                            if (index1 !== -1) {\n                                return index1;\n                            }\n                        }\n                    }\n                }\n                return -1;\n            }\n            else {\n                return this._tabIndex;\n            }\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            if (this._isLoaded) {\n                var page = this.page;\n                if (page &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual ||\n                        (this.form && this.form._tabOrder === PdfFormFieldsTabOrder.manual))) {\n                    if (page._pageDictionary.has('Annots')) {\n                        var annots = page._pageDictionary.get('Annots');\n                        var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                        page._annotations = annotationCollection;\n                        var index = annots.indexOf(this._ref);\n                        if (index < 0) {\n                            index = this._annotationIndex;\n                        }\n                        var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                        page._pageDictionary.update('Annots', annotations);\n                        page._pageDictionary._updated = true;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary && dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._parseBorderColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict.has('BC')) {\n                    var bgArray = mkDict.getArray('BC');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && _isNullOrUndefined(value) && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary && this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    PdfField.prototype._updateBorderColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.borderColor = value;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BC') || _parseColor(mkDictionary.getArray('BC')) !== value) {\n                    mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary && this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element !== null && typeof element !== 'undefined' && element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary && this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary && dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource && resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName = _PdfName.get(_getNewGuidString());\n        var reference = this._crossReference._getNextReference();\n        if (font instanceof PdfTrueTypeFont) {\n            if (this._font._pdfFontInternals) {\n                this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n                this._font._reference = reference;\n            }\n        }\n        else if (this._font._dictionary) {\n            this._crossReference._cacheMap.set(reference, this._font._dictionary);\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            var diameter = bounds[2];\n            if (this._enableGrouping) {\n                diameter = Math.min(bounds[2], bounds[3]);\n            }\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    diameter - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, (this._enableGrouping ?\n                Math.min(bounds[2], bounds[3]) : bounds[2]) - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen || parameter.backBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled || parameter.backBrush) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen || parameter.backBrush) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen || parameter.shadowBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        if (this._kids.indexOf(item._ref) === -1) {\n            var currentIndex = this._kidsCount;\n            item._index = currentIndex;\n            this._kids.push(item._ref);\n            this._parsedItems.set(currentIndex, item);\n        }\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[1], 0);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(0, graphics._size[0]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics.drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary && dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary && this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = _stringToPdfString(text);\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = _stringToPdfString(text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._createItem(bounds);\n        this._initializeFont(this._defaultFont);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        var pdfFont;\n        var stringFormat;\n        var enableGrouping = false;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        if (this.maxLength && text.length > this.maxLength) {\n            text = text.substring(0, this.maxLength);\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping && widget.font !== null && typeof widget.font !== 'undefined') {\n            pdfFont = widget.font;\n            if (pdfFont.size === 0) {\n                pdfFont._size = 8;\n                pdfFont._fontMetrics._size = 0;\n            }\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (enableGrouping && widget.textAlignment !== null && typeof widget.textAlignment !== 'undefined') {\n            stringFormat = stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        if (enableGrouping) {\n            this._drawTextBox(graphics, parameter, text, pdfFont, stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        else {\n            this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0 && this.borderColor) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = maxLength / 2 - (Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        var stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        this._drawTextBox(g, parameter, text, font, stringFormat, multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n            var rotate = this.rotate;\n            if (rotate !== null && typeof rotate !== 'undefined' && rotate === 90) {\n                rectangle[1] = rectangle[2] / 2;\n            }\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                            parameter.stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"actions\", {\n        /**\n         * Gets the actions of the field. [Read-Only]\n         *\n         * @returns {PdfFieldActions} The actions.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._actions) {\n                this._actions = new PdfFieldActions(this);\n            }\n            return this._actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary && fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var text;\n        var font;\n        var stringFormat;\n        var enableGrouping = false;\n        var isSizeZero = false;\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping) {\n            if (widget._mkDictionary && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                text = widget._mkDictionary.get('CA');\n            }\n            else {\n                text = '';\n            }\n            if (typeof widget.font !== 'undefined' && widget.font.size !== null && widget.font.size !== 0) {\n                font = widget.font;\n            }\n            stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (this._isLoaded && widget instanceof PdfWidgetAnnotation &&\n            widget !== null && typeof widget !== 'undefined' && widget._defaultAppearance) {\n            var fontName = widget._defaultAppearance.fontName;\n            if (fontName === null || typeof fontName === 'undefined') {\n                fontName = 'Helvetica';\n            }\n            var fontSize = widget._defaultAppearance.fontSize;\n            if (fontSize === null || typeof fontSize === 'undefined') {\n                fontSize = this._defaultFont.size;\n            }\n            else if (fontSize === 0) {\n                isSizeZero = true;\n            }\n            var previousFont = void 0;\n            var currentFont = void 0;\n            var font_1;\n            this._stringFormat = new PdfStringFormat();\n            this._stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n            this._stringFormat.alignment = PdfTextAlignment.center;\n            if (fontSize !== null && typeof fontSize !== 'undefined' && fontName) {\n                font_1 = _mapFont(fontName, fontSize, PdfFontStyle.regular, widget);\n            }\n            if (font_1 !== null && typeof font_1 !== 'undefined') {\n                currentFont = font_1;\n            }\n            else {\n                currentFont = this._defaultFont;\n            }\n            var textWidth = currentFont.measureString(this.text, this._stringFormat);\n            if (isSizeZero && currentFont && currentFont instanceof PdfStandardFont) {\n                if (this._isLoaded && !widget._dictionary.has('AP')) {\n                    var width = widget.bounds.width - 8 * border.width;\n                    var height = widget.bounds.height - 8 * border.width;\n                    while (textWidth[0] < width || textWidth[1] < height) {\n                        previousFont = currentFont;\n                        currentFont = new PdfStandardFont(currentFont.fontFamily, currentFont._size + 1);\n                        textWidth = currentFont.measureString(this.text, this._stringFormat);\n                        if (textWidth[0] > width || textWidth[1] > height) {\n                            currentFont = previousFont;\n                            break;\n                        }\n                    }\n                    this._font = currentFont;\n                }\n            }\n        }\n        if (enableGrouping) {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, text, font, stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, text, font, stringFormat);\n            }\n        }\n        else {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n            if (this._isLoaded) {\n                this._setAppearance = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, item);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawCheckBox(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        }\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item, itemValue) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            normalDictionary.update(itemValue, normalCheckedReference);\n        }\n        else {\n            normalDictionary.update('Yes', normalCheckedReference);\n        }\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            pressedDictionary.update(itemValue, pressCheckedReference);\n        }\n        else {\n            pressedDictionary.update('Yes', pressCheckedReference);\n        }\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(!this._isLoaded);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, item);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                if (!this._isDuplicatePage) {\n                    item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                }\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else if (!this._isDuplicatePage) {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawRadioButton(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        }\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        var actualValue = item.value;\n        if (!actualValue && item._enableGrouping) {\n            actualValue = 'check' + item._index;\n        }\n        normalDictionary.update(actualValue, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(actualValue, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary && this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary && this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary && this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var width = itemFont.measureString((selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var text = (selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1];\n                var textSize = itemFont.measureString(text);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont = new PdfStandardFont(fontFamily, i);\n                        var size = itemFont.measureString(text);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont = new PdfStandardFont(fontFamily, fontSize);\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            var itemsCount = this._kidsCount;\n            var count = options.length <= itemsCount ? options.length : itemsCount;\n            this._listValues = new Array(count);\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                if (Array.isArray(index) && index.length > 0) {\n                    index = index[0];\n                    this._selectedIndex = index;\n                }\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (_isNullOrUndefined(index) && this._listValues !== null && typeof this._listValues !== 'undefined') {\n                            var value = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                            if (Array.isArray(value)) {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value[1];\n                            }\n                            else {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (i === index) {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                                this._selectedIndex = i;\n                            }\n                            else {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            item._text = '';\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            if (item._enableGrouping && typeof item.rotate === 'undefined') {\n                parameter.rotationAngle = 0;\n            }\n            else {\n                parameter.rotationAngle = item.rotate;\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (_isNullOrUndefined(this._listValues) && this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (isFlatten || needAppearance) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics.drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            template = signatureTemplate;\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics.drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary && dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _isNullOrUndefined } from '../utils';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        if (_isNullOrUndefined(bounds)) {\n            this._bounds = bounds;\n        }\n        else {\n            this._bounds = [];\n        }\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap, _PdfColorSpace } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints, _updateBounds, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont, PdfCjkStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isTransparentColor = false;\n        this._isRotated = false;\n        this._isChanged = false;\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary && this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary && this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && this._dictionary && this._dictionary.has('Border') || (width || vRadius || hRadius)) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary !== null && this._dictionary && this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary && this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary && this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary && this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' && this.subject !== value) {\n                this._dictionary.update('Subj', value);\n                this._subject = value;\n                if (this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._isRotated = true;\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary && this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary) {\n            if (this._dictionary.has('Rotate')) {\n                angle = this._dictionary.get('Rotate');\n            }\n            else if (this._dictionary.has('Rotation')) {\n                angle = this._dictionary.get('Rotation');\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getMediaOrCropBox = function (page) {\n        var cropOrMediaBox;\n        if (page && page._pageDictionary && page._pageDictionary.has('MediaBox')) {\n            cropOrMediaBox = page._pageDictionary.get('MediaBox');\n        }\n        else if (page && page._pageDictionary && page._pageDictionary.has('CropBox')) {\n            cropOrMediaBox = page._pageDictionary.get('CropBox');\n        }\n        return cropOrMediaBox;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = 0;\n        if (_isNullOrUndefined(linePoints)) {\n            count = linePoints.length;\n        }\n        var x = [];\n        var y = [];\n        if (count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary && this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (this._page && box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) ||\n                                    (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics.drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._page.annotations.remove(this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this instanceof PdfLineAnnotation && this._dictionary && !this._dictionary.has('AP')) {\n            if (this._isLoaded) {\n                currentBounds = this._bounds;\n            }\n            else {\n                if (this instanceof PdfLineAnnotation && !this.measure) {\n                    currentBounds = _toRectangle([this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height]);\n                }\n                else {\n                    if (this._setAppearance && this.flatten && !this.measure) {\n                        currentBounds = this._bounds;\n                    }\n                    else {\n                        currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                            this.bounds.width, this.bounds.height]);\n                    }\n                }\n            }\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else {\n                    if (this instanceof PdfLineAnnotation && !this.measure && !this._isLoaded) {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        if (this._setAppearance && this.flatten && !this.measure) {\n                            currentBounds = this.bounds;\n                        }\n                        else if (!this._isLoaded) {\n                            currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                        }\n                    }\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary && this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            if (!template._content.dictionary.has('Matrix') && template._content.dictionary.has('BBox')) {\n                var box = template._content.dictionary.getArray('BBox');\n                bounds.x -= box[0];\n                bounds.y += box[1];\n            }\n            if (this instanceof PdfAngleMeasurementAnnotation && !this._isLoaded) {\n                bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            graphics.drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._page.annotations.remove(this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            page.annotations.remove(annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (_isNullOrUndefined(points) && this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint;\n        if (_isNullOrUndefined(points)) {\n            previousPoint = points[points.length - 1];\n        }\n        else {\n            points = [];\n        }\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path.closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (_isNullOrUndefined(brush)) {\n            graphics.drawPath(pdfpath, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path.closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics.drawPath(pdfpath, pen);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        if (_isNullOrUndefined(points)) {\n            for (var i = 0; i < points.length; i++) {\n                var first = points[Number.parseInt(i.toString(), 10)];\n                var second = points[(i + 1) % points.length];\n                sum += (second[0] - first[0]) * (second[1] + first[1]);\n            }\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect !== null && typeof borderEffect !== 'undefined' && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new PdfPath();\n        if (_isNullOrUndefined(rectangle) && rectangle.length === 4) {\n            graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        }\n        var radius = 0;\n        if (_isNullOrUndefined(intensity)) {\n            radius = intensity * 4.25;\n        }\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new PdfPath();\n            graphicsPath.addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        if (typeof this.color === 'undefined') {\n            this._isTransparentColor = true;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(axisPoint, (angle + 60), count);\n                second = this._getAxisValue(axisPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = [fontStyle];\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        entry = entry.trim();\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new PdfPath();\n            path.addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        if (_page && _page.size) {\n            clientSize = _page.size;\n        }\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._page.annotations.remove(this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._page.annotations.remove(this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox = this._getCropOrMediaBox();\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    PdfAnnotation.prototype._getPoints = function (polygonPoints) {\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var points = polygonPoints;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            var modifiedPoints = [];\n            for (var i = 0; i < points.length; i++) {\n                modifiedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            for (var j = 0; j < modifiedPoints.length; j = j + 2) {\n                var x = modifiedPoints[Number.parseInt(j.toString(), 10)];\n                var y = modifiedPoints[j + 1];\n                if (cropOrMediaBox) {\n                    points[Number.parseInt(j.toString(), 10)] = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        points[j + 1] = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        points[j + 1] = y + cropOrMediaBox[1];\n                    }\n                }\n            }\n        }\n        return points;\n    };\n    PdfAnnotation.prototype._getCropOrMediaBox = function () {\n        var cropOrMediaBox;\n        if (this._page) {\n            cropOrMediaBox = this._page.cropBox;\n            if (!cropOrMediaBox || cropOrMediaBox.length === 0) {\n                cropOrMediaBox = this._page.mediaBox;\n            }\n        }\n        if (cropOrMediaBox && cropOrMediaBox[3] < 0) {\n            var y = cropOrMediaBox[1];\n            var height = cropOrMediaBox[3];\n            cropOrMediaBox[3] = y;\n            cropOrMediaBox[1] = height;\n        }\n        return cropOrMediaBox;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (linePoints !== null && typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        else {\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (cropOrMediaBox && cropOrMediaBox.length > 3 && this.linePoints.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                this._linePoints[0] += cropOrMediaBox[0];\n                this._linePoints[1] += cropOrMediaBox[1];\n                this._linePoints[2] += cropOrMediaBox[0];\n                this._linePoints[3] += cropOrMediaBox[1];\n                this._dictionary.update('L', this._linePoints);\n            }\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this.border.dash === null || typeof this.border.dash === 'undefined') {\n            this.border.dash = [];\n            if (this.border.style === PdfBorderStyle.dashed) {\n                this.border.dash = [3, 1];\n            }\n            else if (this.border.style === PdfBorderStyle.dot) {\n                this.border.dash = [1, 1];\n            }\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            var isUpdated = false;\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n                if (this._page._isNew && !(this._flatten || flatten)) {\n                    var boundsArray = this._obtainLineBounds();\n                    var bounds = {\n                        x: boundsArray[0],\n                        y: boundsArray[1], width: boundsArray[2], height: boundsArray[3]\n                    };\n                    this._bounds = bounds;\n                    var updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                    this._dictionary.update('Rect', updatedBounds);\n                    isUpdated = true;\n                }\n            }\n            else {\n                var bounds = this._obtainLineBounds();\n                var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n                if (this._page._isNew && this._page._pageSettings && this._setAppearance && !this.flatten) {\n                    rectangleBounds = _updateBounds(this, bounds);\n                }\n                this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n                this._dictionary.update('Rect', rectangleBounds);\n                isUpdated = true;\n            }\n            if (this._dictionary.has('Measure') && !isUpdated) {\n                var boundsArray = this._obtainLineBounds();\n                var bounds = { x: boundsArray[0],\n                    y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n                this._bounds = bounds;\n                var updatedBounds = void 0;\n                if (this._page && this._page._isNew && this._page._pageSettings && !this._setAppearance && !this.flatten) {\n                    updatedBounds = _updateBounds(this);\n                }\n                else {\n                    updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                }\n                this._dictionary.update('Rect', updatedBounds);\n                if (this.flatten && !this.measure && this._page && this._page.size && Array.isArray(this._page.size) &&\n                    this._page.size.length >= 2) {\n                    this._bounds = { x: boundsArray[0], y: this._page.size[1] - (boundsArray[1] + boundsArray[3]),\n                        width: boundsArray[2], height: boundsArray[3] };\n                }\n            }\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, 0);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        if (this.border.style === PdfBorderStyle.dashed) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dash;\n            parameter.borderPen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dot;\n            parameter.borderPen._dashPattern = [1, 1];\n        }\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, 0);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n            pen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n            pen._dashPattern = [1, 1];\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush;\n        if (this.innerColor) {\n            brush = new PdfBrush(this._innerColor);\n        }\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = 0;\n        if (this.caption.cap) {\n            lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        }\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            var leaderLineValue = this.leaderLine;\n            if (leaderLineValue === null || typeof leaderLineValue === 'undefined') {\n                this._leaderLine = 0;\n                leaderLineValue = 0;\n            }\n            if (leaderLineValue < 0) {\n                leaderLine = -(leaderLineValue);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = leaderLineValue;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n            if ((!this.measure) && (!this._dictionary.has('Measure'))) {\n                this._dictionary.update('Rect', [rectangleBounds[0], rectangleBounds[1], rectangleBounds[2], rectangleBounds[3]]);\n            }\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var color = this.color ? this.color : [0, 0, 0];\n        var borderPen = new PdfPen(color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            if (this._page._isNew && this._page._pageSettings) {\n                nativeRectangle1 = _updateBounds(this);\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        this._points = this._getPoints(this._points);\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            this._points.push(this._points[0]);\n            this._points.push(this._points[1]);\n        }\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new PdfPath();\n                    graphicsPath.addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (_isNullOrUndefined(this.borderEffect) && _isNullOrUndefined(this.borderEffect.intensity) &&\n                this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new PdfPath();\n                graphicsPath.addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page && this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    if (this.flatten) {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                    }\n                    else {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], -points_1[j + 1]]);\n                    }\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        else {\n            _this._points = [];\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        var color = this.color ? this.color : [0, 0, 0];\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.border.width > 0) {\n                borderPen = new PdfPen(color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics.drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && color) {\n                parameter.borderPen = new PdfPen(color, this.border.width);\n            }\n            if (color) {\n                parameter.foreBrush = new PdfBrush(color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics.drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds && (!this._setAppearance || (this._setAppearance && this.flatten))) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            this._points = this._getPoints(this._points);\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new PdfPath();\n        graphicspath.addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new PdfPath()).addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        graphics.drawPath(path, pen);\n        path.addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._isEnableControlPoints = true;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                var box = template._content.dictionary.getArray('BBox');\n                var angle = this._getRotationAngle();\n                if (box && angle !== null && typeof angle !== 'undefined') {\n                    template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (isFlatten && !this.flattenPopups && this._dictionary.has('Popup')) {\n            var reference = this._dictionary.getRaw('Popup');\n            if (this._page._pageDictionary.has('Annots')) {\n                var annots = this._page._pageDictionary.getRaw('Annots'); // eslint-disable-line\n                if (annots && Array.isArray(annots) && annots.length > 0) {\n                    var index = annots.indexOf(reference);\n                    if (index >= 0) {\n                        this._page.annotations.removeAt(index);\n                    }\n                }\n            }\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    if (this._isEnableControlPoints) {\n                        var p1 = [];\n                        var p2 = [];\n                        var value = this._getControlPoints(point, p1, p2);\n                        p1 = value.controlP1;\n                        p2 = value.controlP2;\n                        var index = 0;\n                        for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                            pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                            index++;\n                        }\n                    }\n                    else {\n                        if (count % 3 === 1) {\n                            pathPointCont = count;\n                            pathPoints = new Array(pathPointCont);\n                            pathPoints = point;\n                        }\n                        else if (count % 3 === 0) {\n                            pathPointCont = count + 1;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            pathPointCont = count + 2;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                            pathPoints[pathPointCont - 2] = point[point.length - 2];\n                        }\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1.addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (this._isLoaded) {\n                            borderPen._lineCap = PdfLineCap.round;\n                        }\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            graphics.drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics.drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)].slice();\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0 && (!isEqual || this._isModified)) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n                _this._isModified = false;\n            });\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var containsCropOrMediaBox = false;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            containsCropOrMediaBox = true;\n            for (var i = 0; i < inkCollection.length; i++) {\n                var inkList = inkCollection[Number.parseInt(i.toString(), 10)];\n                var modifiedInkList = inkList;\n                for (var j = 0; j < inkList.length; j = j + 2) {\n                    var x = inkList[Number.parseInt(j.toString(), 10)];\n                    var y = inkList[j + 1];\n                    x = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        y = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        y = y + cropOrMediaBox[1];\n                    }\n                    modifiedInkList[Number.parseInt(j.toString(), 10)] = x;\n                    modifiedInkList[j + 1] = y;\n                    inkCollection[Number.parseInt(i.toString(), 10)] = modifiedInkList;\n                }\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._isEnableControlPoints || containsCropOrMediaBox) {\n            return this._getInkBoundsValue(inkCollection);\n        }\n        else {\n            if (!this._isFlatten) {\n                this._updateInkListCollection(inkCollection);\n            }\n            return [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n    };\n    PdfInkAnnotation.prototype._updateInkListCollection = function (inkCollection) {\n        for (var i = 0; i < inkCollection.length; i++) {\n            var inkList = [];\n            for (var j = 0; j < inkCollection[Number.parseInt(i.toString(), 10)].length; j++) {\n                inkList.push(inkCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]);\n            }\n            this._inkPointsCollection[Number.parseInt(i.toString(), 10)] = inkList;\n        }\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function (inkCollection) {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else if (inkCollection) {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints, inkCollection);\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints, inkCollection) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            else if (cropOrMediaBox) {\n                xMax = xMax - xMin;\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            else if (cropOrMediaBox) {\n                yMax = yMax - yMin;\n            }\n            if (cropOrMediaBox) {\n                xMin = xMin + cropOrMediaBox[0];\n                yMin = yMin + cropOrMediaBox[1];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        if (!this._isFlatten && inkCollection) {\n            this._updateInkListCollection(inkCollection);\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n                if (list.length === innerList.length) {\n                    list = [];\n                }\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._comment = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 9 5.0908 cm 7.74 12.616 m -7.74 12.616 l -8.274 12.616 -8.707 12.184 -8.707 11.649 c h f Q 0 G ';\n        _this._commentSecondHalf = '0 i 0.60 w 4 M 1 j 0 J [0 100]1 d  1 0 0 1 9 5.0908 cm 4.1 1.71 m -0.54 -2.29 l  -0.54 1.71 l  -5.5 1.71 l  -5.5 14.42 l  10.5 14.42 l  10.5 1.71 l  4.1 1.71 l -2.33 9.66 m 7.34 9.66 l 7.34 8.83 l -2.33 8.83 l -2.33 9.66 l -2.33 7.28 m 5.88 7.28 l 5.88 6.46 l -2.33 6.46 l -2.33 7.28 l 14.9 23.1235 m -14.9 23.1235 l -14.9 -20.345 l 14.9 -20.345 l 14.9 23.1235 l b ';\n        _this._note = '0 G 0 i 0.61 w 4 M 0 j 0 J []0 d  q 1 0 0 1 16.959 1.3672 cm 0 0 m 0 -0.434 -0.352 -0.785 -0.784 -0.785 c -14.911 -0.785 l -15.345 -0.785 -15.696 -0.434 -15.696 0 c -15.696 17.266 l -15.696 17.699 -15.345 18.051 -14.911 18.051 c -0.784 18.051 l -0.352 18.051 0 17.699 0 17.266 c h b Q q 1 0 0 1 4.4023 13.9243 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4019 11.2207 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 8.5176 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 5.8135 cm 0 0 m 9.418 0 l S Q ';\n        _this._help = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 12.1465 10.5137 cm -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c h f Q ';\n        _this._helpSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  1 0 0 1 12.1465 10.5137 cm 0 0 m -0.682 -0.756 -0.958 -1.472 -0.938 -2.302 c -0.938 -2.632 l -3.385 -2.632 l -3.403 -2.154 l -3.459 -1.216 -3.147 -0.259 -2.316 0.716 c -1.729 1.433 -1.251 2.022 -1.251 2.647 c -1.251 3.291 -1.674 3.715 -2.594 3.751 c -3.202 3.751 -3.937 3.531 -4.417 3.2 c -5.041 5.205 l -4.361 5.591 -3.274 5.959 -1.968 5.959 c 0.46 5.959 1.563 4.616 1.563 3.089 c 1.563 1.691 0.699 0.771 0 0 c -2.227 -6.863 m -2.245 -6.863 l -3.202 -6.863 -3.864 -6.146 -3.864 -5.189 c -3.864 -4.196 -3.182 -3.516 -2.227 -3.516 c -1.233 -3.516 -0.589 -4.196 -0.57 -5.189 c -0.57 -6.146 -1.233 -6.863 -2.227 -6.863 c -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c b ';\n        _this._insert = ' 0 i 0.59 w 4 M 0 j 0 J []0 d  1 0 0 1 8.5386 19.8545 cm 0 0 m -8.39 -19.719 l 8.388 -19.719 l h B ';\n        _this._key = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 6.5 12.6729 cm 0.001 5.138 m -2.543 5.138 -4.604 3.077 -4.604 0.534 c -4.604 -1.368 -3.449 -3.001 -1.802 -3.702 c -1.802 -4.712 l -0.795 -5.719 l -1.896 -6.82 l -0.677 -8.039 l -1.595 -8.958 l -0.602 -9.949 l -1.479 -10.829 l -0.085 -12.483 l 1.728 -10.931 l 1.728 -3.732 l 1.737 -3.728 1.75 -3.724 1.76 -3.721 c 3.429 -3.03 4.604 -1.385 4.604 0.534 c 4.604 3.077 2.542 5.138 0.001 5.138 c f Q ';\n        _this._keySecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._newParagraph = '1 0.819611 0 rg 0 G 0 i 0.58 w 4 M 0 j 0 J []0 d ';\n        _this._newParagraphSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._paragraph = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h f Q ';\n        _this._paragraphSecondHalf = '0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h S Q q 1 0 0 1 11.6787 2.6582 cm 0 0 m -1.141 0 l -1.227 0 -1.244 0.052 -1.227 0.139 c -0.656 1.157 -0.52 2.505 -0.52 3.317 c -0.52 3.594 l -2.833 3.783 -5.441 4.838 -5.441 8.309 c -5.441 10.778 -3.714 12.626 -0.57 13.024 c -0.535 13.508 -0.381 14.129 -0.242 14.389 c -0.207 14.44 -0.174 14.475 -0.104 14.475 c 1.088 14.475 l 1.156 14.475 1.191 14.458 1.175 14.372 c 1.105 14.095 0.881 13.127 0.881 12.402 c 0.881 9.431 0.932 7.324 0.95 4.06 c 0.95 2.298 0.708 0.813 0.189 0.07 c 0.155 0.034 0.103 0 0 0 c b Q ';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics.drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (this.opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this.opacity);\n        }\n        switch (this.icon) {\n            case PdfPopupIcon.comment:\n                graphics._sw._write(this._comment);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._commentSecondHalf);\n                break;\n            case PdfPopupIcon.paragraph:\n                graphics._sw._write(this._paragraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._paragraphSecondHalf);\n                break;\n            case PdfPopupIcon.help:\n                graphics._sw._write(this._help);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._helpSecondHalf);\n                break;\n            case PdfPopupIcon.note:\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._note);\n                break;\n            case PdfPopupIcon.insert:\n                graphics._sw._write('0 G ');\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._insert);\n                break;\n            case PdfPopupIcon.key:\n                graphics._sw._write(this._key);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._keySecondHalf);\n                break;\n            case PdfPopupIcon.newParagraph:\n                graphics._sw._write(this._newParagraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._newParagraphSecondHalf);\n                break;\n        }\n        if (this.opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._destination) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._destination = value;\n                if (this._isLoaded) {\n                    this._destination._initializePrimitive();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (typeof array === 'string') {\n                array = this._getDestination(array);\n            }\n            if (array && array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && array && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                if (index >= 0) {\n                    var page = this._crossReference._document.getPage(index);\n                    if (page && array[1] instanceof _PdfName) {\n                        var mode = array[1];\n                        if (mode) {\n                            if (mode.name === 'XYZ') {\n                                var left = array[2];\n                                var top_4 = array[3];\n                                var zoom = array[4];\n                                var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                    || (typeof zoom === 'undefined' && zoom === null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._destination = new PdfDestination();\n                    var zoom = array[4];\n                    var mode = array[1];\n                    if (typeof zoom !== 'undefined' && zoom !== null) {\n                        this._destination.zoom = zoom;\n                    }\n                    if (mode.name === 'Fit') {\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                    else if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var topValue = array[3];\n                        if ((typeof left === 'undefined' && left === null) || (typeof topValue === 'undefined' && topValue === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    this._destination._index = index;\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference && reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    else if (typeof reference === 'string') {\n                        referenceArray = this._getDestination(reference);\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._getDestination = function (name) {\n        var document = this._crossReference._document;\n        var destinationArray; // eslint-disable-line\n        if (document) {\n            destinationArray = this._getNamedDestination(document, name);\n        }\n        return destinationArray;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedDestination = function (document, result) {\n        var destination; // eslint-disable-line\n        var catalog = document._catalog;\n        if (catalog && catalog._catalogDictionary && catalog._catalogDictionary.has('Names')) {\n            var names = catalog._catalogDictionary.get('Names');\n            if (names && names.has('Dests')) {\n                var kids = names.get('Dests');\n                if (kids) {\n                    var ref = this._getNamedObjectFromTree(kids, result);\n                    destination = this._extractDestination(ref, document);\n                }\n            }\n        }\n        return destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._extractDestination = function (ref, document) {\n        var dict;\n        var destinationArray; // eslint-disable-line\n        if (ref && ref instanceof _PdfReference) {\n            dict = document._crossReference._fetch(ref);\n        }\n        if (dict && dict.has('D')) {\n            destinationArray = dict.getRaw('D');\n        }\n        return destinationArray ? destinationArray : ref;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedObjectFromTree = function (kids, name) {\n        var found = false;\n        var currentDictionary = kids;\n        var reference;\n        while (!found && currentDictionary) {\n            if (currentDictionary && currentDictionary.has('Kids')) {\n                currentDictionary = this._getProperKid(currentDictionary, name);\n            }\n            else if (currentDictionary && currentDictionary.has('Names')) {\n                reference = this._findName(currentDictionary, name);\n                found = true;\n            }\n        }\n        return reference;\n    };\n    PdfDocumentLinkAnnotation.prototype._findName = function (current, name) {\n        var names = current.get('Names'); // eslint-disable-line\n        var halfLength = names.length / 2;\n        var lowerIndex = 0;\n        var topIndex = halfLength - 1;\n        var half = 0;\n        var found = false;\n        var destinationReference;\n        while (!found) {\n            half = Math.floor((lowerIndex + topIndex) / 2);\n            if (lowerIndex > topIndex) {\n                break;\n            }\n            var result = names[Number.parseInt(half.toString(), 10) * 2]; // eslint-disable-line\n            if (result && result instanceof _PdfReference) {\n                result = current._crossReference._fetch(result);\n            }\n            var cmp = this._stringCompare(name, result);\n            if (cmp > 0) {\n                lowerIndex = half + 1;\n            }\n            else if (cmp < 0) {\n                topIndex = half - 1;\n            }\n            else {\n                found = true;\n                break;\n            }\n        }\n        if (found) {\n            destinationReference = names[half * 2 + 1];\n        }\n        return destinationReference;\n    };\n    PdfDocumentLinkAnnotation.prototype._getProperKid = function (kids, name) {\n        var kidsArray; // eslint-disable-line\n        var kid;\n        if (kids && kids.has('Kids')) {\n            kidsArray = kids.getRaw('Kids');\n        }\n        if (kidsArray && Array.isArray(kidsArray) && kidsArray.length !== 0) {\n            kidsArray = kids.getArray('Kids');\n            for (var i = 0; i < kidsArray.length; i++) {\n                kid = kidsArray[Number.parseInt(i.toString(), 10)];\n                if (this._checkLimits(kid, name)) {\n                    break;\n                }\n            }\n        }\n        return kid;\n    };\n    PdfDocumentLinkAnnotation.prototype._checkLimits = function (kid, result) {\n        var found = false;\n        if (kid && kid.has('Limits')) {\n            var limits = kid.get('Limits'); // eslint-disable-line\n            var lowerLimit = limits[0];\n            var higherLimit = limits[1];\n            var lowCompare = this._stringCompare(lowerLimit, result);\n            var highCompare = this._stringCompare(higherLimit, result);\n            if (lowCompare === 0 || highCompare === 0) {\n                found = true;\n            }\n            else if (lowCompare < 0 && highCompare > 0) {\n                found = true;\n            }\n        }\n        return found;\n    };\n    PdfDocumentLinkAnnotation.prototype._stringCompare = function (limits, result) {\n        var byteArray = _stringToBytes(limits);\n        var byteArray1 = _stringToBytes(result);\n        var commonSize = Math.min(byteArray.length, byteArray1.length);\n        var resultValue = 0;\n        for (var i = 0; i < commonSize; i++) {\n            var byte = byteArray[Number.parseInt(i.toString(), 10)];\n            var byte1 = byteArray1[Number.parseInt(i.toString(), 10)];\n            resultValue = byte - byte1;\n            if (resultValue !== 0) {\n                break;\n            }\n        }\n        if (resultValue === 0) {\n            resultValue = byteArray.length - byteArray1.length;\n        }\n        return resultValue;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        else if (this._destination) {\n            this._dictionary.update('Dest', this._destination._array);\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the text markup annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the text markup annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    var nativeRectangle = this._obtainNativeRectangle();\n                    this._dictionary.update('Rect', _fromRectangle({ x: nativeRectangle[0], y: nativeRectangle[1], width: nativeRectangle[2], height: nativeRectangle[3] }));\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (value.length > 0) {\n                    this._quadPoints = new Array((value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n                this._isChanged = true;\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._obtainNativeRectangle = function () {\n        var nativeRectangle = [this._bounds.x, this._bounds.y + this._bounds.height, this._bounds.width, this._bounds.height];\n        var cropOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            nativeRectangle[1] = size[1] - nativeRectangle[1];\n            cropOrMediaBox = this._getCropOrMediaBox();\n        }\n        if (cropOrMediaBox) {\n            if (cropOrMediaBox[3] < 0) {\n                var yCrop = cropOrMediaBox[1];\n                var heightCrop = cropOrMediaBox[3];\n                cropOrMediaBox[1] = heightCrop;\n                cropOrMediaBox[3] = yCrop;\n            }\n            if (cropOrMediaBox.length > 2 && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                nativeRectangle[0] += cropOrMediaBox[0];\n                if (this._page && this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[1] > 0 && cropOrMediaBox[3] === 0) {\n                    nativeRectangle[1] += cropOrMediaBox[3];\n                }\n                else {\n                    nativeRectangle[1] += cropOrMediaBox[1];\n                }\n            }\n        }\n        return nativeRectangle;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var size = this._page.size;\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        if (this._isChanged) {\n            this._setQuadPoints(size);\n            this._dictionary.update('Rect', _updateBounds(this));\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1 && this._isChanged) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n        this._isChanged = false;\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width = 0;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics.drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics.drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    var defaultRect = [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height];\n                    var rect = this._setAppearance ? _updateBounds(this) : defaultRect;\n                    this._dictionary.update('Rect', rect);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        var margins;\n        if (this._page && this._page._isNew && this._page._pageSettings && this._page._pageSettings.margins) {\n            var margin = this._page._pageSettings.margins;\n            margins = { left: margin.left, top: margin.top, right: margin.right, bottom: margin.bottom };\n        }\n        else {\n            margins = { left: 0, top: 0, right: 0, bottom: 0 };\n        }\n        if (this.bounds.x !== 0 && this.bounds.y !== 0 && this.bounds.width !== 0 && this.bounds.height !== 0) {\n            this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n        var noofRect = this._quadPoints.length / 8;\n        var cropOrMediaBox = this._getMediaOrCropBox(this._page);\n        var isContainscropOrMediaBox = false;\n        if (!this._isLoaded && cropOrMediaBox && cropOrMediaBox.length > 3 && !this.flatten) {\n            var cropOrMediaBoxX = cropOrMediaBox[0];\n            var cropOrMediaBoxY = cropOrMediaBox[1];\n            if (cropOrMediaBoxX !== 0 || cropOrMediaBoxY !== 0) {\n                for (var i = 0; i < noofRect; i++) {\n                    var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0] + margins.left + cropOrMediaBoxX;\n                    var locationY = cropOrMediaBoxY + margins.top;\n                    textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[1 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[3 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                    textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n                }\n                isContainscropOrMediaBox = true;\n            }\n        }\n        if (!isContainscropOrMediaBox) {\n            for (var i = 0; i < noofRect; i++) {\n                var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[1 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[3 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                    this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n            }\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || ((!this._isLoaded || (this._page && this._page._isDuplicate)) && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            var dictionary_1 = this._dictionary.get('AP'); // eslint-disable-line\n            if (dictionary_1 && dictionary_1 instanceof _PdfDictionary) {\n                _removeDuplicateReference(dictionary_1, this._crossReference, 'N');\n            }\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._alterRotateBounds = true;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an appearance template for a rubber stamp annotation.\n     *\n     * @returns {PdfTemplate} Returns the appearance template of the annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRubberStampAnnotation.prototype.createTemplate = function () {\n        var template;\n        if (this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        template = new PdfTemplate();\n                        template._isExported = true;\n                        var templateDictionary = appearanceStream.dictionary;\n                        var matrix = templateDictionary.getArray('Matrix');\n                        var bounds = templateDictionary.getArray('BBox');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (bounds && bounds.length > 3) {\n                                var rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                template._size = [rectangle[2], rectangle[3]];\n                                template._templateOriginalSize = [rect.width, rect.height];\n                            }\n                        }\n                        else if (bounds) {\n                            templateDictionary.update('Matrix', [1, 0, 0, 1, -bounds[0], -bounds[1]]);\n                            template._size = [bounds[2], bounds[3]];\n                        }\n                        template._exportStream(dictionary, this._crossReference);\n                    }\n                }\n            }\n            else {\n                template = this._createRubberStampAppearance();\n            }\n        }\n        return template;\n    };\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        if (this._dictionary.has('AP') && this._isLoaded && !this._isRotated) {\n            this._parseStampAppearance();\n        }\n        else {\n            this._appearanceTemplate = this._createRubberStampAppearance();\n        }\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance || this._isRotated) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                isTransformBBox = this._parseStampAppearance();\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._parseStampAppearance = function () {\n        var isTransformBBox = false;\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            if (appearanceStream) {\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                var isStamp = false;\n                if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                    var isRotated = false;\n                    var size = void 0;\n                    var rect = void 0;\n                    if (appearanceStream) {\n                        isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                            this.rotationAngle === PdfRotationAngle.angle0);\n                        if (!isRotated) {\n                            isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                this.rotationAngle === PdfRotationAngle.angle0);\n                        }\n                    }\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    isStamp = true;\n                    isTransformBBox = isRotated ? true : false;\n                    if (isTransformBBox) {\n                        var matrix = appearanceStream.dictionary.getArray('Matrix');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            var bounds = appearanceStream.dictionary.getArray('BBox');\n                            if (bounds && bounds.length > 3) {\n                                rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                size = [rectangle[2], rectangle[3]];\n                                this._appearanceTemplate._size = size;\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                    }\n                    else if (rect) {\n                        size = [rect.width, rect.height];\n                    }\n                }\n                if (!isStamp) {\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return isTransformBBox;\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this.icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (this._alterRotateBounds && typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        else {\n            this.rotateAngle = this._getRotationAngle();\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        this._dictionary.update('Rect', _updateBounds(this));\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._isContentUpdated = false;\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        _this._parsedXMLData = [];\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._lineEndingStyle = this._obtainLineEndingStyle();\n            }\n            else if (typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = PdfLineEndingStyle.none;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    var rcBrush = void 0;\n                    var rcColor = [];\n                    if (this._parsedXMLData.length > 0 && this._parsedXMLData[3]) {\n                        rcBrush = this._parsedXMLData[3];\n                        rcColor = rcBrush._color;\n                        this._textMarkUpColor = rcColor;\n                    }\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                this._updateStyle(this.font, value, this.textAlignment);\n            }\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            else if (this._dictionary.has('RC')) {\n                var rcAlignment = void 0;\n                if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                    rcAlignment = this._parsedXMLData[1];\n                    this._textAlignment = rcAlignment;\n                }\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('RC')) {\n            annot._parsedXMLData = annot._parseXMLData(dictionary.get('RC'));\n        }\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            this._cropBoxValueX = cropOrMediaBox[0];\n            this._cropBoxValueY = cropOrMediaBox[1];\n        }\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            this._dictionary.update('Rect', _updateBounds(this));\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (this._dictionary.has('RC') && this._isContentUpdated) {\n            this._updateStyle(this.font, this._textMarkUpColor, this.textAlignment);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var box = template._content.dictionary.getArray('BBox');\n        var angle = this._getRotationAngle();\n        if (box && angle !== null && typeof angle !== 'undefined') {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle_1 = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle_1, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        if (text) {\n            this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        }\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        if (this.flatten) {\n            this._bounds = { x: bounds[0], y: (this._page.size[1] - (bounds[1] + bounds[3])), width: bounds[2], height: bounds[3] };\n        }\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            var rcFont = void 0;\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[0]) {\n                rcFont = this._parsedXMLData[0];\n            }\n            if (rcFont instanceof PdfStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n            else if (rcFont instanceof PdfCjkStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._updateStyle = function (font, color, alignment) {\n        var ds = 'font:' +\n            font._metrics._name +\n            ' ' +\n            font.size +\n            'pt;style:' + _reverseMapPdfFontStyle(font.style) +\n            ';color:' +\n            this._colorToHex(color);\n        this._dictionary.update('DS', ds);\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font:'\n            + font._metrics._name + ' ' + font.size + 'pt;font-weight:'\n            + (font.isBold ? 'bold' : 'normal') + ';color:' + this._colorToHex(color) + '\"><p dir=\"ltr\">';\n        var textAlignment;\n        var alignmentText;\n        if (alignment !== null && typeof alignment !== 'undefined') {\n            switch (alignment) {\n                case PdfTextAlignment.left:\n                    alignmentText = 'left';\n                    break;\n                case PdfTextAlignment.center:\n                    alignmentText = 'center';\n                    break;\n                case PdfTextAlignment.right:\n                    alignmentText = 'right';\n                    break;\n                case PdfTextAlignment.justify:\n                    alignmentText = 'justify';\n                    break;\n            }\n            if (alignmentText) {\n                textAlignment = 'text-align:' + alignmentText + ';';\n            }\n        }\n        var decorationText = '';\n        var textDecoration;\n        var italic = 'font-style:italic';\n        var bold = 'font-style:bold';\n        if (font.isUnderline) {\n            decorationText = font.isStrikeout ? 'text-decoration:word line-through' : 'text-decoration:word';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else if (font.isStrikeout) {\n            decorationText = 'text-decoration:line-through';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else {\n            if (font.isItalic) {\n                decorationText += italic;\n            }\n            else if (font.isBold) {\n                decorationText += bold;\n            }\n        }\n        if (decorationText !== '') {\n            textDecoration = '<span style = \"' + textAlignment + decorationText + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        else {\n            textDecoration = '<span style = \"' + textAlignment + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        this._dictionary.update('RC', body + textDecoration + '</p></body>');\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[2] + rectangle[0]), -rectangle[1], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            if (parameter.borderWidth > 0 && !this._isAllRotation) {\n                rectangle = parameter.bounds;\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, rectangle, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new PdfPath();\n        graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path.addRectangle((this.bounds.x + this._cropBoxValueX) - 2, ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x + this._cropBoxValueX,\n                ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)),\n                this.bounds.width,\n                this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX,\n                    (size[1] + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[1][1],\n            this.calloutLines[0][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        var isContent = this._dictionary.has('Contents');\n        if (isContent) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC') && !isContent && text === null) {\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                var rcAlignment = this._parsedXMLData[1];\n                textAlignment = rcAlignment;\n                hasAlignment = true;\n            }\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (!this._isLoaded) {\n            pointY = this._page.size[1] - pointY;\n        }\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics.drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        if (typeof this.text === 'string' && this.text !== null) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        this._updateStyle(this.font, this.textMarkUpColor, this._textAlignment);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    PdfFreeTextAnnotation.prototype._parseXMLData = function (rcContent) {\n        var _this = this;\n        var fontStyle = PdfFontStyle.regular;\n        var fontCollection = []; // eslint-disable-line\n        var brush = null;\n        var fontName = '';\n        var content = rcContent;\n        var contentText = this._dictionary.has('Contents') ? this._dictionary.get('Contents') : '';\n        var hasSymbol = false;\n        var xdocument; // eslint-disable-line\n        hasSymbol = contentText.split('').some(function (char) { return _this._isSymbol(char); });\n        if (!hasSymbol) {\n            if (content !== null && typeof content !== 'undefined') {\n                xdocument = (new DOMParser()).parseFromString(content, 'text/xml');\n                var root = xdocument.documentElement;\n                var nameSpaceURI = (root && root.namespaceURI) || '';\n                if (root) {\n                    var styleMap = this._collectStyles(root);\n                    if (styleMap.size > 0) {\n                        var input = this._extractStylesToInput(styleMap);\n                        var fontDetails = this._getFontDetails(input, this.font.size, this.textAlignment, fontStyle, brush); // eslint-disable-line\n                        var _a = this._updateFontProperties(fontDetails, fontName, fontStyle, brush), updatedFontName = _a.fontName, updatedFontStyle = _a.fontStyle, updatedBrush = _a.brush;\n                        var obtainFont = _mapFont(updatedFontName, this.font._size, updatedFontStyle, this);\n                        fontCollection = this._fontCollection(fontCollection, obtainFont, nameSpaceURI, this._textAlignment, updatedBrush);\n                    }\n                }\n            }\n        }\n        this._parsedXMLData = fontCollection;\n        return fontCollection;\n    };\n    PdfFreeTextAnnotation.prototype._collectStyles = function (root, styleMap) {\n        if (styleMap === void 0) { styleMap = new Map(); }\n        if (!root) {\n            return styleMap;\n        }\n        var nodeStyle = null;\n        try {\n            nodeStyle = window.getComputedStyle(root);\n        }\n        catch (error) {\n            return styleMap;\n        }\n        styleMap.set(root.tagName.toLowerCase(), nodeStyle);\n        var childNode = root.firstElementChild;\n        while (childNode) {\n            this._collectStyles(childNode, styleMap);\n            childNode = childNode.nextElementSibling;\n        }\n        return styleMap;\n    };\n    PdfFreeTextAnnotation.prototype._extractStylesToInput = function (styleMap) {\n        var input = [];\n        styleMap.forEach(function (styleValue) {\n            if (styleValue && styleValue.length > 0) { // Check if styleValue is valid\n                for (var i = 0; i < styleValue.length; i++) {\n                    var propertyName = styleValue.item(Number.parseInt(i.toString(), 10));\n                    if (propertyName !== null && propertyName !== undefined) {\n                        var propertyValue = styleValue.getPropertyValue(propertyName);\n                        input.push(propertyName + \": \" + propertyValue);\n                    }\n                }\n            }\n        });\n        return input;\n    };\n    PdfFreeTextAnnotation.prototype._isSymbol = function (char) {\n        var code = char.charCodeAt(0);\n        if (char === '_' || char === '+' || char === '-' || char === '*' || char === '=') {\n            return false;\n        }\n        return ((code >= 0x20A0 && code <= 0x20CF) ||\n            (code >= 0x2200 && code <= 0x22FF) ||\n            (code >= 0x2A00 && code <= 0x2AFF) ||\n            (code >= 0x2100 && code <= 0x214F) ||\n            (code >= 0x2300 && code <= 0x23FF) ||\n            (code === 0x2B50));\n    };\n    PdfFreeTextAnnotation.prototype._updateFontProperties = function (fontDetails, fontName, fontStyle, brush) {\n        var _this = this;\n        fontDetails.forEach(function (value, property) {\n            switch (property) {\n                case 'font-family':\n                    fontName = value;\n                    break;\n                case 'font-size':\n                    _this.font._size = parseFloat(value);\n                    break;\n                case 'font-style':\n                case 'font-weight':\n                case 'text-decoration':\n                    fontStyle = _this._obtainFontStyle(value, property);\n                    break;\n                case 'text-align':\n                    _this._textAlignment = _this._parseTextAlignment(value);\n                    break;\n                case 'color':\n                    brush = value;\n                    break;\n                case 'xfa-spacerun':\n                    _this._rcText = value;\n                    break;\n            }\n        });\n        return { fontName: fontName, fontStyle: fontStyle, brush: brush };\n    };\n    PdfFreeTextAnnotation.prototype._obtainFontStyle = function (value, property) {\n        var styleValue = parseFloat(value);\n        switch (property) {\n            case 'font-style':\n                return styleValue === 0 ? PdfFontStyle.regular :\n                    styleValue === 1 ? PdfFontStyle.bold :\n                        styleValue === 2 ? PdfFontStyle.italic :\n                            styleValue === 8 ? PdfFontStyle.strikeout :\n                                styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            case 'font-weight':\n                return styleValue === 1 ? PdfFontStyle.bold : PdfFontStyle.regular;\n            case 'text-decoration':\n                return styleValue === 8 ? PdfFontStyle.strikeout :\n                    styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            default:\n                return PdfFontStyle.regular;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlignment = function (value) {\n        var alignmentValue = parseFloat(value);\n        switch (alignmentValue) {\n            case 0: return PdfTextAlignment.left;\n            case 1: return PdfTextAlignment.center;\n            case 2: return PdfTextAlignment.right;\n            case 3: return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getFontDetails = function (input, fontSize, textAlignment, fontStyle, brush) {\n        var _this = this;\n        var fontDetails = new Map(); // eslint-disable-line\n        input.forEach(function (element) {\n            var _a = element.split(':').map(function (item) { return item.trim(); }), property = _a[0], value = _a[1];\n            if (property && value) {\n                switch (property.toLowerCase()) {\n                    case 'font':\n                        _this._parseFont(value, fontDetails);\n                        break;\n                    case 'font-size':\n                        fontSize = _this._parseFontSize(value);\n                        fontDetails.set('font-size', fontSize);\n                        break;\n                    case 'font-weight':\n                        fontStyle = _this._parseFontWeight(value, fontStyle);\n                        fontDetails.set('font-weight', fontStyle);\n                        break;\n                    case 'font-family':\n                        fontDetails.set('font-family', _this._parseFontFamily(value));\n                        break;\n                    case 'color':\n                        brush = new PdfBrush(_this._rgbStringToArray(value));\n                        fontDetails.set('color', brush);\n                        break;\n                    case 'font-style':\n                        fontStyle = _this._parseFontStyle(value, fontStyle);\n                        fontDetails.set('font-style', fontStyle);\n                        break;\n                    case 'text-decoration':\n                        fontStyle = _this._parseTextDecoration(value, fontStyle);\n                        fontDetails.set('text-decoration', fontStyle);\n                        break;\n                    case 'text-align':\n                        textAlignment = _this._parseTextAlign(value);\n                        fontDetails.set('text-align', textAlignment);\n                        break;\n                    case 'xfa-spacerun':\n                        _this._rcText = value.length > 1 && value.includes('yes') ? _this._rcText + ' ' : _this._rcText;\n                        fontDetails.set('xfa-spacerun', _this._rcText);\n                        break;\n                }\n            }\n        });\n        return fontDetails;\n    };\n    PdfFreeTextAnnotation.prototype._parseFont = function (value, fontDetails) {\n        var fontParts = value.split(' ').map(function (item) { return item.trim(); });\n        var fontName = '';\n        fontParts.forEach(function (part) {\n            if (part && !part.endsWith('pt')) {\n                fontName += part + ' ';\n            }\n            else if (part.endsWith('pt')) {\n                fontDetails.set('font-size', parseFloat(part.replace('pt', '').replace(',', '.').trim()));\n            }\n        });\n        fontDetails.set('font-family', fontName.trim().replace(/['\",]/g, ''));\n    };\n    PdfFreeTextAnnotation.prototype._parseFontSize = function (value) {\n        if (value.endsWith('pt')) {\n            return parseFloat(value.replace('pt', '').replace(',', '.').trim());\n        }\n        return 0;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontWeight = function (value, fontStyle) {\n        if (value.includes('bold')) {\n            fontStyle |= PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontFamily = function (value) {\n        return value.replace(/^'+|'+$/g, '').trim();\n    };\n    PdfFreeTextAnnotation.prototype._parseFontStyle = function (value, fontStyle) {\n        if (value.includes('normal') || value.includes('regular')) {\n            return PdfFontStyle.regular;\n        }\n        if (value.includes('underline')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('strikeout')) {\n            return PdfFontStyle.strikeout;\n        }\n        if (value.includes('italic')) {\n            return PdfFontStyle.italic;\n        }\n        if (value.includes('bold')) {\n            return PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextDecoration = function (value, fontStyle) {\n        if (value.includes('word')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('line-through')) {\n            return PdfFontStyle.strikeout;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlign = function (value) {\n        switch (value.trim().toLowerCase()) {\n            case 'left': return PdfTextAlignment.left;\n            case 'right': return PdfTextAlignment.right;\n            case 'center': return PdfTextAlignment.center;\n            case 'justify': return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._rgbStringToArray = function (rgbString) {\n        var regex = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\n        var match = rgbString.match(regex);\n        if (match) {\n            var r = parseInt(match[1], 10);\n            var g = parseInt(match[2], 10);\n            var b = parseInt(match[3], 10);\n            return [r, g, b];\n        }\n        else {\n            throw new Error('Invalid RGB string format');\n        }\n    };\n    PdfFreeTextAnnotation.prototype._fontCollection = function (fontCollection, font, nameSpaceURI, alignment, brush) {\n        return fontCollection.concat([font, alignment, nameSpaceURI, brush]);\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._page.annotations.remove(this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                if (appearance && appearance instanceof _PdfDictionary) {\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    _removeDuplicateReference(appearance, this._crossReference, 'R');\n                }\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && _isNullOrUndefined(this.overlayText) && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.top);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, this.bounds.width - this.border.width, this.bounds.height - this.border.width];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, format);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isTransparentBorderColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor();\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            if (this._page && this._page._isNew && this._page._pageSettings) {\n                this._dictionary.update('Rect', _updateBounds(this));\n            }\n            else {\n                this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics.drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded && !this._page._isNew) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._parseBorderColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor)) {\n            if (typeof this._borderColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        this._borderColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            value = this._borderColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._updateBorderColor = function (value) {\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._field) {\n                    this._setCheckedStatus(value);\n                    this._field._setAppearance = true;\n                }\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._setCheckedStatus = function (value) {\n        var check = value;\n        var fieldValue = this._getItemValue(this._dictionary);\n        this._unCheckOthers(this, fieldValue, value);\n        if (check) {\n            if (!fieldValue) {\n                fieldValue = 'Yes';\n            }\n            this._field._dictionary.update('V', fieldValue);\n            this._dictionary.update('AS', _PdfName.get(fieldValue));\n            this._dictionary.update('V', _PdfName.get(fieldValue));\n        }\n        else if (this._field._dictionary) {\n            if (this._field._dictionary.has('V')) {\n                var v = this._field._dictionary.get('V');\n                if (v && v.name === fieldValue) {\n                    delete this._field._dictionary._map.V;\n                }\n            }\n            this._field._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    PdfStateItem.prototype._unCheckOthers = function (child, value, isChecked) {\n        if (!this._field._isUpdating) {\n            this._field._isUpdating = true;\n            var count = this._field.itemsCount;\n            for (var i = 0; i < count; ++i) {\n                var item = this._field.itemAt(i);\n                if (item) {\n                    if (item !== child) {\n                        item.checked = ((this._getItemValue(item._dictionary) === value) && isChecked);\n                    }\n                    else if (!item.checked) {\n                        item.checked = true;\n                    }\n                }\n            }\n        }\n    };\n    PdfStateItem.prototype._getItemValue = function (dictionary) {\n        var itemValue = '';\n        if (dictionary && dictionary.has('AS')) {\n            var asValue = dictionary.get('AS');\n            if (asValue && asValue.name !== 'Off') {\n                itemValue = 'Off';\n            }\n        }\n        if (itemValue === '') {\n            if (dictionary && dictionary.has('AP')) {\n                var apDictionary = dictionary.get('AP');\n                if (apDictionary && apDictionary.has('N')) {\n                    var normalAppearance = apDictionary.get('N');\n                    var keyList_1 = [];\n                    normalAppearance.forEach(function (key, value) {\n                        keyList_1.push(key);\n                    });\n                    if (keyList_1.length > 0) {\n                        for (var i = 0; i < keyList_1.length; i++) {\n                            var key = keyList_1[Number.parseInt(i.toString(), 10)];\n                            if (key && key !== 'Off') {\n                                itemValue = key;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return itemValue;\n    };\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics.drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview, _isNullOrUndefined } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        if (_isNullOrUndefined(array)) {\n            this._annotations = array;\n        }\n        else {\n            this._annotations = [];\n        }\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (dictionary && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (dictionary && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page && this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation && annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation && annotation._ref) {\n            var index = this._annotations.lastIndexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation && annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary && dictionary.has('Subtype') && this._page !== null && typeof this._page !== 'undefined') {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (this._page) {\n            if (dictionary && dictionary.has('A')) {\n                var remote = dictionary.get('A');\n                if (remote && remote.has('S')) {\n                    var link = remote.get('S');\n                    if (link && link.name === 'GoToR' && remote.has('F')) {\n                        annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                    }\n                    else if (link && link.name === 'URI') {\n                        annot = PdfUriAnnotation._load(this._page, dictionary);\n                    }\n                }\n            }\n            else {\n                annot = PdfUriAnnotation._load(this._page, dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var annotation = this.at(i);\n            if (annotation) {\n                annotation._isExport = this._isExport;\n                annotation._doPostProcess(annotation.flatten || isFlatten);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary && annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        if (annotation) {\n            this._annotation = annotation;\n        }\n        this._isReview = isReview;\n        if (annotation && this._annotation._isLoaded || annotation._page) {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _isNullOrUndefined, _obtainDestination, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmarkBase.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('Count')) {\n                return (this._dictionary.get('Count') >= 0);\n            }\n            else {\n                return this._isExpanded;\n            }\n        },\n        /**\n         * Sets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @param {boolean} value whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the boolean flag indicating whether the bookmark is expanded or not\n         * bookmark.isExpanded = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isExpanded = value;\n            if (this.count > 0 && this._dictionary) {\n                this._dictionary.update('Count', value ? this._bookMarkList.length : (-this._bookMarkList.length));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (_isNullOrUndefined(this._bookMarkList) && this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype.add = function (title, index) {\n        var bookmark;\n        if (this._dictionary) {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.update('Parent', this._reference);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, dictionary);\n            bookmark = new PdfBookmark(dictionary, this._crossReference);\n            bookmark._reference = reference;\n            bookmark.title = title;\n            if (typeof index === 'undefined') {\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                }\n                else {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                }\n                this._bookMarkList.push(bookmark);\n            }\n            else {\n                if (index < 0 || index > this.count) {\n                    throw new Error('Index out of range');\n                }\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === this.count) {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === 0) {\n                    var first = this.at(0);\n                    this._dictionary.update('First', reference);\n                    if (first && first._reference) {\n                        dictionary.update('Next', first._reference);\n                        first._dictionary.update('Prev', reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n                else {\n                    var next = this.at(index);\n                    var prev = this.at(index - 1);\n                    if (prev && prev._reference && next && next._reference) {\n                        dictionary.update('Prev', prev._reference);\n                        prev._dictionary.update('Next', reference);\n                        next._dictionary.update('Prev', reference);\n                        dictionary.update('Next', next._reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n            }\n            this._updateCount();\n        }\n        return bookmark;\n    };\n    PdfBookmarkBase.prototype.remove = function (value) {\n        if (typeof value === 'string') {\n            for (var i = this._bookMarkList.length - 1; i >= 0; i--) {\n                var bookmark = this.at(i);\n                if (bookmark.title === value) {\n                    this.remove(i);\n                }\n                else if (bookmark.count > 0) {\n                    bookmark.remove(value);\n                }\n            }\n        }\n        else {\n            if (value >= 0 && value < this.count) {\n                if (this.count === 1) {\n                    this._removeFirst(this._dictionary);\n                    this._removeLast(this._dictionary);\n                    this._removeCount(this._dictionary);\n                    this._bookMarkList = [];\n                }\n                else {\n                    if (value === 0) {\n                        var next = this.at(value + 1);\n                        if (this._dictionary && next && next._reference) {\n                            this._removePrevious(next._dictionary);\n                            this._dictionary.update('First', next._reference);\n                        }\n                    }\n                    else if (value === this.count - 1) {\n                        var prev = this.at(value - 1);\n                        if (this._dictionary && prev && prev._reference) {\n                            this._removeNext(prev._dictionary);\n                            this._dictionary.update('Last', prev._reference);\n                        }\n                    }\n                    else {\n                        var prev = this.at(value - 1);\n                        var next = this.at(value + 1);\n                        if (prev && prev._reference && next && next._reference) {\n                            prev._dictionary.update('Next', next._reference);\n                            next._dictionary.update('Prev', prev._reference);\n                        }\n                    }\n                    this._updateBookmarkList(value);\n                    if (this._dictionary) {\n                        this._updateCount();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Removes all the bookmark from the collection.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Remove all the bookmark from the collection.\n     * bookmarks.clear();\n     * // Get count after removal of all outlines.\n     * let count: number = bookmarks.count;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.clear = function () {\n        this._removeFirst(this._dictionary);\n        this._removeLast(this._dictionary);\n        this._removeCount(this._dictionary);\n        this._bookMarkList = [];\n    };\n    PdfBookmarkBase.prototype._removeFirst = function (dictionary) {\n        if (dictionary && dictionary.has('First')) {\n            delete dictionary._map.First;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeLast = function (dictionary) {\n        if (dictionary && dictionary.has('Last')) {\n            delete dictionary._map.Last;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeNext = function (dictionary) {\n        if (dictionary && dictionary.has('Next')) {\n            delete dictionary._map.Next;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removePrevious = function (dictionary) {\n        if (dictionary && dictionary.has('Prev')) {\n            delete dictionary._map.Prev;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeCount = function (dictionary) {\n        if (dictionary && dictionary.has('Count')) {\n            delete dictionary._map.Count;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._updateBookmarkList = function (index, bookmark) {\n        var updatedList = [];\n        if (typeof bookmark === 'undefined') {\n            for (var i = 0; i < this.count; i++) {\n                var entry = this._bookMarkList[Number.parseInt(i.toString(), 10)];\n                if (i !== index) {\n                    updatedList.push(entry);\n                }\n                else {\n                    var reference = entry._reference;\n                    if (reference && this._crossReference._cacheMap.has(reference)) {\n                        this._crossReference._cacheMap.get(reference)._updated = false;\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < this.count; i++) {\n                if (i === index) {\n                    updatedList.push(bookmark);\n                }\n                updatedList.push(this._bookMarkList[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this._bookMarkList = updatedList;\n    };\n    PdfBookmarkBase.prototype._updateCount = function () {\n        if (this.isExpanded || !this._dictionary.has('Count')) {\n            this._dictionary.update('Count', this._bookMarkList.length);\n        }\n        else {\n            this._dictionary.update('Count', -this._bookMarkList.length);\n        }\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var firstBookmark = this._getBookmark(this);\n        var isBookmark = (firstBookmark) ? true : false;\n        while (isBookmark && firstBookmark._dictionary) {\n            this._bookMarkList.push(firstBookmark);\n            firstBookmark = firstBookmark._next;\n            isBookmark = (firstBookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getBookmark = function (bookmarkBase, isFirst) {\n        if (isFirst === void 0) { isFirst = true; }\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has(isFirst ? 'First' : 'Last')) {\n            var reference = bookmarkBaseDictionary._get(isFirst ? 'First' : 'Last');\n            if (_isNullOrUndefined(reference)) {\n                var bookMarkDictionary = this._crossReference._fetch(reference);\n                if (bookMarkDictionary) {\n                    bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n                    bookMark._reference = reference;\n                }\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (_this._dictionary && !_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._destination) {\n                var namedDestination = this._obtainNamedDestination();\n                if (namedDestination === null || typeof namedDestination === 'undefined') {\n                    this._destination = _obtainDestination(this._dictionary, 'Dest');\n                }\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Set the destination\n         * bookmark.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination.\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        /**\n         * Sets the named destination.\n         *\n         * @param {PdfNamedDestination} value Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._namedDestination !== value && this._dictionary) {\n                this._namedDestination = value;\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('D', value.title);\n                dictionary.update('S', _PdfName.get('GoTo'));\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._dictionary.update('A', reference);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title.\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                if (this._dictionary && this._dictionary.has('Title')) {\n                    this._title = this._dictionary.get('Title');\n                }\n                else {\n                    this._title = '';\n                }\n            }\n            return this._title;\n        },\n        /**\n         * Sets the bookmark title.\n         *\n         * @param {string} value Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark title\n         * bookmark.title = 'Syncfusion';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._title = value;\n            if (this._dictionary) {\n                this._dictionary.update('Title', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color.\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary && this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        /**\n         * Sets the bookmark color.\n         *\n         * @param {number[]} value Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark color\n         * bookmark.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._color = value;\n            if (this._dictionary) {\n                this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                    Number.parseFloat((value[1] / 255).toFixed(7)),\n                    Number.parseFloat((value[2] / 255).toFixed(7))]);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the text style.\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        /**\n         * Sets the text style.\n         *\n         * @param {PdfTextStyle} value Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the textStyle\n         * bookmark.textStyle = PdfTextStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textStyle = value;\n            this._updateTextStyle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary && this._dictionary.has('Next')) {\n                var reference = this._dictionary._get('Next');\n                if (_isNullOrUndefined(reference)) {\n                    var dictionary = this._crossReference._fetch(reference);\n                    if (dictionary) {\n                        nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                        nextBookmark._reference = reference;\n                    }\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._updateTextStyle = function (value) {\n        if (value === PdfTextStyle.regular) {\n            if (this._dictionary && this._dictionary.has('F')) {\n                delete this._dictionary._map.F;\n            }\n        }\n        else if (this._dictionary) {\n            this._dictionary.update('F', value);\n        }\n    };\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary && this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary) {\n                if (dictionary.has('A')) {\n                    var action = dictionary.get('A');\n                    if (action && action.has('D')) {\n                        destination = action.get('D');\n                    }\n                }\n                else if (dictionary.has('Dest')) {\n                    destination = dictionary.get('Dest');\n                }\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    function PdfNamedDestination(element, crossReference) {\n        if (typeof element === 'string') {\n            this._initialize();\n            this.title = element;\n        }\n        else {\n            this._dictionary = element;\n            this._crossReference = crossReference;\n        }\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title && this._dictionary) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfNamedDestination.prototype._initialize = function () {\n        this._dictionary = new _PdfDictionary();\n        this._dictionary.update('S', _PdfName.get('GoTo'));\n    };\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        this._findDestination(destinationArray[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._findDestination = function (destination) {\n        if (destination) {\n            if (destination.has('Names')) {\n                this._addCollection(destination);\n            }\n            else if (destination.has('Kids')) {\n                var kids = destination.getArray('Kids'); // eslint-disable-line\n                if (kids && Array.isArray(kids) && kids.length > 0) {\n                    for (var i = 0; i < kids.length; i++) {\n                        this._findDestination(kids[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    };\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements && elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference && reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (reference_1 && destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty, _isNullOrUndefined } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfTemplate } from './graphics/pdf-template';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._isNew = false;\n        this._isDuplicate = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                        var widgets_1;\n                        if (this._crossReference._document._catalog._catalogDictionary.has('AcroForm')) {\n                            widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        }\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n                var cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n                var width = 0;\n                var height = 0;\n                var rotate = this._pageDictionary && this._pageDictionary.has('Rotate')\n                    ? _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent')\n                    : 0;\n                if (cBox && rotate !== null && typeof rotate !== 'undefined') {\n                    width = cBox[2] - cBox[0];\n                    height = cBox[3] - cBox[1];\n                    var isValidCropBox = !(mBox && (mBox[2] - mBox[0]) < width);\n                    if (!(((rotate === 0 || rotate === 180) && (width < height)) ||\n                        ((rotate === 90 || rotate === 270) && (width > height) || isValidCropBox)) && (rotate === 0 && mBox)) {\n                        width = mBox[2] - mBox[0];\n                        height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                    }\n                }\n                else if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                else {\n                    this._pageDictionary.update('MediaBox', [0, 0, 612, 792]);\n                    width = 612;\n                    height = 792;\n                }\n                this._size = [Math.abs(width), Math.abs(height)];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n                if (angle < 0) {\n                    angle += 360;\n                }\n                this._rotation = (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n            }\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the rotation angle of the PDF page\n         * page.rotate = PdfRotationAngle.angle90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isNew) {\n                this._rotation = value;\n                var rotate = Math.floor(this._rotation) * 90;\n                if (rotate >= 360) {\n                    rotate = rotate % 360;\n                }\n                this._pageDictionary.update('Rotate', rotate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            var annotsRef = this._pageDictionary.getRaw('Annots'); // eslint-disable-line\n            annots = this._getProperty('Annots');\n            if (annotsRef && annotsRef instanceof _PdfReference) {\n                delete this._pageDictionary._map.Annots;\n                this._pageDictionary.update('Annots', annots);\n            }\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        if (!this._isNew) {\n            var rotation = this.rotation;\n            if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n                var rotate = void 0;\n                if (this._pageDictionary.has('Rotate')) {\n                    rotate = this._pageDictionary.get('Rotate');\n                }\n                else {\n                    rotate = rotation * 90;\n                }\n                var clip = this._g._clipBounds;\n                if (rotate === 90) {\n                    this._g.translateTransform(0, size[1]);\n                    this._g.rotateTransform(-90);\n                    this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n                }\n                else if (rotate === 180) {\n                    this._g.translateTransform(size[0], size[1]);\n                    this._g.rotateTransform(-180);\n                }\n                else if (rotate === 270) {\n                    this._g.translateTransform(size[0], 0);\n                    this._g.rotateTransform(-270);\n                    this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n                }\n            }\n        }\n        if (this._isNew && this._pageSettings) {\n            var clipBounds = this._getActualBounds(this._pageSettings);\n            this._g._clipTranslateMargins(clipBounds);\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._getActualBounds = function (pageSettings) {\n        var actualSize = pageSettings._getActualSize();\n        return [pageSettings.margins.left, pageSettings.margins.top, actualSize[0], actualSize[1]];\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj && obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary) {\n            if (this._pageDictionary.has('CropBox')) {\n                box = this._pageDictionary.getArray('CropBox');\n            }\n            else if (this._pageDictionary.has('MediaBox')) {\n                box = this._pageDictionary.getArray('MediaBox');\n            }\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary && this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    Object.defineProperty(PdfPage.prototype, \"_contentTemplate\", {\n        get: function () {\n            this._loadContents();\n            this._fetchResources();\n            var array;\n            var list = [];\n            var count = this._contents.length;\n            list.push(new Uint8Array([32, 113, 32, 10]));\n            for (var i = 0; i < count; i++) {\n                var reference = this._contents[Number.parseInt(i.toString(), 10)];\n                var base = this._crossReference._fetch(reference); // eslint-disable-line\n                if (base) {\n                    if (base instanceof _PdfContentStream) {\n                        array = new Uint8Array(base._bytes);\n                    }\n                    else if (base instanceof _PdfBaseStream) {\n                        array = base.getBytes();\n                    }\n                    if (array) {\n                        list.push(array);\n                        list.push(new Uint8Array([13, 10]));\n                    }\n                }\n            }\n            list.push(new Uint8Array([32, 81, 32, 10]));\n            list.push(new Uint8Array([13, 10]));\n            var targetArray = this._combineIntoSingleArray(list);\n            var targetStream = new _PdfContentStream(Array.from(targetArray));\n            var template = new PdfTemplate(targetStream, this._crossReference);\n            template._content.dictionary.set('Resources', this._resourceObject);\n            if (this.cropBox[0] > 0 || this.cropBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.cropBox);\n                template._size = [this.cropBox[0], this.cropBox[1]];\n            }\n            else if (this.mediaBox[0] > 0 || this.mediaBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.mediaBox);\n                template._size = [this.mediaBox[0], this.mediaBox[1]];\n            }\n            else {\n                template._content.dictionary.set('BBox', [0, 0, this.size[0], this.size[1]]);\n                template._size = [this.size[0], this.size[1]];\n            }\n            return template;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._combineIntoSingleArray = function (arrays) {\n        var totalLength = arrays.reduce(function (length, arr) { return length + arr.length; }, 0);\n        var targetArray = new Uint8Array(totalLength);\n        var offset = 0;\n        arrays.forEach(function (sourceArray) {\n            targetArray.set(sourceArray, offset);\n            offset += sourceArray.length;\n        });\n        return targetArray;\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        if (page && page._pageDictionary) {\n            var element = page._pageDictionary;\n            if (typeof element !== 'undefined' && element !== null) {\n                this._array.push(this._page._ref);\n            }\n            switch (this._destinationMode) {\n                case PdfDestinationMode.location:\n                    this._array.push(_PdfName.get('XYZ'));\n                    if (typeof page !== 'undefined' && page !== null) {\n                        this._array.push(this._location[0]);\n                        this._array.push(this._page.graphics._size[1] - this._location[1]);\n                    }\n                    else {\n                        this._array.push(0);\n                        this._array.push(0);\n                    }\n                    this._array.push(this._zoom);\n                    break;\n                case PdfDestinationMode.fitToPage:\n                    this._array.push(_PdfName.get('Fit'));\n                    break;\n                case PdfDestinationMode.fitR:\n                    this._array.push(_PdfName.get('FitR'));\n                    this._array.push(this._destinationBounds[0]);\n                    this._array.push(this._destinationBounds[1]);\n                    this._array.push(this._destinationBounds[2]);\n                    this._array.push(this._destinationBounds[3]);\n                    break;\n                case PdfDestinationMode.fitH:\n                    this._array.push(_PdfName.get('FitH'));\n                    this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                    break;\n            }\n            if (this._parent) {\n                this._parent._dictionary.set(this._parent instanceof PdfNamedDestination ? 'D' : 'Dest', this._array);\n                this._parent._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    function _ImageDecoder() {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n    }\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count, stream) {\n        if (stream && Array.isArray(stream)) {\n            var result = 0;\n            if (count <= stream.length && stream.length - offset >= count) {\n                for (var i = 0; i < count; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = stream[Number.parseInt(offset.toString(), 10)];\n                    offset++;\n                    result++;\n                }\n            }\n            return { 'outputBuffer': buffer, 'offset': offset, 'length': result };\n        }\n        else {\n            for (var index = offset; index < count; index++) {\n                var position = this._position;\n                buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n                this._position++;\n            }\n        }\n    };\n    _ImageDecoder.prototype._readString = function (length) {\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += String.fromCharCode(this._readByte());\n        }\n        return result;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._readUnsigned32 = function (offset) {\n        var i1 = this._getBuffer(offset + 3);\n        var i2 = this._getBuffer(offset + 2);\n        var i3 = this._getBuffer(offset + 1);\n        var i4 = this._getBuffer(offset);\n        return i1 | (i2 << 8) | (i3 << 16) | (i4 << 24);\n    };\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _JpegDecoder = /** @class */ (function (_super) {\n    __extends(_JpegDecoder, _super);\n    /**\n     * Initializes a new instance of the `_JpegDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _JpegDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._initialize();\n        return _this;\n    }\n    Object.defineProperty(_JpegDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _JpegDecoder.prototype._initialize = function () {\n        this._format = _ImageFormat.jpeg;\n        this._readHeader();\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _JpegDecoder.prototype._readHeader = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _JpegDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _JpegDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _JpegDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _JpegDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _JpegDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _JpegDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    return _JpegDecoder;\n}(_ImageDecoder));\nexport { _JpegDecoder };\n","export var _InflaterState;\n(function (_InflaterState) {\n    _InflaterState[_InflaterState[\"readingHeader\"] = 0] = \"readingHeader\";\n    _InflaterState[_InflaterState[\"readingBFinal\"] = 1] = \"readingBFinal\";\n    _InflaterState[_InflaterState[\"readingBType\"] = 2] = \"readingBType\";\n    _InflaterState[_InflaterState[\"readingNlCodes\"] = 3] = \"readingNlCodes\";\n    _InflaterState[_InflaterState[\"readingNdCodes\"] = 4] = \"readingNdCodes\";\n    _InflaterState[_InflaterState[\"readingCodes\"] = 5] = \"readingCodes\";\n    _InflaterState[_InflaterState[\"readingClCodes\"] = 6] = \"readingClCodes\";\n    _InflaterState[_InflaterState[\"readingTcBefore\"] = 7] = \"readingTcBefore\";\n    _InflaterState[_InflaterState[\"readingTcAfter\"] = 8] = \"readingTcAfter\";\n    _InflaterState[_InflaterState[\"decodeTop\"] = 9] = \"decodeTop\";\n    _InflaterState[_InflaterState[\"iLength\"] = 10] = \"iLength\";\n    _InflaterState[_InflaterState[\"fLength\"] = 11] = \"fLength\";\n    _InflaterState[_InflaterState[\"dCode\"] = 12] = \"dCode\";\n    _InflaterState[_InflaterState[\"unCompressedAligning\"] = 13] = \"unCompressedAligning\";\n    _InflaterState[_InflaterState[\"unCompressedByte1\"] = 14] = \"unCompressedByte1\";\n    _InflaterState[_InflaterState[\"unCompressedByte2\"] = 15] = \"unCompressedByte2\";\n    _InflaterState[_InflaterState[\"unCompressedByte3\"] = 16] = \"unCompressedByte3\";\n    _InflaterState[_InflaterState[\"unCompressedByte4\"] = 17] = \"unCompressedByte4\";\n    _InflaterState[_InflaterState[\"decodeUnCompressedBytes\"] = 18] = \"decodeUnCompressedBytes\";\n    _InflaterState[_InflaterState[\"srFooter\"] = 19] = \"srFooter\";\n    _InflaterState[_InflaterState[\"rFooter\"] = 20] = \"rFooter\";\n    _InflaterState[_InflaterState[\"vFooter\"] = 21] = \"vFooter\";\n    _InflaterState[_InflaterState[\"done\"] = 22] = \"done\";\n})(_InflaterState || (_InflaterState = {}));\nexport var _BlockType;\n(function (_BlockType) {\n    _BlockType[_BlockType[\"unCompressedType\"] = 0] = \"unCompressedType\";\n    _BlockType[_BlockType[\"staticType\"] = 1] = \"staticType\";\n    _BlockType[_BlockType[\"dynamicType\"] = 2] = \"dynamicType\";\n})(_BlockType || (_BlockType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nimport { _bytesToString, _toUnsigned, _toSigned32 } from './../../utils';\nimport { _DeflateStream } from './../../compression/deflate-stream';\n/* eslint-disable */\nvar _PngDecoder = /** @class */ (function (_super) {\n    __extends(_PngDecoder, _super);\n    /**\n     * Initializes a new instance of the `_PngDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _PngDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._format = _ImageFormat.png;\n        _this._isRedGreenBlue = false;\n        _this._isDecode = false;\n        _this._shades = false;\n        _this._ideateDecode = true;\n        _this._colors = 0;\n        _this._bitsPerPixel = 0;\n        _this._idatLength = 0;\n        _this._inputBands = 0;\n        _this._position = 8;\n        _this._initialize();\n        return _this;\n    }\n    _PngDecoder.prototype._initialize = function () {\n        var header;\n        var result = this._hasValidChunkType(header);\n        while (result.hasValidChunk) {\n            header = result.type;\n            switch (header) {\n                case _PngChunkTypes.iHDR:\n                    this._readHeader();\n                    break;\n                case _PngChunkTypes.iDAT:\n                    this._readImageData();\n                    break;\n                case _PngChunkTypes.sRGB:\n                    this._isRedGreenBlue = true;\n                    this._ignoreChunk();\n                    break;\n                case _PngChunkTypes.pLTE:\n                    this._readPhotoPlate();\n                    break;\n                case _PngChunkTypes.iEND:\n                    this._decodeImageData();\n                    break;\n                case _PngChunkTypes.tRNS:\n                    this._readTransparency();\n                    break;\n                case _PngChunkTypes.tEXt:\n                case _PngChunkTypes.iTXt:\n                case _PngChunkTypes.zTXt:\n                case _PngChunkTypes.hIST:\n                case _PngChunkTypes.sBIT:\n                case _PngChunkTypes.iCCP:\n                case _PngChunkTypes.pHYs:\n                case _PngChunkTypes.tIME:\n                case _PngChunkTypes.bKGD:\n                case _PngChunkTypes.gAMA:\n                case _PngChunkTypes.cHRM:\n                case _PngChunkTypes.unknown:\n                    this._ignoreChunk();\n                    break;\n                default:\n                    break;\n            }\n            result = this._hasValidChunkType(header);\n        }\n    };\n    _PngDecoder.prototype._hasValidChunkType = function (type) {\n        type = _PngChunkTypes.unknown;\n        if (this._position + 8 <= this._stream.byteLength) {\n            this._currentChunkLength = this._readUnsigned32(this._position);\n            this._seek(4);\n            var chunk = this._readString(4);\n            var header = this._getChunkType(chunk);\n            if (typeof header !== 'undefined' && header !== null) {\n                type = header;\n                return { 'type': type, 'hasValidChunk': true };\n            }\n            if (this._stream.byteLength === this._position) {\n                return { 'type': type, 'hasValidChunk': false };\n            }\n            else {\n                return { 'type': type, 'hasValidChunk': true };\n            }\n        }\n        else {\n            return { 'type': type, 'hasValidChunk': false };\n        }\n    };\n    _PngDecoder.prototype._ignoreChunk = function () {\n        if (this._currentChunkLength > 0) {\n            this._seek(this._currentChunkLength + 4);\n        }\n    };\n    _PngDecoder.prototype._readHeader = function () {\n        this._header = new _PngHeader();\n        this._header._width = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._height = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._bitDepth = this._readByte();\n        this._header._colorType = this._readByte();\n        this._header._compression = this._readByte();\n        this._header._filter = this._getFilterType(this._readByte());\n        this._header._interlace = this._readByte();\n        this._colors = (this._header._colorType === 3 || (this._header._colorType & 2) === 0) ? 1 : 3;\n        this._width = this._header._width;\n        this._height = this._header._height;\n        this._bitsPerComponent = this._header._bitDepth;\n        this._setBitsPerPixel();\n        this._seek(4);\n    };\n    _PngDecoder.prototype._setBitsPerPixel = function () {\n        this._bitsPerPixel = this._header._bitDepth === 16 ? 2 : 1;\n        if (this._header._colorType === 0) {\n            this._idatLength = Number.parseInt(((this._bitsPerComponent * this._width + 7) / 8).toString(), 10) * this._height;\n            this._inputBands = 1;\n        }\n        else if (this._header._colorType === 2) {\n            this._idatLength = this._width * this._height * 3;\n            this._inputBands = 3;\n            this._bitsPerPixel *= 3;\n        }\n        else if (this._header._colorType === 3) {\n            if (this._header._interlace === 1 || this._header._interlace === 0) {\n                this._idatLength = Number.parseInt(((this._header._bitDepth * this._width + 7) / 8).toString(), 10) * this._height;\n            }\n            this._inputBands = 1;\n            this._bitsPerPixel = 1;\n        }\n        else if (this._header._colorType === 4) {\n            this._idatLength = this._width * this._height;\n            this._inputBands = 2;\n            this._bitsPerPixel *= 2;\n        }\n        else if (this._header._colorType === 6) {\n            this._idatLength = this._width * 3 * this._height;\n            this._inputBands = 4;\n            this._bitsPerPixel *= 4;\n        }\n    };\n    _PngDecoder.prototype._readImageData = function () {\n        if (!this._encodedStream || this._encodedStream.length === 0) {\n            this._encodedStream = [];\n        }\n        if (this._currentChunkLength <= this._stream.byteLength && this._stream.byteLength - this._position >= this._currentChunkLength) {\n            for (var i = 0; i < this._currentChunkLength; i++) {\n                this._encodedStream.push(this._readByte());\n            }\n        }\n        this._seek(4);\n    };\n    _PngDecoder.prototype._readPhotoPlate = function () {\n        if (this._header._colorType === 3) {\n            this._colorSpace = [];\n            this._colorSpace.push(_PdfName.get('Indexed'));\n            this._colorSpace.push(this._getPngColorSpace());\n            this._colorSpace.push(this._currentChunkLength / 3 - 1);\n            var buffer = new Uint8Array(this._currentChunkLength);\n            this._read(buffer, 0, this._currentChunkLength);\n            this._colorSpace.push(_bytesToString(buffer));\n            this._seek(4);\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._readTransparency = function () {\n        if (this._header._colorType === 3) {\n            var alpha = new Uint8Array(this._currentChunkLength);\n            this._read(alpha, 0, this._currentChunkLength);\n            this._seek(4);\n            this._alpha = [];\n            for (var i = 0; i < alpha.length; i++) {\n                this._alpha.push(alpha[Number.parseInt(i.toString(), 10)]);\n                var sh = alpha[Number.parseInt(i.toString(), 10)] & 0xff;\n                if (sh !== 0 && sh !== 255) {\n                    this._shades = true;\n                }\n            }\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._getPngColorSpace = function () {\n        if (!this._isRedGreenBlue) {\n            if ((this._header._colorType & 2) === 0) {\n                return _PdfName.get('DeviceGray');\n            }\n            else {\n                return _PdfName.get('DeviceRGB');\n            }\n        }\n        else {\n            var colorspace = [];\n            var calRGB = new _PdfDictionary();\n            var whitePoint = [1, 1, 1];\n            var gammaArray = [2.2, 2.2, 2.2];\n            calRGB.set('Gamma', gammaArray);\n            if (this._isRedGreenBlue) {\n                var wpX = 0.3127;\n                var wpY = 0.329;\n                var redX = 0.64;\n                var redY = 0.33;\n                var greenX = 0.3;\n                var greenY = 0.6;\n                var bX = 0.15;\n                var bY = 0.06;\n                var t = wpY * ((greenX - bX) * redY - (redX - bX) * greenY + (redX - greenX) * bY);\n                var alphaY = redY * ((greenX - bX) * wpY - (wpX - bX) * greenY + (wpX - greenX) * bY) / t;\n                var alphaX = alphaY * redX / redY;\n                var alphaZ = alphaY * ((1 - redX) / redY - 1);\n                var blueY = -greenY * ((redX - bX) * wpY - (wpX - bX) * redY + (wpX - redX) * bY) / t;\n                var blueX = blueY * greenX / greenY;\n                var blueZ = blueY * ((1 - greenX) / greenY - 1);\n                var colorY = bY * ((redX - greenX) * wpY - (wpX - greenX) * wpY + (wpX - redX) * greenY) / t;\n                var colorX = colorY * bX / bY;\n                var colorZ = colorY * ((1 - bX) / bY - 1);\n                var whiteX = alphaX + blueX + colorX;\n                var whiteY = 1;\n                var whiteZ = alphaZ + blueZ + colorZ;\n                whitePoint = [whiteX, whiteY, whiteZ];\n                calRGB.set('Matrix', [alphaX, alphaY, alphaZ, blueX, blueY, blueZ, colorX, colorY, colorZ]);\n            }\n            calRGB.set('WhitePoint', whitePoint);\n            colorspace.push(_PdfName.get('CalRGB'));\n            colorspace.push(calRGB);\n            return colorspace;\n        }\n    };\n    _PngDecoder.prototype._decodeImageData = function () {\n        var header = this._header;\n        this._isDecode = (header._interlace === 1) || (header._bitDepth === 16) || ((header._colorType & 4) !== 0) || this._shades;\n        if (this._isDecode) {\n            if ((header._colorType & 4) !== 0 || this._shades) {\n                this._maskData = Array(this._width * this._height).fill(0);\n            }\n            if (this._encodedStream) {\n                this._dataStream = this._getDeflatedData(this._encodedStream);\n                this._dataStreamOffset = 0;\n            }\n            if (this._idatLength > 0) {\n                this._decodedImageData = Array(this._idatLength).fill(0);\n            }\n            this._readDecodeData();\n            if (this._decodedImageData && this._decodedImageData.length === 0 && this._shades) {\n                this._ideateDecode = false;\n                this._decodedImageData = this._encodedStream;\n            }\n        }\n        else {\n            this._ideateDecode = false;\n            this._decodedImageData = this._encodedStream;\n        }\n    };\n    _PngDecoder.prototype._getDeflatedData = function (data) {\n        var idatData = data.slice(2, data.length - 4);\n        var deflateStream = new _DeflateStream(idatData, 0, true);\n        var buffer = Array(4096).fill(0);\n        var numRead = 0;\n        var outputData = [];\n        do {\n            var result = deflateStream._read(buffer, 0, buffer.length);\n            numRead = result.count;\n            buffer = result.data;\n            for (var i = 0; i < numRead; i++) {\n                outputData.push(buffer[Number.parseInt(i.toString(), 10)]);\n            }\n        } while (numRead > 0);\n        return outputData;\n    };\n    _PngDecoder.prototype._readDecodeData = function () {\n        if (this._header._interlace !== 1) {\n            this._decodeData(0, 0, 1, 1, this._width, this._height);\n        }\n        else {\n            this._decodeData(0, 0, 8, 8, Math.floor((this._width + 7) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(4, 0, 8, 8, Math.floor((this._width + 3) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(0, 4, 4, 8, Math.floor((this._width + 3) / 4), Math.floor((this._height + 3) / 8));\n            this._decodeData(2, 0, 4, 4, Math.floor((this._width + 1) / 4), Math.floor((this._height + 3) / 4));\n            this._decodeData(0, 2, 2, 4, Math.floor((this._width + 1) / 2), Math.floor((this._height + 1) / 4));\n            this._decodeData(1, 0, 2, 2, Math.floor(this._width / 2), Math.floor((this._height + 1) / 2));\n            this._decodeData(0, 1, 1, 2, this._width, Math.floor(this._height / 2));\n        }\n    };\n    _PngDecoder.prototype._decodeData = function (xOffset, yOffset, xStep, yStep, width, height) {\n        if ((width === 0) || (height === 0)) {\n            return;\n        }\n        else {\n            var bytesPerRow = Math.floor((this._inputBands * width * this._header._bitDepth + 7) / 8);\n            var current = Array(bytesPerRow).fill(0);\n            var prior = Array(bytesPerRow).fill(0);\n            for (var sourceY = 0, destinationY = yOffset; sourceY < height; sourceY++, destinationY += yStep) {\n                var filter = this._dataStream[this._dataStreamOffset];\n                this._dataStreamOffset = this._dataStreamOffset + 1;\n                this._dataStreamOffset = this._readStream(this._dataStream, this._dataStreamOffset, current, bytesPerRow);\n                switch (this._getFilterType(filter)) {\n                    case _PngFilterTypes.none:\n                        break;\n                    case _PngFilterTypes.sub:\n                        this._decompressSub(current, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.up:\n                        this._decompressUp(current, prior, bytesPerRow);\n                        break;\n                    case _PngFilterTypes.average:\n                        this._decompressAverage(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.paeth:\n                        this._decompressPaeth(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    default:\n                        throw new Error('Unknown PNG filter');\n                }\n                this._processPixels(current, xOffset, xStep, destinationY, width);\n                var tmp = prior;\n                prior = current;\n                current = tmp;\n            }\n        }\n    };\n    _PngDecoder.prototype._readStream = function (stream, streamOffset, data, count) {\n        var result = this._read(data, streamOffset, count, stream);\n        data = result.outputBuffer;\n        streamOffset = result.offset;\n        var n = result.length;\n        if (n <= 0) {\n            throw new Error('Insufficient data');\n        }\n        return streamOffset;\n    };\n    _PngDecoder.prototype._decompressSub = function (data, count, bitsPerPixel) {\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (data[i - bitsPerPixel] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressUp = function (data, pData, count) {\n        for (var i = 0; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressAverage = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val) + pr / 2), 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val + Math.floor((pp + pr) / 2))), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressPaeth = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        var prp;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(val + pr, 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            prp = pData[i - bitsPerPixel] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((val + this._paethPredictor(pp, pr, prp)), 8);\n        }\n    };\n    _PngDecoder.prototype._paethPredictor = function (a, b, c) {\n        var p = a + b - c;\n        var pa = Math.abs(p - a);\n        var pb = Math.abs(p - b);\n        var pc = Math.abs(p - c);\n        if ((pa <= pb) && (pa <= pc)) {\n            return a;\n        }\n        else if (pb <= pc) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    };\n    _PngDecoder.prototype._processPixels = function (data, x, step, y, width) {\n        var sourceX = 0;\n        var destX = 0;\n        var size = 0;\n        var pixel = this._getPixel(data);\n        if (this._header._colorType === 0 || this._header._colorType === 3 || this._header._colorType === 4) {\n            size = 1;\n        }\n        else if (this._header._colorType === 2 || this._header._colorType === 6) {\n            size = 3;\n        }\n        if (this._decodedImageData && this._decodedImageData.length > 0) {\n            destX = x;\n            var depth = (this._header._bitDepth === 16) ? 8 : this._header._bitDepth;\n            var yStep = Math.floor((size * width * depth + 7) / 8);\n            for (sourceX = 0; sourceX < width; sourceX++) {\n                this._decodedImageData = this._setPixel(this._decodedImageData, pixel, this._inputBands * sourceX, size, destX, y, this._header._bitDepth, yStep);\n                destX += step;\n            }\n        }\n        var shades = (this._header._colorType & 4) !== 0 || this._shades;\n        if (shades) {\n            if ((this._header._colorType & 4) !== 0) {\n                if (this._header._bitDepth === 16) {\n                    for (var i = 0; i < width; ++i) {\n                        var temp = i * this._inputBands + size;\n                        var unsigned = _toUnsigned(pixel[Number.parseInt(temp.toString(), 10)], 32);\n                        pixel[Number.parseInt(temp.toString(), 10)] = _toSigned32(unsigned >> 8);\n                    }\n                }\n                var yStep = width;\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    this._maskData = this._setPixel(this._maskData, pixel, this._inputBands * sourceX + size, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n            else {\n                var yStep = width;\n                var dt = [0];\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    var index = pixel[Number.parseInt(sourceX.toString(), 10)];\n                    if (index < this._alpha.length) {\n                        dt[0] = this._alpha[Number.parseInt(index.toString(), 10)];\n                    }\n                    else {\n                        dt[0] = 255;\n                    }\n                    this._maskData = this._setPixel(this._maskData, dt, 0, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n        }\n    };\n    _PngDecoder.prototype._getPixel = function (data) {\n        if (this._header._bitDepth === 8) {\n            var pixel = Array(data.length).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            }\n            return pixel;\n        }\n        else if (this._header._bitDepth === 16) {\n            var pixel = Array(Math.floor(data.length / 2)).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = ((data[i * 2] & 0xff) << 8) + (data[i * 2 + 1] & 0xff);\n            }\n            return pixel;\n        }\n        else {\n            var pixel = Array(Math.floor((data.length * 8) / this._header._bitDepth)).fill(0);\n            var index = 0;\n            var p = Math.floor(8 / this._header._bitDepth);\n            var mask = (1 << this._header._bitDepth) - 1;\n            for (var n = 0; n < data.length; ++n) {\n                for (var i = p - 1; i >= 0; --i) {\n                    var hb = this._header._bitDepth * i;\n                    var d = data[Number.parseInt(n.toString(), 10)];\n                    pixel[index++] = ((hb < 1) ? d : _toSigned32(_toUnsigned(d, 32) >> hb)) & mask;\n                }\n            }\n            return pixel;\n        }\n    };\n    _PngDecoder.prototype._setPixel = function (imageData, data, offset, size, x, y, bitDepth, bpr) {\n        if (bitDepth === 8) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned(data[i + offset], 8);\n            }\n        }\n        else if (bitDepth === 16) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned((data[i + offset] >> 8), 8);\n            }\n        }\n        else {\n            var position = Math.floor((bpr * y + x) / (8 / bitDepth));\n            var t = data[Number.parseInt(offset.toString(), 10)]\n                << Number.parseInt((8 - bitDepth * (x % (8 / bitDepth)) - bitDepth).toString(), 10);\n            imageData[Number.parseInt(position.toString(), 10)] = imageData[Number.parseInt(position.toString(), 10)] | _toUnsigned(t, 8);\n        }\n        return imageData;\n    };\n    _PngDecoder.prototype._getImageDictionary = function () {\n        var data = [];\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var decodedString = '';\n        for (var i = 0; i < this._decodedImageData.length; i++) {\n            decodedString += String.fromCharCode(this._decodedImageData[Number.parseInt(i.toString(), 10)]);\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = this._isDecode && this._ideateDecode;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        if (this._bitsPerComponent === 16) {\n            dictionary.set('BitsPerComponent', 8);\n        }\n        else {\n            dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        }\n        if (!this._isDecode || !this._ideateDecode) {\n            dictionary.set('Filter', new _PdfName('FlateDecode'));\n        }\n        if ((this._header._colorType & 2) === 0) {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n        }\n        else {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceRGB'));\n        }\n        if (!this._isDecode || this._shades && !this._ideateDecode) {\n            dictionary.set('DecodeParms', this._getDecodeParams());\n        }\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        this._setMask();\n        return this._imageStream;\n    };\n    _PngDecoder.prototype._setMask = function () {\n        if (this._maskData && this._maskData.length > 0) {\n            this._maskStream = new _PdfStream(this._maskData, new _PdfDictionary());\n            this._maskStream._isCompress = this._isDecode && this._ideateDecode;\n            var dictionary = new _PdfDictionary();\n            dictionary.set('Type', new _PdfName('XObject'));\n            dictionary.set('Subtype', new _PdfName('Image'));\n            dictionary.set('Width', this._width);\n            dictionary.set('Height', this._height);\n            if (this._bitsPerComponent === 16) {\n                dictionary.set('BitsPerComponent', 8);\n            }\n            else {\n                dictionary.set('BitsPerComponent', this._bitsPerComponent);\n            }\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n            this._maskStream.dictionary = dictionary;\n            this._maskStream.bytes = new Uint8Array(this._maskData);\n            this._maskStream.end = this._maskStream.bytes.length;\n            this._maskStream.dictionary._updated = true;\n        }\n    };\n    _PngDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('Colors', this._colors);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _PngDecoder.prototype._getChunkType = function (chunk) {\n        switch (chunk) {\n            case 'IHDR':\n                return _PngChunkTypes.iHDR;\n            case 'PLTE':\n                return _PngChunkTypes.pLTE;\n            case 'IDAT':\n                return _PngChunkTypes.iDAT;\n            case 'IEND':\n                return _PngChunkTypes.iEND;\n            case 'bKGD':\n                return _PngChunkTypes.bKGD;\n            case 'cHRM':\n                return _PngChunkTypes.cHRM;\n            case 'gAMA':\n                return _PngChunkTypes.gAMA;\n            case 'hIST':\n                return _PngChunkTypes.hIST;\n            case 'pHYs':\n                return _PngChunkTypes.pHYs;\n            case 'sBIT':\n                return _PngChunkTypes.sBIT;\n            case 'tEXt':\n                return _PngChunkTypes.tEXt;\n            case 'tIME':\n                return _PngChunkTypes.tIME;\n            case 'tRNS':\n                return _PngChunkTypes.tRNS;\n            case 'zTXt':\n                return _PngChunkTypes.zTXt;\n            case 'sRGB':\n                return _PngChunkTypes.sRGB;\n            case 'iCCP':\n                return _PngChunkTypes.iCCP;\n            case 'iTXt':\n                return _PngChunkTypes.iTXt;\n            case 'Unknown':\n                return _PngChunkTypes.unknown;\n            default:\n                return null;\n        }\n    };\n    _PngDecoder.prototype._getFilterType = function (type) {\n        switch (type) {\n            case 1:\n                return _PngFilterTypes.sub;\n            case 2:\n                return _PngFilterTypes.up;\n            case 3:\n                return _PngFilterTypes.average;\n            case 4:\n                return _PngFilterTypes.paeth;\n            default:\n                return _PngFilterTypes.none;\n        }\n    };\n    return _PngDecoder;\n}(_ImageDecoder));\nexport { _PngDecoder };\nvar _PngHeader = /** @class */ (function () {\n    function _PngHeader() {\n        this._width = 0;\n        this._height = 0;\n        this._colorType = 0;\n        this._compression = 0;\n        this._bitDepth = 0;\n        this._interlace = 0;\n        this._filter = _PngFilterTypes.none;\n    }\n    return _PngHeader;\n}());\nvar _PngChunkTypes;\n(function (_PngChunkTypes) {\n    _PngChunkTypes[_PngChunkTypes[\"iHDR\"] = 0] = \"iHDR\";\n    _PngChunkTypes[_PngChunkTypes[\"pLTE\"] = 1] = \"pLTE\";\n    _PngChunkTypes[_PngChunkTypes[\"iDAT\"] = 2] = \"iDAT\";\n    _PngChunkTypes[_PngChunkTypes[\"iEND\"] = 3] = \"iEND\";\n    _PngChunkTypes[_PngChunkTypes[\"bKGD\"] = 4] = \"bKGD\";\n    _PngChunkTypes[_PngChunkTypes[\"cHRM\"] = 5] = \"cHRM\";\n    _PngChunkTypes[_PngChunkTypes[\"gAMA\"] = 6] = \"gAMA\";\n    _PngChunkTypes[_PngChunkTypes[\"hIST\"] = 7] = \"hIST\";\n    _PngChunkTypes[_PngChunkTypes[\"pHYs\"] = 8] = \"pHYs\";\n    _PngChunkTypes[_PngChunkTypes[\"sBIT\"] = 9] = \"sBIT\";\n    _PngChunkTypes[_PngChunkTypes[\"tEXt\"] = 10] = \"tEXt\";\n    _PngChunkTypes[_PngChunkTypes[\"tIME\"] = 11] = \"tIME\";\n    _PngChunkTypes[_PngChunkTypes[\"tRNS\"] = 12] = \"tRNS\";\n    _PngChunkTypes[_PngChunkTypes[\"zTXt\"] = 13] = \"zTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"sRGB\"] = 14] = \"sRGB\";\n    _PngChunkTypes[_PngChunkTypes[\"iCCP\"] = 15] = \"iCCP\";\n    _PngChunkTypes[_PngChunkTypes[\"iTXt\"] = 16] = \"iTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"unknown\"] = 17] = \"unknown\";\n})(_PngChunkTypes || (_PngChunkTypes = {}));\nvar _PngFilterTypes;\n(function (_PngFilterTypes) {\n    _PngFilterTypes[_PngFilterTypes[\"none\"] = 0] = \"none\";\n    _PngFilterTypes[_PngFilterTypes[\"sub\"] = 1] = \"sub\";\n    _PngFilterTypes[_PngFilterTypes[\"up\"] = 2] = \"up\";\n    _PngFilterTypes[_PngFilterTypes[\"average\"] = 3] = \"average\";\n    _PngFilterTypes[_PngFilterTypes[\"paeth\"] = 4] = \"paeth\";\n})(_PngFilterTypes || (_PngFilterTypes = {}));\n","import { _copyRange } from './../utils';\nvar _DecompressedOutput = /** @class */ (function () {\n    function _DecompressedOutput() {\n        this._end = 0;\n        this._usedBytes = 0;\n        this._dOutput = Array(_DecompressedOutput._dOutSize).fill(0);\n        this._end = 0;\n        this._usedBytes = 0;\n    }\n    Object.defineProperty(_DecompressedOutput.prototype, \"_unusedBytes\", {\n        get: function () {\n            return _DecompressedOutput._dOutSize - this._usedBytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _DecompressedOutput.prototype._write = function (b) {\n        this._dOutput[this._end++] = b;\n        this._end &= _DecompressedOutput._dOutMask;\n        ++this._usedBytes;\n    };\n    _DecompressedOutput.prototype._writeLD = function (length, distance) {\n        this._usedBytes += length;\n        var copyStart = (this._end - distance) & _DecompressedOutput._dOutMask;\n        var border = _DecompressedOutput._dOutSize - length;\n        if (copyStart <= border && this._end < border) {\n            if (length <= distance) {\n                _copyRange(this._dOutput, this._end, this._dOutput, copyStart, copyStart + length);\n                this._end += length;\n            }\n            else {\n                while (length-- > 0) {\n                    this._dOutput[this._end++] = this._dOutput[copyStart++];\n                }\n            }\n        }\n        else {\n            while (length-- > 0) {\n                this._dOutput[this._end++] = this._dOutput[copyStart++];\n                this._end &= _DecompressedOutput._dOutMask;\n                copyStart &= _DecompressedOutput._dOutMask;\n            }\n        }\n    };\n    _DecompressedOutput.prototype._copyFrom = function (input, length) {\n        length = Math.min(Math.min(length, _DecompressedOutput._dOutSize - this._usedBytes), input._bytes);\n        var copied;\n        var tailLen = _DecompressedOutput._dOutSize - this._end;\n        if (length > tailLen) {\n            copied = input._copyTo(this._dOutput, this._end, tailLen);\n            if (copied === tailLen) {\n                copied += input._copyTo(this._dOutput, 0, length - tailLen);\n            }\n        }\n        else {\n            copied = input._copyTo(this._dOutput, this._end, length);\n        }\n        this._end = (this._end + copied) & _DecompressedOutput._dOutMask;\n        this._usedBytes += copied;\n        return copied;\n    };\n    _DecompressedOutput.prototype._copyTo = function (output, offset, length) {\n        var end;\n        if (length > this._usedBytes) {\n            end = this._end;\n            length = this._usedBytes;\n        }\n        else {\n            end = (this._end - this._usedBytes + length) & _DecompressedOutput._dOutMask;\n        }\n        var copied = length;\n        var tailLen = length - end;\n        var sourceStart = _DecompressedOutput._dOutSize - tailLen;\n        if (tailLen > 0) {\n            for (var i = 0; i < tailLen && i + sourceStart < this._dOutput.length && i + offset < output.length; i++) {\n                output[offset + i] = this._dOutput[sourceStart + i];\n            }\n            var sourceStartIndex_1 = _DecompressedOutput._dOutSize - tailLen;\n            _copyRange(output, offset, this._dOutput, sourceStartIndex_1, sourceStartIndex_1 + tailLen);\n            offset += tailLen;\n            length = end;\n        }\n        sourceStart = end - length;\n        var sourceStartIndex = end - length;\n        _copyRange(output, offset, this._dOutput, sourceStartIndex, end);\n        this._usedBytes -= copied;\n        return { 'count': copied, 'data': output };\n    };\n    _DecompressedOutput._dOutSize = 32768;\n    _DecompressedOutput._dOutMask = 32767;\n    return _DecompressedOutput;\n}());\nexport { _DecompressedOutput };\n","import { _toUnsigned } from './../utils';\nvar _InBuffer = /** @class */ (function () {\n    function _InBuffer() {\n        this._bBuffer = 0;\n        this._bInBuffer = 0;\n        this._begin = 0;\n        this._end = 0;\n    }\n    Object.defineProperty(_InBuffer.prototype, \"_bytes\", {\n        get: function () {\n            return (this._end - this._begin) + Math.floor(this._bInBuffer / 8);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _InBuffer.prototype._needsInput = function () {\n        return this._begin === this._end;\n    };\n    _InBuffer.prototype._availableBits = function (count) {\n        if (this._bInBuffer < count) {\n            if (this._needsInput()) {\n                return false;\n            }\n            this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n            this._bInBuffer += 8;\n            if (this._bInBuffer < count) {\n                if (this._needsInput()) {\n                    return false;\n                }\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return true;\n    };\n    _InBuffer.prototype._load16Bits = function () {\n        if (this._bInBuffer < 8) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        else if (this._bInBuffer < 16) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return this._bBuffer;\n    };\n    _InBuffer.prototype._getBitMask = function (count) {\n        return (_toUnsigned(1, 32) << count) - 1;\n    };\n    _InBuffer.prototype._getBits = function (count) {\n        if (!this._availableBits(count)) {\n            return -1;\n        }\n        var result = this._bBuffer & this._getBitMask(count);\n        this._bBuffer >>= count;\n        this._bInBuffer -= count;\n        return result;\n    };\n    _InBuffer.prototype._copyTo = function (output, offset, length) {\n        var bitBuffer = 0;\n        while (this._bInBuffer > 0 && length > 0) {\n            output[offset++] = _toUnsigned(this._bBuffer, 8);\n            this._bBuffer >>= 8;\n            this._bInBuffer -= 8;\n            length--;\n            bitBuffer++;\n        }\n        if (length === 0) {\n            return bitBuffer;\n        }\n        var avail = this._end - this._begin;\n        if (length > avail) {\n            length = avail;\n        }\n        for (var i = 0; i < length && i + this._begin < this._buffer.length && i + offset < output.length; i++) {\n            output[offset + i] = this._buffer[this._begin + i];\n        }\n        this._begin += length;\n        return bitBuffer + length;\n    };\n    _InBuffer.prototype._setInput = function (buffer, offset, length) {\n        this._buffer = buffer;\n        this._begin = offset;\n        this._end = offset + length;\n    };\n    _InBuffer.prototype._skipBits = function (n) {\n        this._bBuffer >>= n;\n        this._bInBuffer -= n;\n    };\n    _InBuffer.prototype._skipByteBoundary = function () {\n        this._bBuffer >>= this._bInBuffer % 8;\n        this._bInBuffer = this._bInBuffer - (this._bInBuffer % 8);\n    };\n    return _InBuffer;\n}());\nexport { _InBuffer };\n","import { _toUnsigned, _toSigned16 } from './../utils';\nvar _HuffmanTree = /** @class */ (function () {\n    function _HuffmanTree() {\n    }\n    _HuffmanTree.prototype._load = function (code) {\n        this._clArray = code;\n        this._initialize();\n    };\n    _HuffmanTree.prototype._loadTree = function (isLengthTree) {\n        this._clArray = isLengthTree ? this._getLengthTree() : this._getDepthTree();\n        this._initialize();\n    };\n    _HuffmanTree.prototype._initialize = function () {\n        if (this._clArray.length === _HuffmanTree._maxLengthTree) {\n            this._tBits = 9;\n        }\n        else {\n            this._tBits = 7;\n        }\n        this._tMask = (1 << this._tBits) - 1;\n        this._createTable();\n    };\n    _HuffmanTree.prototype._getLengthTree = function () {\n        var lTree = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i <= 143; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        for (var i = 144; i <= 255; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(9, 8);\n        }\n        for (var i = 256; i <= 279; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(7, 8);\n        }\n        for (var i = 280; i <= 287; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        return lTree;\n    };\n    _HuffmanTree.prototype._getDepthTree = function () {\n        return Array(_HuffmanTree._maxDepthTree).fill(5);\n    };\n    _HuffmanTree.prototype._calculateHashCode = function () {\n        var bit = Array(17).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            bit[this._clArray[Number.parseInt(i.toString(), 10)]]++;\n        }\n        bit[0] = 0;\n        var next = Array(17).fill(0);\n        var temp = 0;\n        for (var bits = 1; bits <= 16; bits++) {\n            temp = (temp + bit[bits - 1]) << 1;\n            next[Number.parseInt(bits.toString(), 10)] = temp;\n        }\n        var code = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            var len = this._clArray[Number.parseInt(i.toString(), 10)];\n            if (len > 0) {\n                code[Number.parseInt(i.toString(), 10)] = this._bitReverse(next[Number.parseInt(len.toString(), 10)], len);\n                next[Number.parseInt(len.toString(), 10)]++;\n            }\n        }\n        return code;\n    };\n    _HuffmanTree.prototype._bitReverse = function (code, length) {\n        var newcode = 0;\n        do {\n            newcode |= code & 1;\n            newcode <<= 1;\n            code >>= 1;\n        } while (--length > 0);\n        return newcode >> 1;\n    };\n    _HuffmanTree.prototype._createTable = function () {\n        var codeArray = this._calculateHashCode();\n        this._table = Array(1 << this._tBits).fill(0);\n        this._left = Array(2 * this._clArray.length).fill(0);\n        this._right = Array(2 * this._clArray.length).fill(0);\n        var avail = _toSigned16(this._clArray.length);\n        for (var ch = 0; ch < this._clArray.length; ch++) {\n            var len = this._clArray[Number.parseInt(ch.toString(), 10)];\n            if (len > 0) {\n                var start = codeArray[Number.parseInt(ch.toString(), 10)];\n                if (len <= this._tBits) {\n                    var i = 1 << len;\n                    if (start >= i) {\n                        throw new Error('Invalid Data.');\n                    }\n                    var l = 1 << (this._tBits - len);\n                    for (var j = 0; j < l; j++) {\n                        this._table[Number.parseInt(start.toString(), 10)] = _toSigned16(ch);\n                        start += i;\n                    }\n                }\n                else {\n                    var ofBits = len - this._tBits;\n                    var bitMask = 1 << this._tBits;\n                    var index = start & ((1 << this._tBits) - 1);\n                    var array = this._table;\n                    do {\n                        var value = _toSigned16(array[Number.parseInt(index.toString(), 10)]);\n                        if (value === 0) {\n                            array[Number.parseInt(index.toString(), 10)] = _toSigned16(-avail);\n                            value = _toSigned16(-avail);\n                            avail++;\n                        }\n                        if (value > 0) {\n                            throw new Error('Invalid Data.');\n                        }\n                        if ((start & bitMask) === 0) {\n                            array = this._left;\n                        }\n                        else {\n                            array = this._right;\n                        }\n                        index = -value;\n                        bitMask <<= 1;\n                        ofBits--;\n                    } while (ofBits !== 0);\n                    array[Number.parseInt(index.toString(), 10)] = _toSigned16(ch);\n                }\n            }\n        }\n    };\n    _HuffmanTree.prototype._getNextSymbol = function (input) {\n        var bitBuffer = input._load16Bits();\n        if (input._bInBuffer === 0) {\n            return -1;\n        }\n        var symbol = this._table[bitBuffer & this._tMask];\n        if (symbol < 0) {\n            var mask = _toUnsigned((1 << this._tBits), 32);\n            do {\n                symbol = -symbol;\n                if ((bitBuffer & mask) === 0) {\n                    symbol = this._left[Number.parseInt(symbol.toString(), 10)];\n                }\n                else {\n                    symbol = this._right[Number.parseInt(symbol.toString(), 10)];\n                }\n                mask <<= 1;\n            } while (symbol < 0);\n        }\n        var codeLength = this._clArray[Number.parseInt(symbol.toString(), 10)];\n        if (codeLength <= 0) {\n            throw new Error('Invalid Data.');\n        }\n        if (codeLength > input._bInBuffer) {\n            return -1;\n        }\n        input._skipBits(codeLength);\n        return symbol;\n    };\n    _HuffmanTree._maxLengthTree = 288;\n    _HuffmanTree._maxDepthTree = 32;\n    _HuffmanTree._nCLength = 19;\n    return _HuffmanTree;\n}());\nexport { _HuffmanTree };\n","import { _InflaterState, _BlockType } from './enum';\nimport { _DecompressedOutput } from './decompressed-output';\nimport { _InBuffer } from './in-buffer';\nimport { _HuffmanTree } from './huffman-tree';\nimport { _toUnsigned, _copyRange } from './../utils';\n/* eslint-disable */\nvar _Inflater = /** @class */ (function () {\n    function _Inflater() {\n        this._extraLengthBits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n        this._staticDistanceTreeTable = [0x00, 0x10, 0x08, 0x18, 0x04, 0x14, 0x0c, 0x1c, 0x02, 0x12, 0x0a, 0x1a, 0x06, 0x16, 0x0e, 0x1e,\n            0x01, 0x11, 0x09, 0x19, 0x05, 0x15, 0x0d, 0x1d, 0x03, 0x13, 0x0b, 0x1b, 0x07, 0x17, 0x0f, 0x1f];\n        this._lengthBase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\n            131, 163, 195, 227, 258];\n        this._distanceBasePosition = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049,\n            3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\n        this._codeOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        this._bfinal = 0;\n        this._bLength = 0;\n        this._blBuffer = [0, 0, 0, 0];\n        this._blockType = _BlockType.unCompressedType;\n        this._caSize = 0;\n        this._clCodeCount = 0;\n        this._extraBits = 0;\n        this._lengthCode = 0;\n        this._length = 0;\n        this._llCodeCount = 0;\n        this._output = new _DecompressedOutput();\n        this._input = new _InBuffer();\n        this._loopCounter = 0;\n        this._codeList = Array(_HuffmanTree._maxLengthTree + _HuffmanTree._maxDepthTree).fill(0);\n        this._cltcl = Array(_HuffmanTree._nCLength).fill(0);\n        this._inflaterState = _InflaterState.readingBFinal;\n    }\n    Object.defineProperty(_Inflater.prototype, \"_finished\", {\n        get: function () {\n            return this._inflaterState === _InflaterState.done || this._inflaterState === _InflaterState.vFooter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Inflater.prototype._setInput = function (inputBytes, offset, length) {\n        this._input._setInput(inputBytes, offset, length);\n    };\n    _Inflater.prototype._inflate = function (bytes, offset, length) {\n        var i = 0;\n        do {\n            var result = this._output._copyTo(bytes, offset, length);\n            var copied = result.count;\n            bytes = result.data;\n            if (copied > 0) {\n                offset += copied;\n                i += copied;\n                length -= copied;\n            }\n            if (length === 0) {\n                break;\n            }\n        } while (!this._finished && this._decode());\n        return { 'count': i, 'data': bytes };\n    };\n    _Inflater.prototype._decode = function () {\n        var eob = false;\n        var result = false;\n        if (this._finished) {\n            return true;\n        }\n        if (this._inflaterState === _InflaterState.readingBFinal) {\n            if (!this._input._availableBits(1)) {\n                return false;\n            }\n            this._bfinal = this._input._getBits(1);\n            this._inflaterState = _InflaterState.readingBType;\n        }\n        if (this._inflaterState === _InflaterState.readingBType) {\n            if (!this._input._availableBits(2)) {\n                this._inflaterState = _InflaterState.readingBType;\n                return false;\n            }\n            this._blockType = this._getBlockType(this._input._getBits(2));\n            if (this._blockType === _BlockType.dynamicType) {\n                this._inflaterState = _InflaterState.readingNlCodes;\n            }\n            else if (this._blockType === _BlockType.staticType) {\n                this._llTree = new _HuffmanTree();\n                this._llTree._loadTree(true);\n                this._distanceTree = new _HuffmanTree();\n                this._distanceTree._loadTree(false);\n                this._inflaterState = _InflaterState.decodeTop;\n            }\n            else if (this._blockType === _BlockType.unCompressedType) {\n                this._inflaterState = _InflaterState.unCompressedAligning;\n            }\n        }\n        if (this._blockType === _BlockType.dynamicType) {\n            if (this._getInflaterStateValue(this._inflaterState) < this._getInflaterStateValue(_InflaterState.decodeTop)) {\n                result = this._decodeDynamicBlockHeader();\n            }\n            else {\n                var returnedValue = this._decodeBlock(eob);\n                result = returnedValue.result;\n                eob = returnedValue.eob;\n                this._output = returnedValue.output;\n            }\n        }\n        else if (this._blockType === _BlockType.staticType) {\n            var returnedValue = this._decodeBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        else if (this._blockType === _BlockType.unCompressedType) {\n            var returnedValue = this._decodeUncompressedBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        if (eob && (this._bfinal !== 0)) {\n            this._inflaterState = _InflaterState.done;\n        }\n        return result;\n    };\n    _Inflater.prototype._decodeUncompressedBlock = function (endBlock) {\n        endBlock = false;\n        while (true) {\n            switch (this._inflaterState) {\n                case _InflaterState.unCompressedAligning:\n                    this._input._skipByteBoundary();\n                    this._inflaterState = _InflaterState.unCompressedByte1;\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.unCompressedByte1:\n                case _InflaterState.unCompressedByte2:\n                case _InflaterState.unCompressedByte3:\n                case _InflaterState.unCompressedByte4:\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.decodeUnCompressedBytes:\n                    this._bLength -= this._output._copyFrom(this._input, this._bLength);\n                    if (this._bLength === 0) {\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        endBlock = true;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (this._output._unusedBytes === 0) {\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    return { 'result': false, 'eob': endBlock, 'output': this._output };\n                default:\n                    break;\n            }\n        }\n    };\n    _Inflater.prototype._unCompressedByte = function () {\n        var bits = this._input._getBits(8);\n        if (bits < 0) {\n            return false;\n        }\n        var inflaterstate = this._getInflaterStateValue(this._inflaterState);\n        var unCompressedByte = this._getInflaterStateValue(_InflaterState.unCompressedByte1);\n        this._blBuffer[inflaterstate - unCompressedByte] = _toUnsigned(bits, 8);\n        if (this._inflaterState === _InflaterState.unCompressedByte4) {\n            this._bLength = this._blBuffer[0] + (this._blBuffer[1]) * 256;\n            if (_toUnsigned(this._bLength, 16) !== _toUnsigned((~(this._blBuffer[2] + (this._blBuffer[3]) * 256)), 16)) {\n                throw new Error('Ivalid block length.');\n            }\n        }\n        this._inflaterState = this._getInflaterState(this._getInflaterStateValue(this._inflaterState) + 1);\n        return true;\n    };\n    _Inflater.prototype._decodeBlock = function (endBlock) {\n        endBlock = false;\n        var fb = this._output._unusedBytes;\n        while (fb > 258) {\n            var symbol = void 0;\n            var dCodeResult = void 0;\n            var fLengthResult = void 0;\n            var inLengthResult = void 0;\n            switch (this._inflaterState) {\n                case _InflaterState.decodeTop:\n                    symbol = this._llTree._getNextSymbol(this._input);\n                    if (symbol < 0) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (symbol < 256) {\n                        this._output._write(_toUnsigned(symbol, 8));\n                        --fb;\n                    }\n                    else if (symbol === 256) {\n                        endBlock = true;\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    else {\n                        symbol -= 257;\n                        if (symbol < 8) {\n                            symbol += 3;\n                            this._extraBits = 0;\n                        }\n                        else if (symbol === 28) {\n                            symbol = 258;\n                            this._extraBits = 0;\n                        }\n                        else {\n                            if (symbol < 0 || symbol >= this._extraLengthBits.length) {\n                                throw new Error('Invalid data.');\n                            }\n                            this._extraBits = this._extraLengthBits[Number.parseInt(symbol.toString(), 10)];\n                        }\n                        this._length = symbol;\n                        inLengthResult = this._inLength(fb);\n                        fb = inLengthResult.fb;\n                        if (!inLengthResult.value) {\n                            return { 'result': false, 'eob': endBlock, 'output': this._output };\n                        }\n                    }\n                    break;\n                case _InflaterState.iLength:\n                    inLengthResult = this._inLength(fb);\n                    fb = inLengthResult.fb;\n                    if (!inLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.fLength:\n                    fLengthResult = this._fLength(fb);\n                    fb = fLengthResult.fb;\n                    if (!fLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.dCode:\n                    dCodeResult = this._dcode(fb);\n                    fb = dCodeResult.fb;\n                    if (!dCodeResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { 'result': true, 'eob': endBlock, 'output': this._output };\n    };\n    _Inflater.prototype._inLength = function (fb) {\n        if (this._extraBits > 0) {\n            this._inflaterState = _InflaterState.iLength;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            if (this._length < 0 || this._length >= this._lengthBase.length) {\n                throw new Error('Invalid data.');\n            }\n            this._length = this._lengthBase[this._length] + bits;\n        }\n        this._inflaterState = _InflaterState.fLength;\n        var fLengthResult = this._fLength(fb);\n        fb = fLengthResult.fb;\n        if (!fLengthResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._fLength = function (fb) {\n        if (this._blockType === _BlockType.dynamicType) {\n            this._distanceCode = this._distanceTree._getNextSymbol(this._input);\n        }\n        else {\n            this._distanceCode = this._input._getBits(5);\n            if (this._distanceCode >= 0) {\n                this._distanceCode = this._staticDistanceTreeTable[this._distanceCode];\n            }\n        }\n        if (this._distanceCode < 0) {\n            return { 'value': false, 'fb': fb };\n        }\n        this._inflaterState = _InflaterState.dCode;\n        var dCodeResult = this._dcode(fb);\n        fb = dCodeResult.fb;\n        if (!dCodeResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._dcode = function (fb) {\n        var offset;\n        if (this._distanceCode > 3) {\n            this._extraBits = (this._distanceCode - 2) >> 1;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            offset = this._distanceBasePosition[this._distanceCode] + bits;\n        }\n        else {\n            offset = this._distanceCode + 1;\n        }\n        this._output._writeLD(this._length, offset);\n        fb -= this._length;\n        this._inflaterState = _InflaterState.decodeTop;\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._decodeDynamicBlockHeader = function () {\n        switch (this._inflaterState) {\n            case _InflaterState.readingNlCodes:\n                this._llCodeCount = this._input._getBits(5);\n                if (this._llCodeCount < 0) {\n                    return false;\n                }\n                this._llCodeCount += 257;\n                this._inflaterState = _InflaterState.readingNdCodes;\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingNdCodes:\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingCodes:\n                if (!this._readingCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingClCodes:\n                if (!this._readingCLCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingTcBefore:\n            case _InflaterState.readingTcAfter:\n                if (!this._readingTCBefore()) {\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        var literalTreeCodeLength = Array(_HuffmanTree._maxLengthTree).fill(0);\n        _copyRange(literalTreeCodeLength, 0, this._codeList, 0, this._llCodeCount);\n        var distanceTreeCodeLength = Array(_HuffmanTree._maxDepthTree).fill(0);\n        _copyRange(distanceTreeCodeLength, 0, this._codeList, this._llCodeCount, this._llCodeCount + this._dCodeCount);\n        this._llTree = new _HuffmanTree();\n        this._llTree._load(literalTreeCodeLength);\n        this._distanceTree = new _HuffmanTree();\n        this._distanceTree._load(distanceTreeCodeLength);\n        this._inflaterState = _InflaterState.decodeTop;\n        return true;\n    };\n    _Inflater.prototype._readingNDCodes = function () {\n        this._dCodeCount = this._input._getBits(5);\n        if (this._dCodeCount < 0) {\n            return false;\n        }\n        this._dCodeCount += 1;\n        this._inflaterState = _InflaterState.readingCodes;\n        if (!this._readingCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCodes = function () {\n        this._clCodeCount = this._input._getBits(4);\n        if (this._clCodeCount < 0) {\n            return false;\n        }\n        this._clCodeCount += 4;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingClCodes;\n        if (!this._readingCLCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCLCodes = function () {\n        while (this._loopCounter < this._clCodeCount) {\n            var bits = this._input._getBits(3);\n            if (bits < 0) {\n                return false;\n            }\n            this._cltcl[this._codeOrder[this._loopCounter]] = _toUnsigned(bits, 8);\n            ++this._loopCounter;\n        }\n        for (var i = this._clCodeCount; i < this._codeOrder.length; i++) {\n            this._cltcl[this._codeOrder[Number.parseInt(i.toString(), 10)]] = 0;\n        }\n        this._clTree = new _HuffmanTree();\n        this._clTree._load(this._cltcl);\n        this._caSize = this._llCodeCount + this._dCodeCount;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingTcBefore;\n        if (!this._readingTCBefore()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingTCBefore = function () {\n        while (this._loopCounter < this._caSize) {\n            if (this._inflaterState === _InflaterState.readingTcBefore) {\n                this._lengthCode = this._clTree._getNextSymbol(this._input);\n                if (this._lengthCode < 0) {\n                    return false;\n                }\n            }\n            if (this._lengthCode <= 15) {\n                this._codeList[this._loopCounter++] = _toUnsigned(this._lengthCode, 8);\n            }\n            else {\n                if (!this._input._availableBits(7)) {\n                    this._inflaterState = _InflaterState.readingTcAfter;\n                    return false;\n                }\n                var repeatCount = void 0;\n                if (this._lengthCode === 16) {\n                    if (this._loopCounter === 0) {\n                        throw new Error('Invalid data.');\n                    }\n                    var previousCode = _toUnsigned(this._codeList[this._loopCounter - 1], 8);\n                    repeatCount = this._input._getBits(2) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = previousCode;\n                    }\n                }\n                else if (this._lengthCode === 17) {\n                    repeatCount = this._input._getBits(3) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n                else {\n                    repeatCount = this._input._getBits(7) + 11;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n            }\n            this._inflaterState = _InflaterState.readingTcBefore;\n        }\n        return true;\n    };\n    _Inflater.prototype._getBlockType = function (type) {\n        if (type === _BlockType.unCompressedType) {\n            return _BlockType.unCompressedType;\n        }\n        else if (type === _BlockType.staticType) {\n            return _BlockType.staticType;\n        }\n        else {\n            return _BlockType.dynamicType;\n        }\n    };\n    _Inflater.prototype._getInflaterState = function (value) {\n        switch (value) {\n            case 0:\n                return _InflaterState.readingHeader;\n            case 2:\n                return _InflaterState.readingBFinal;\n            case 3:\n                return _InflaterState.readingBType;\n            case 4:\n                return _InflaterState.readingNlCodes;\n            case 5:\n                return _InflaterState.readingNdCodes;\n            case 6:\n                return _InflaterState.readingCodes;\n            case 7:\n                return _InflaterState.readingClCodes;\n            case 8:\n                return _InflaterState.readingTcBefore;\n            case 9:\n                return _InflaterState.readingTcAfter;\n            case 10:\n                return _InflaterState.decodeTop;\n            case 11:\n                return _InflaterState.iLength;\n            case 12:\n                return _InflaterState.fLength;\n            case 13:\n                return _InflaterState.dCode;\n            case 15:\n                return _InflaterState.unCompressedAligning;\n            case 16:\n                return _InflaterState.unCompressedByte1;\n            case 17:\n                return _InflaterState.unCompressedByte2;\n            case 18:\n                return _InflaterState.unCompressedByte3;\n            case 19:\n                return _InflaterState.unCompressedByte4;\n            case 20:\n                return _InflaterState.decodeUnCompressedBytes;\n            case 21:\n                return _InflaterState.srFooter;\n            case 22:\n                return _InflaterState.rFooter;\n            case 23:\n                return _InflaterState.vFooter;\n            case 24:\n                return _InflaterState.done;\n            default:\n                return _InflaterState.readingHeader;\n        }\n    };\n    _Inflater.prototype._getInflaterStateValue = function (state) {\n        switch (state) {\n            case _InflaterState.readingHeader:\n                return 0;\n            case _InflaterState.readingBFinal:\n                return 2;\n            case _InflaterState.readingBType:\n                return 3;\n            case _InflaterState.readingNlCodes:\n                return 4;\n            case _InflaterState.readingNdCodes:\n                return 5;\n            case _InflaterState.readingCodes:\n                return 6;\n            case _InflaterState.readingClCodes:\n                return 7;\n            case _InflaterState.readingTcBefore:\n                return 8;\n            case _InflaterState.readingTcAfter:\n                return 9;\n            case _InflaterState.decodeTop:\n                return 10;\n            case _InflaterState.iLength:\n                return 11;\n            case _InflaterState.fLength:\n                return 12;\n            case _InflaterState.dCode:\n                return 13;\n            case _InflaterState.unCompressedAligning:\n                return 15;\n            case _InflaterState.unCompressedByte1:\n                return 16;\n            case _InflaterState.unCompressedByte2:\n                return 17;\n            case _InflaterState.unCompressedByte3:\n                return 18;\n            case _InflaterState.unCompressedByte4:\n                return 19;\n            case _InflaterState.decodeUnCompressedBytes:\n                return 20;\n            case _InflaterState.srFooter:\n                return 21;\n            case _InflaterState.rFooter:\n                return 22;\n            case _InflaterState.vFooter:\n                return 23;\n            case _InflaterState.done:\n                return 24;\n            default:\n                return 0;\n        }\n    };\n    return _Inflater;\n}());\nexport { _Inflater };\n","import { _isNullOrUndefined } from '../utils';\nimport { _Inflater } from './inflater';\nvar _DeflateStream = /** @class */ (function () {\n    function _DeflateStream(data, offset, leaveOpen) {\n        if (_isNullOrUndefined(data)) {\n            this._data = data;\n        }\n        else {\n            this._data = [];\n        }\n        if (_isNullOrUndefined(leaveOpen)) {\n            this._leaveOpen = leaveOpen;\n        }\n        this._offset = offset;\n        this._inflater = new _Inflater();\n        this._buffer = Array(8192).fill(0);\n    }\n    _DeflateStream.prototype._read = function (array, offset, count) {\n        var length;\n        var cOffset = offset;\n        var rCount = count;\n        while (true) { // eslint-disable-line\n            var inflateResult = this._inflater._inflate(array, cOffset, rCount);\n            length = inflateResult.count;\n            array = inflateResult.data;\n            cOffset += length;\n            rCount -= length;\n            if (rCount === 0) {\n                break;\n            }\n            if (this._inflater._finished) {\n                break;\n            }\n            var result = this._readBytes();\n            var bytes = result.count;\n            this._buffer = result.buffer;\n            if (bytes === 0) {\n                break;\n            }\n            this._inflater._setInput(this._buffer, 0, bytes);\n        }\n        return { count: count - rCount, data: array };\n    };\n    _DeflateStream.prototype._readBytes = function () {\n        if (_isNullOrUndefined(this._offset) && this._offset >= this._data.length) {\n            return { buffer: [], count: 0 };\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < this._buffer.length && i + this._offset < this._data.length; i++) {\n                this._buffer[Number.parseInt(i.toString(), 10)] = this._data[this._offset + i];\n                count++;\n            }\n            this._offset += count;\n            return { buffer: this._buffer, count: count };\n        }\n    };\n    return _DeflateStream;\n}());\nexport { _DeflateStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString, _bytesToString, _isNullOrUndefined } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n        this._isImage = false;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex, bytes) {\n        if (isHex === void 0) { isHex = false; }\n        if (typeof bytes === 'undefined' || bytes === null) {\n            bytes = this.getBytes();\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            return _bytesToString(bytes);\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        if (_isNullOrUndefined(bytes)) {\n            _this._bytes = bytes;\n        }\n        else {\n            _this._bytes = [];\n        }\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                value = this._consumeValue();\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        this._crossReference._allowCatalog = true;\n        form._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef && pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj && obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O'), false, true).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U'), false, true).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id, false, true);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password, false, true);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'), false, true);\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'), false, true);\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'), false, true);\n            var userEncryption = _stringToBytes(dictionary.get('UE'), false, true);\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        var stringBytes = _stringToBytes(s, false, true);\n        var decryptedBytes = this._stringCipher._decryptBlock(stringBytes, true);\n        return _bytesToString(decryptedBytes);\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s, false, true), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s, false, true)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference, _isName } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException, _decodeText } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nimport { _CipherTransform } from './security/encryptor';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode, encryptor) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this._isColorSpace = false;\n        this._isPassword = false;\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this._encryptor = encryptor;\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (arguement1, arguement2, arguement3) {\n        var cipherTransform;\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                        return this.makeInlineImage(arguement1, arguement2, arguement3);\n                    }\n                    else if (arguement1 instanceof _CipherTransform) {\n                        return this.makeInlineImage(arguement1);\n                    }\n                    else {\n                        return this.makeInlineImage();\n                    }\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        var entry = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            entry = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            cipherTransform = arguement1;\n                            entry = this.getObject(arguement1);\n                        }\n                        else {\n                            entry = this.getObject(arguement1);\n                        }\n                        if (array.length === 0 && _isName(entry, 'Indexed')) {\n                            this._isColorSpace = true;\n                        }\n                        entry = _decodeText(entry, this._isColorSpace, this._isPassword);\n                        array.push(entry);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this._isColorSpace = false;\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        if (key === 'U' || key === 'O' || key === 'ID') {\n                            this._isPassword = true;\n                        }\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                        }\n                        var value = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            value = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            value = this.getObject(arguement1);\n                        }\n                        else {\n                            value = this.getObject();\n                        }\n                        value = _decodeText(value, this._isColorSpace, this._isPassword);\n                        this._isPassword = false;\n                        dictionary.set(key, value);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            if (arguement1 instanceof _CipherTransform) {\n                                cipherTransform = arguement1;\n                            }\n                            else if (arguement3 && typeof arguement2 === 'number') {\n                                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            }\n                            if (typeof arguement2 === 'boolean' && arguement2) {\n                                return this.makeStream(dictionary, cipherTransform, arguement2);\n                            }\n                            else {\n                                return this.makeStream(dictionary, cipherTransform);\n                            }\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (arguement1, arguement2, arguement3) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        var cipherTransform;\n        if (arguement3) {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n        }\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            if (arguement1 instanceof _CipherTransform) {\n                dictionary.set(key, this.getObject(arguement1));\n            }\n            else {\n                dictionary.set(key, this.getObject(arguement1, arguement2, arguement3));\n            }\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform, makeFilter) {\n        if (makeFilter === void 0) { makeFilter = false; }\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (!makeFilter) {\n            if (cipherTransform) {\n                stream = cipherTransform.createStream(stream, length);\n            }\n            stream = this.filter(stream, dictionary, length);\n        }\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString, _stringToBigEndianBytes, _getSize, _compressStream } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._offsetReference = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n        this._offsets = [];\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n        if (typeof this._prevXRefOffset === 'undefined' || this._prevXRefOffset === null) {\n            this._prevXRefOffset = startXRef;\n        }\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        var entrySize = trailerDictionary.get('Size');\n        if (this._entries.length < entrySize || this._entries.length === entrySize) {\n            this._nextReferenceNumber = entrySize;\n        }\n        else if (this._entries.length > entrySize) {\n            this._nextReferenceNumber = this._entries.length > 0 ? this._entries.length : 1;\n        }\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._document.fileStructure.isIncrementalUpdate) {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n            }\n            else {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.table;\n            }\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, makeFilter) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, false, this._encrypt);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !makeFilter) {\n            entry = parser.getObject(reference.objectNumber, reference.generationNumber, true);\n        }\n        else {\n            entry = parser.getObject(null, makeFilter);\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var buffer = [37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        if (!this._document.fileStructure.isIncrementalUpdate) {\n            this._currentLength = 0;\n            var objectCollection = new _PdfMainObjectCollection(this);\n            this._writeObjectCollection(objectCollection._mainObjectCollection, buffer);\n            var stream = new _PdfStream(buffer);\n            this._stream = stream;\n            this._document._stream = stream;\n            var array = new Uint8Array(this._stream.length);\n            array.set(this._stream.bytes);\n            array.set(buffer, 0);\n            return array;\n        }\n        else {\n            this._currentLength = this._stream.length;\n            var buffer_1 = [37, 80, 68, 70, 45];\n            this._writeString(\"\" + this._version + this._newLine, buffer_1);\n            buffer_1.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n            this._writeString(this._newLine, buffer_1);\n            if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                this._saveAsStream(this._currentLength, buffer_1);\n            }\n            else {\n                this._saveAsTable(this._currentLength, buffer_1);\n            }\n            var array = new Uint8Array(this._stream.length + buffer_1.length);\n            array.set(this._stream.bytes);\n            array.set(buffer_1, this._stream.length);\n            return array;\n        }\n    };\n    _PdfCrossReference.prototype._saveAsStream = function (currentLength, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var cipher = void 0;\n                if (_this._encrypt) {\n                    cipher = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                }\n                _this._updatedDictionary(currentLength, key, buffer, value, cipher);\n            }\n        });\n        this._cacheMap.forEach(function (value, key) {\n            if (value instanceof _PdfDictionary) {\n                if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                    _this._writeArchieveStream(objectStreamCollection, key, value);\n                }\n            }\n            else if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    _this._updatedDictionary(currentLength, key, buffer, value);\n                }\n            }\n        });\n        this._objectStream = undefined;\n        this._objectStreamCollection = objectStreamCollection;\n        this._writeXrefStream(buffer);\n    };\n    _PdfCrossReference.prototype._updatedDictionary = function (currentLength, key, buffer, value, // eslint-disable-line\n    cipher) {\n        this._indexes.push(key.objectNumber, 1);\n        this._offsets.push(currentLength + buffer.length);\n        this._writeObject(value, buffer, key, cipher);\n        value._updated = false;\n    };\n    _PdfCrossReference.prototype._writeXrefStream = function (buffer) {\n        var _this = this;\n        this._objectStreamCollection.forEach(function (value, key) {\n            value._save(buffer, _this._currentLength);\n            for (var i = 0; i < value._collection.length; i++) {\n                _this._indexes.push(value._collection[Number.parseInt(i.toString(), 10)]);\n            }\n            _this._indexes.push(key.objectNumber, 1);\n        });\n        var formatValue = Math.max(_getSize(this._currentLength + buffer.length), _getSize(this._nextReferenceNumber));\n        var newRef = this._getNextReference();\n        this._indexes.push(newRef.objectNumber, 1);\n        var newStartXref = this._currentLength + buffer.length;\n        var newXref = new _PdfDictionary(this);\n        newXref.set('Type', _PdfName.get('XRef'));\n        newXref.set('Index', this._indexes);\n        newXref.set('W', [1, formatValue, 1]);\n        this._copyTrailer(newXref);\n        if (this._ids && this._ids.length > 0) {\n            newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n        }\n        var newXrefData = [];\n        this._writeLong(0, 1, newXrefData);\n        this._writeLong(0, formatValue, newXrefData);\n        this._writeLong(-1, 1, newXrefData);\n        if (this._offsets.length > 0) {\n            for (var index = 0; index < this._offsets.length; index++) {\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(this._offsets[index], formatValue, newXrefData); // eslint-disable-line\n                this._writeLong(0, 1, newXrefData);\n            }\n        }\n        if (this._objectStreamCollection.size > 0) {\n            this._objectStreamCollection.forEach(function (value, key) {\n                for (var index = 0; index < value._length; index++) {\n                    _this._writeLong(2, 1, newXrefData);\n                    _this._writeLong(key.objectNumber, formatValue, newXrefData);\n                    _this._writeLong(index, 1, newXrefData);\n                }\n                _this._writeLong(1, 1, newXrefData);\n                _this._writeLong(value._archiveOffset, formatValue, newXrefData);\n                _this._writeLong(0, 1, newXrefData);\n            });\n        }\n        this._writeLong(1, 1, newXrefData);\n        this._writeLong(newStartXref, formatValue, newXrefData);\n        this._writeLong(0, 1, newXrefData);\n        newXref.set('Length', newXrefData.length);\n        var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n        var cipher;\n        if (this._encrypt) {\n            cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n        }\n        this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._saveAsTable = function (currentLength, buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfDictionary) {\n                dictionary = value;\n            }\n            else if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var offsetString = _this._processString((currentLength + buffer.length).toString(), 10);\n                var genString = _this._processString(key.generationNumber.toString(), 5);\n                tempBuffer += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                _this._writeObject(value, buffer, key);\n            }\n        });\n        var newStartXref = buffer.length + currentLength;\n        this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._writeXref = function (buffer, tempBuffer, newStartXref) {\n        this._writeString(tempBuffer, buffer);\n        this._writeString(\"trailer\" + this._newLine, buffer);\n        var newXref = new _PdfDictionary(this);\n        this._copyTrailer(newXref);\n        this._writeDictionary(newXref, buffer, this._newLine);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeXrefTable = function (buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        var collection = this._getSortedReferences(this._offsetReference); // eslint-disable-line\n        collection.forEach(function (value, key) {\n            var offsetString = _this._processString(value.toString(), 10);\n            var genString = _this._processString(key.generationNumber ? '0' : '', 5);\n            if (value !== 0) {\n                tempBuffer += offsetString + \" \" + genString + \" n\" + _this._newLine;\n            }\n            else {\n                tempBuffer += offsetString + \" \" + genString + \" f\" + _this._newLine;\n            }\n        });\n        var newStartXref = buffer.length;\n        var xrefHeader = \"xref\" + this._newLine;\n        var xrefEntry = \"0 \" + (collection.size + 1) + this._newLine;\n        var initialEntry = \"0000000000 65535 f\" + this._newLine;\n        this._writeString(xrefHeader + xrefEntry + initialEntry, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._processString = function (value, length) {\n        while (value.length < length) {\n            value = '0' + value;\n        }\n        return value;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        var reference = this._getNextReference();\n        newXref.set('Size', reference.objectNumber);\n        if (this._document.fileStructure.isIncrementalUpdate) {\n            newXref.set('Prev', this._prevXRefOffset);\n        }\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, // eslint-disable-line\n    buffer, reference, transform, isCrossReference) {\n        var _this = this;\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        else if (Array.isArray(obj) && obj.length > 0) {\n            this._writeString('[ ', buffer);\n            obj.forEach(function (value, index) {\n                if (value instanceof _PdfReference) {\n                    _this._writeString(value.objectNumber + \" \" + value.generationNumber + \" R\", buffer);\n                }\n                else if (Array.isArray(value)) {\n                    _this._writeString('[ ', buffer);\n                    value.forEach(function (nestedValue) {\n                        if (nestedValue instanceof _PdfReference) {\n                            _this._writeString(nestedValue.objectNumber + \" \" + nestedValue.generationNumber + \" R\", buffer);\n                        }\n                        else if (nestedValue instanceof _PdfName) {\n                            _this._writeString(\"/\" + nestedValue.name, buffer);\n                        }\n                        else {\n                            _this._writeString(nestedValue + \" \", buffer);\n                        }\n                    });\n                    _this._writeString(']', buffer);\n                }\n                else if (value instanceof _PdfName) {\n                    _this._writeString(\"/\" + value.name, buffer);\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, buffer, _this._newLine, transform, isCrossReference);\n                }\n                else {\n                    _this._writeString(value + \"\\n\", buffer);\n                }\n                if (index < obj.length - 1) {\n                    _this._writeString(' ', buffer);\n                }\n            });\n            this._writeString(']', buffer);\n            this._writeString('\\n', buffer);\n        }\n        else if (typeof obj === 'number') {\n            this._writeString(obj + \"\\n\", buffer);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var value;\n        var streamBuffer = [];\n        if (!isCrossReference) {\n            if (stream._isCompress && !stream._isImage) {\n                value = _compressStream(stream);\n            }\n            else {\n                value = stream.getString();\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        else {\n            value = stream.getString();\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            if (value.name.indexOf(' ') !== -1) {\n                value.name = value.name.replace(/ /g, '#20'); // eslint-disable-line\n            }\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            var isUnicode = false;\n            for (var i = 0; i < value.length; i++) {\n                if (value.charCodeAt([i]) > 255) {\n                    isUnicode = true;\n                    break;\n                }\n            }\n            if (isUnicode) {\n                this._writeUnicodeString(value, buffer);\n            }\n            else {\n                this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeUnicodeString = function (value, buffer) {\n        var byteValues = _stringToBigEndianBytes(value);\n        byteValues.unshift(254, 255);\n        var data = [];\n        for (var i = 0; i < byteValues.length; i++) {\n            var byte = byteValues[Number.parseInt(i.toString(), 10)];\n            switch (byte) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                default:\n                    data.push(byte);\n                    break;\n            }\n        }\n        buffer.push('('.charCodeAt(0) & 0xff);\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[Number.parseInt(i.toString(), 10)] & 0xff);\n        }\n        buffer.push(')'.charCodeAt(0) & 0xff);\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        if (this._pendingRefs) {\n            this._pendingRefs.clear();\n            this._pendingRefs = undefined;\n        }\n        if (this._cacheMap) {\n            this._cacheMap.clear();\n        }\n        if (this._offsetReference) {\n            this._offsetReference.clear();\n        }\n        if (this._objectStreamCollection) {\n            this._objectStreamCollection.clear();\n        }\n        this._offsets = [];\n        this._startXRefQueue = [];\n        this._root = undefined;\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    _PdfCrossReference.prototype._writeObjectCollection = function (objectCollection, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        objectCollection.forEach(function (value, key) {\n            _this._writeObjectToBuffer(key, value, buffer, objectStreamCollection);\n        });\n        if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            this._objectStream = undefined;\n            this._objectStreamCollection = objectStreamCollection;\n            this._writeXrefStream(buffer);\n        }\n        else {\n            this._writeXrefTable(buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeArchieveStream = function (objectStreamCollection, key, value) {\n        if (typeof this._objectStream === 'undefined' || this._objectStream._length === 100) {\n            var archiveObj = new _PdfArchievedStream(this);\n            objectStreamCollection.set(archiveObj._reference, archiveObj);\n            this._objectStream = archiveObj;\n        }\n        this._objectStream._writeObject(key, value);\n    };\n    _PdfCrossReference.prototype._writeObjectToBuffer = function (key, value, buffer, // eslint-disable-line\n    objectStreamCollection) {\n        var cipher;\n        if (value instanceof _PdfDictionary && value.isCatalog) {\n            this._writeToBuffer(buffer, key, value);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var type = value.get('Filter');\n            var typeIsFilter = type && type.name === 'Standard';\n            if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                if (!typeIsFilter) {\n                    this._writeArchieveStream(objectStreamCollection, key, value);\n                }\n                else {\n                    this._writeToBuffer(buffer, key, value);\n                }\n            }\n            else {\n                this._offsetReference.set(key, buffer.length);\n                this._indexes.push(key.objectNumber, 1);\n                this._writeObject(value, buffer, key);\n            }\n        }\n        else {\n            if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && !dictionary.isCatalog) {\n                    if (this._encrypt) {\n                        cipher = this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    dictionary._updated = false;\n                }\n            }\n            else if ((!Array.isArray(value) || value.length === 0) && typeof value !== 'number') {\n                return;\n            }\n            this._writeToBuffer(buffer, key, value, cipher);\n        }\n    };\n    _PdfCrossReference.prototype._writeToBuffer = function (buffer, key, value, cipher) {\n        this._offsets.push(buffer.length);\n        this._offsetReference.set(key, buffer.length);\n        this._indexes.push(key.objectNumber, 1);\n        this._writeObject(value, buffer, key, cipher);\n    };\n    _PdfCrossReference.prototype._getSortedReferences = function (collection) {\n        var entriesArray = []; // eslint-disable-line\n        collection.forEach(function (value, key) {\n            entriesArray.push([key, value]);\n        });\n        entriesArray.sort(function (a, b) {\n            return a[0].objectNumber - b[0].objectNumber;\n        });\n        var sortedCollection = new Map(); // eslint-disable-line\n        var lastObjectNumber = 1;\n        for (var _i = 0, entriesArray_1 = entriesArray; _i < entriesArray_1.length; _i++) {\n            var _a = entriesArray_1[_i], key = _a[0], value = _a[1];\n            var currentObjectNumber = key.objectNumber;\n            while (lastObjectNumber < currentObjectNumber) {\n                sortedCollection.set({ objectNumber: lastObjectNumber }, 0);\n                lastObjectNumber++;\n            }\n            sortedCollection.set(key, value);\n            lastObjectNumber = currentObjectNumber + 1;\n        }\n        return sortedCollection;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\nvar _PdfArchievedStream = /** @class */ (function () {\n    function _PdfArchievedStream(crossReference) {\n        this._indexes = '';\n        this._length = 0;\n        this._crossReference = crossReference;\n        this._reference = crossReference._getNextReference();\n        this._archiveXRef = '';\n        this._updatedStream = [];\n        this._collection = [];\n    }\n    _PdfArchievedStream.prototype._writeObject = function (key, value) {\n        this._archiveXRef += key.objectNumber + \" \" + this._updatedStream.length + this._crossReference._newLine;\n        this._collection.push(key.objectNumber, 1);\n        this._crossReference._writeObject(value, this._updatedStream);\n        this._length++;\n    };\n    _PdfArchievedStream.prototype._save = function (buffer, currentLength) {\n        var data = [];\n        this._crossReference._writeString(this._archiveXRef, data);\n        this._crossReference._writeBytes(this._updatedStream, data);\n        var newDict = new _PdfDictionary(this._crossReference);\n        newDict.set('Type', _PdfName.get('ObjStm'));\n        newDict.set('N', this._length);\n        newDict.set('First', this._archiveXRef.length);\n        newDict.set('Length', data.length);\n        var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n        this._archiveOffset = currentLength + buffer.length;\n        var cipher;\n        if (this._crossReference._encrypt) {\n            cipher = this._crossReference._encrypt._createCipherTransform(this._reference.objectNumber, this._reference.generationNumber);\n        }\n        this._crossReference._writeObject(archiveStream, buffer, this._reference, cipher);\n    };\n    return _PdfArchievedStream;\n}());\nvar _PdfMainObjectCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `_PdfMainObjectCollection` class.\n     *\n     * @private\n     * @param { _PdfCrossReference } collection - The cross-reference collection containing the PDF objects.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Create a new object collection instance\n     * let mainObjectCollection = new _PdfMainObjectCollection(document._crossReference);\n     * // Access the main object collection\n     * let objects = mainObjectCollection._mainObjectCollection;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function _PdfMainObjectCollection(collection) {\n        var _this = this;\n        this._pointer = 0;\n        if (!(collection._cacheMap instanceof Map)) {\n            throw new Error('Expected _cacheMap to be a Map.');\n        }\n        this._reference = [];\n        this._cache = collection._cacheMap;\n        this._mainObjectCollection = new Map(); // eslint-disable-line\n        var foundCatalog = false;\n        this._crossReference = collection;\n        this._cache.forEach(function (value, key) {\n            if (!foundCatalog && value instanceof _PdfDictionary && value.isCatalog) {\n                _this._addToMainObjectCollection(key, value);\n                foundCatalog = true;\n            }\n        });\n        this._parseObjectCollection();\n    }\n    _PdfMainObjectCollection.prototype._parseObjectCollection = function () {\n        var _this = this;\n        var _loop_1 = function () {\n            var collection = new Map(); // eslint-disable-line\n            var currentIndex = 0;\n            this_1._mainObjectCollection.forEach(function (value, key) {\n                if (currentIndex === _this._pointer) {\n                    collection.set(key, value);\n                    _this._parse(key, value);\n                }\n                currentIndex++;\n            });\n            this_1._pointer++;\n        };\n        var this_1 = this;\n        while (this._pointer < this._mainObjectCollection.size) {\n            _loop_1();\n        }\n        this._addReferencesToMainCollection();\n        return this._mainObjectCollection;\n    };\n    _PdfMainObjectCollection.prototype._addToMainObjectCollection = function (key, value) {\n        this._reference.push(key);\n        this._mainObjectCollection.set(key, value);\n    };\n    _PdfMainObjectCollection.prototype._parseFetchValue = function (reference) {\n        var fetchvalue = this._crossReference._fetch(reference); // eslint-disable-line\n        this._parse(reference, fetchvalue);\n    };\n    _PdfMainObjectCollection.prototype._parse = function (key, value) {\n        var _this = this;\n        if (value instanceof _PdfDictionary) {\n            this._parseDictionary(value);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._parseStream(key, value);\n        }\n        else if (value instanceof _PdfReference) {\n            this._parseFetchValue(value);\n        }\n        else if (Array.isArray(value) && value.length > 0) {\n            var isPdfReferenceArray = value.every(function (value) { return value instanceof _PdfReference; }); // eslint-disable-line\n            if (isPdfReferenceArray) {\n                value.forEach(function (ref) { return _this._parseFetchValue(ref); }); // eslint-disable-line\n            }\n            else {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        _this._parseFetchValue(item);\n                    }\n                });\n                if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                    this._addToMainObjectCollection(key, value);\n                }\n            }\n        }\n        else if (typeof value === 'number') {\n            if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                this._addToMainObjectCollection(key, value);\n            }\n        }\n    };\n    _PdfMainObjectCollection.prototype._addReferencesToMainCollection = function () {\n        var _this = this;\n        var objectsToWrite = []; // eslint-disable-line\n        this._cache.forEach(function (value, key) {\n            if (!_this._mainObjectCollection.has(key)) {\n                objectsToWrite.push({ key: key, value: value });\n            }\n        });\n        objectsToWrite.forEach(function (_a) {\n            var key = _a.key, value = _a.value;\n            _this._addToMainObjectCollection(key, value);\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseDictionary = function (element) {\n        var _this = this;\n        element.forEach(function (key, value) {\n            var processReference = function (ref) {\n                if (!_this._mainObjectCollection.has(ref) && _this._reference.indexOf(ref) === -1) {\n                    var fetchValue = _this._crossReference._fetch(ref); // eslint-disable-line\n                    if (fetchValue instanceof _PdfReference) {\n                        fetchValue = _this._crossReference._fetch(fetchValue);\n                    }\n                    if (fetchValue instanceof _PdfBaseStream) {\n                        _this._parseStream(ref, fetchValue);\n                    }\n                    else {\n                        _this._addToMainObjectCollection(ref, fetchValue);\n                    }\n                }\n            };\n            if (value instanceof _PdfReference) {\n                processReference(value);\n            }\n            else if (Array.isArray(value)) {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        processReference(item);\n                    }\n                    else if (item instanceof _PdfDictionary) {\n                        _this._parseDictionary(item);\n                    }\n                });\n            }\n            else if (value instanceof _PdfDictionary) {\n                _this._parseDictionary(value);\n            }\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseStream = function (key, element) {\n        this._parseDictionary(element.dictionary);\n        if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n            var type = element.dictionary.get('Type');\n            var subtype = element.dictionary.get('Subtype');\n            var isUpdated = element.dictionary._updated;\n            var uncompressedValue = void 0;\n            if (isUpdated || (type && (type.name === 'XObject' || type.name === 'Metadata') &&\n                (subtype.name === 'Form' || subtype.name === 'XML'))) {\n                uncompressedValue = this._crossReference._fetch(key);\n            }\n            else {\n                uncompressedValue = this._crossReference._fetch(key, true);\n                uncompressedValue._isCompress = false;\n            }\n            this._addToMainObjectCollection(key, uncompressedValue);\n        }\n    };\n    return _PdfMainObjectCollection;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex, _isNullOrUndefined } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfWidgetAnnotation } from './../annotations/annotation';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._isDefaultAppearance = false;\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._isNeedAppearances = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n            this._isNeedAppearances = true;\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                field = this._parseFields(dictionary, ref);\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    PdfForm.prototype._parseFields = function (dictionary, reference) {\n        var field;\n        if (dictionary) {\n            var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n            var fieldFlags = 0;\n            var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n            if (typeof flag !== 'undefined') {\n                fieldFlags = flag;\n            }\n            if (key) {\n                switch (key.name.toLowerCase()) {\n                    case 'tx':\n                        field = PdfTextBoxField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                    case 'btn':\n                        if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                            field = PdfButtonField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                            field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfCheckBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'ch':\n                        if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                            field = PdfComboBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfListBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'sig':\n                        field = PdfSignatureField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._root._updated = true;\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        this._isNeedAppearances = true;\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = void 0;\n                    if (item) {\n                        page = item._getPage();\n                        if (page) {\n                            page._removeAnnotation(item._ref);\n                        }\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n            this._reorderParsedAnnotations(index);\n        }\n        this._fields.splice(index, 1);\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    PdfForm.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedFields.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedFields = result;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._isDefaultAppearance = value;\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (_isNullOrUndefined(this._fieldCollection) && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var hasNoKids = false;\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(fieldDictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                hasNoKids = true;\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (fieldDictionary) {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        if (hasNoKids && (fieldFlags & _FieldFlag.radio) !== 0) {\n                            continue;\n                        }\n                        else {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (_isNullOrUndefined(kids) && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (_isNullOrUndefined(entry)) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (dictionary && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference && kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference && kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (kidDictionary && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten, pageToImport) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field && !field._isLoaded && typeof field._tabIndex !== 'undefined' && field._tabIndex >= 0) {\n                var page = field._page;\n                if (page &&\n                    page._pageDictionary.has('Annots') &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual || this._tabOrder === PdfFormFieldsTabOrder.manual)) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    for (var i_1 = 0; i_1 < field.itemsCount; i_1++) {\n                        var item = field.itemAt(i_1);\n                        if (item && item instanceof PdfWidgetAnnotation) {\n                            var index = annots.indexOf(item._ref);\n                            if (index < 0) {\n                                index = field._annotationIndex;\n                            }\n                            if (index >= 0) {\n                                var annotations = page.annotations._reArrange(field._ref, field._tabIndex, index);\n                                page._pageDictionary.update('Annots', annotations);\n                                page._pageDictionary._updated = true;\n                            }\n                        }\n                    }\n                }\n            }\n            if (field && ((pageToImport && field.page === pageToImport) || !pageToImport)) {\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten || (isFlatten && pageToImport && field.page === pageToImport)) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && !page1._isNew && page1 instanceof PdfPage && page2 && !page2._isNew && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none ||\n                        this._tabOrder === PdfFormFieldsTabOrder.structure ||\n                        this._tabOrder === PdfFormFieldsTabOrder.widget) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary && dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (_isNullOrUndefined(kids) && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (_isNullOrUndefined(this._annotationObjects) && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (_isNullOrUndefined(this._table) && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary) {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    if (annotations._comments && annotations._comments.length > 0) {\n                                        annotations._comments = [];\n                                    }\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (this._groupHolders && this._groupHolders.length > 0) {\n                for (var i = 0; i < this._groupHolders.length; i++) {\n                    var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                    if (dictionary && dictionary.has('IRT')) {\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo) {\n                            if (this._groupReferences && this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n            }\n            this._groupHolders = [];\n            this._groupReferences = new Map();\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (_this._crossReference && _this._crossReference._fetch && primitive) {\n                            var inReplyToDictionary = _this._crossReference._fetch(primitive);\n                            if (inReplyToDictionary && inReplyToDictionary.has('NM')) {\n                                var input = inReplyToDictionary.get('NM');\n                                if (input !== null && typeof input !== 'undefined') {\n                                    _this.fdfString += '(' + _this._getFormattedString(input) + ')';\n                                }\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (_isNullOrUndefined(array) && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n        this._incrementalUpdate = true;\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFileStructure.prototype, \"isIncrementalUpdate\", {\n        /**\n         * Gets the boolean flag indicating whether the update is incremental.\n         *\n         * @returns { boolean } - Returns true if the PDF document supports incremental updates, otherwise false\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the incremental update\n         * let incrementalUpdate: boolean = fileStructure.isIncrementalUpdate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._incrementalUpdate;\n        },\n        /**\n         * Sets the boolean flag indicating whether the update is incremental.\n         *\n         * @param {boolean} value - If `true`, enables incremental updates for the PDF document; otherwise, disables it.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the incremental updates\n         * fileStructure.isIncrementalUpdate = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._incrementalUpdate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","/**\n * `PdfPageImportOptions` class represents to customize the support of import PDF pages\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Options to customize the support of import PDF pages.\n * let options: PdfPageImportOptions = new PdfPageImportOptions();\n * // Sets the target page index to import\n * options.targetIndex = 1;\n * // Sets the rotation angle of the page to import\n * options.rotation = PdfRotationAngle.angle180;\n * // Sets the boolean value indicating whether the optimize resources while import pages or not\n * options.optimizeResources = true;\n * // Copy the first page and add it as second page with page rotation\n * document.importPage(0, options);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageImportOptions = /** @class */ (function () {\n    function PdfPageImportOptions() {\n        this._optimizeResources = true;\n        this._groupFormFields = false;\n    }\n    Object.defineProperty(PdfPageImportOptions.prototype, \"targetIndex\", {\n        /**\n         * Gets the target page index to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the target page index to import\n         * let targetIndex: number = options.targetIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._targetIndex;\n        },\n        /**\n         * Sets the target page index to import\n         *\n         * @param {number} value Target page index to import.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the target page index to import\n         * options.targetIndex = 1;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._targetIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the rotation angle of the page to import\n         * let rotation: PdfRotationAngle = options.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the page to import\n         *\n         * @param {PdfRotationAngle} value Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the rotation angle of the page to import\n         * options.rotation = PdfRotationAngle.angle270;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"optimizeResources\", {\n        /**\n         * Gets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @returns {boolean} Indicates resource optimization.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the optimize resources while import pages or not\n         * let resource: optimizeResources = options.optimizeResources;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._optimizeResources;\n        },\n        /**\n         * Sets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @param {boolean} value Indicates resource optimization.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the optimize resources while import pages or not\n         * options.optimizeResources = true;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._optimizeResources = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"groupFormFields\", {\n        /**\n         * Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @returns {boolean} value Indicates form fields grouping.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * let groupFormfields: number = options.groupFormFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._groupFormFields;\n        },\n        /**\n         * Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @param {boolean} value Indicates form fields grouping\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * options.groupFormFields = true;\n         * // Copy the first page and add it as second page.\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._groupFormFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageImportOptions;\n}());\nexport { PdfPageImportOptions };\n","import { PdfWidgetAnnotation } from './annotations/annotation';\nimport { PdfPageOrientation } from './enumerator';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfButtonField, PdfCheckBoxField, PdfComboBoxField, PdfListField, PdfRadioButtonListField, PdfSignatureField, PdfTextBoxField } from './form/field';\nimport { PdfPageSettings } from './pdf-document';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfDestination } from './pdf-page';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _getItemValue } from './utils';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './base-stream';\nvar _PdfMergeHelper = /** @class */ (function () {\n    function _PdfMergeHelper(crossReference, destination, source, pageReference, options) {\n        this._namedDestinations = []; // eslint-disable-line\n        this._bookmarks = []; // eslint-disable-line\n        this._fields = []; // eslint-disable-line\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference = new Map();\n        this._destination = []; // eslint-disable-line\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._isLayersPresent = false;\n        this._fieldNames = [];\n        this._options = new PdfPageImportOptions();\n        this._kidsReference = []; // eslint-disable-line\n        this._formFieldsCollection = new Map();\n        this._formFields = [];\n        this._isDuplicatePage = false;\n        this._fieldCount = 0;\n        this._crossReference = crossReference;\n        this._destinationDocument = destination;\n        this._sourceDocument = source;\n        this._pageReference = pageReference;\n        if (typeof options !== 'undefined') {\n            this._options = options;\n        }\n        this._copier = new _PdfCopier(this._crossReference, this._sourceDocument._crossReference);\n    }\n    _PdfMergeHelper.prototype._importPages = function (page, index, layers, isCopiedPage, options, isSplitDocument) {\n        var _this = this;\n        var template;\n        var newPage;\n        var pageDictionary = page._pageDictionary;\n        this._isDuplicatePage = isCopiedPage;\n        if (!options) {\n            this._options.rotation = page.rotation;\n        }\n        else {\n            this._options.rotation = options.rotation;\n        }\n        if (typeof index === 'number') {\n            newPage = this._insertNewPage(page, index);\n        }\n        else if (this._isDuplicatePage) {\n            newPage = this._insertNewPage(page, page._pageIndex + 1);\n        }\n        else {\n            newPage = this._insertNewPage(page);\n        }\n        if ((isCopiedPage || isSplitDocument) && this._options.optimizeResources) {\n            var newContents_1 = []; // eslint-disable-line\n            pageDictionary.forEach(function (key, value) {\n                if (key === 'Contents' && newContents_1.length === 0) {\n                    var contents = value; // eslint-disable-line\n                    if (contents instanceof _PdfReference) {\n                        var pageContent = isSplitDocument ? _this._copier._copy(contents) : contents; // eslint-disable-line\n                        newPage._pageDictionary.update(key, pageContent);\n                    }\n                    else if (contents instanceof Array) {\n                        for (var i = 0; i < contents.length; i++) {\n                            var newContent = isSplitDocument ? (_this._copier._copy(contents[Number.parseInt(i.toString(), 10)])) : // eslint-disable-line\n                                contents[Number.parseInt(i.toString(), 10)];\n                            newContents_1.push(newContent);\n                        }\n                        newPage._pageDictionary.update(key, newContents_1);\n                    }\n                }\n                else if (key === 'Resources' && value) {\n                    var resourceValue = isSplitDocument ? _this._copier._copy(value) : value; // eslint-disable-line\n                    if (resourceValue) {\n                        newPage._pageDictionary.update(key, resourceValue);\n                    }\n                }\n                else if (key !== 'Resources' && key !== 'MediaBox' && key !== 'CropBox' && key !== 'Parent' && key !== 'Annots'\n                    && key !== 'Contents' && key !== 'Rotate') {\n                    newPage._pageDictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            template = page._contentTemplate;\n            newPage.graphics.drawTemplate(template, { x: 0, y: 0, width: template._size[0], height: template._size[1] });\n            template._content.dictionary.update('Resources', this._copier._copy(pageDictionary.getRaw('Resources')));\n            this._pageReference.set(pageDictionary, newPage);\n            if (!isCopiedPage) {\n                this._bookmarksPageLinkReference.set(page._ref, newPage._pageIndex);\n            }\n        }\n        if (pageDictionary.has('Annots')) {\n            this._importAnnotation(page, newPage);\n            if (typeof this._options !== 'undefined' && this._options.groupFormFields && this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._formFieldsGroupingSupport(this._sourceDocument.form, page, newPage);\n            }\n            else if (this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._importFormField(page, this._sourceDocument.form, newPage, this._sourceDocument._crossReference);\n            }\n        }\n        if (!isCopiedPage) {\n            var bookMarkMap = this._sourceDocument._parseBookmarkDestination();\n            if (bookMarkMap && bookMarkMap.has(page)) {\n                var bookmarks = bookMarkMap.get(page);\n                for (var i = 0; i < bookmarks.length; i++) {\n                    this._bookmarks.push(bookmarks[Number.parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if ((!isCopiedPage && layers) || !this._options.optimizeResources) {\n            this._mergeLayer(newPage._pageDictionary, pageDictionary, this._sourceDocument._crossReference);\n        }\n        newPage._pageDictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importAnnotation = function (page, newPage) {\n        var array = []; // eslint-disable-line\n        var dest; // eslint-disable-line\n        var isDestination = false;\n        var oldCollection = page.annotations;\n        var count = oldCollection.count;\n        for (var i = 0; i < count; i++) {\n            var annotationReference = oldCollection._annotations[Number.parseInt(i.toString(), 10)];\n            if (annotationReference) {\n                var annotationDictionary = this._sourceDocument._crossReference._fetch(annotationReference);\n                if (annotationDictionary) {\n                    if (annotationDictionary.has('Dest')) {\n                        dest = [];\n                        var destinationArray = annotationDictionary.get('Dest'); // eslint-disable-line\n                        var destination = annotationDictionary._get('Dest'); // eslint-disable-line\n                        if (destinationArray instanceof Array) {\n                            var destArray = destinationArray; // eslint-disable-line\n                            for (var j = 0; j < destArray.length; j++) {\n                                dest.push(destArray[Number.parseInt(j.toString(), 10)]);\n                            }\n                            isDestination = true;\n                        }\n                        else if (destination instanceof _PdfReference) {\n                            dest.push(destination);\n                        }\n                    }\n                    if (dest && dest.length > 0) {\n                        this._destination.push(dest);\n                    }\n                    if (annotationDictionary.has('OC')) {\n                        var reference = annotationDictionary.getRaw('OC'); // eslint-disable-line\n                        if (reference instanceof _PdfReference) {\n                            this._annotationLayer.set(i, reference);\n                        }\n                    }\n                    var copiedAnnotationReference = this._copier._copy(annotationReference);\n                    var copiedAnnotationDictionary = this._destinationDocument._crossReference.\n                        _fetch(copiedAnnotationReference);\n                    if (isDestination) {\n                        copiedAnnotationDictionary.update('Dest', dest);\n                    }\n                    copiedAnnotationDictionary.update('P', newPage._ref);\n                    this._crossReference._cacheMap.set(copiedAnnotationReference, copiedAnnotationDictionary);\n                    array.push(copiedAnnotationReference);\n                }\n            }\n            isDestination = false;\n            dest = [];\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._formFieldsGroupingSupport = function (form, oldPage, newPage) {\n        var array = [];\n        var fieldNames = [];\n        var kidsArray = [];\n        var formFields;\n        var drEntry = form._dictionary.get('DR');\n        if (form._dictionary.has('DR')) {\n            drEntry = form._dictionary.get('DR');\n        }\n        if (newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        if (oldPage._pageDictionary.has('Annots')) {\n            kidsArray = oldPage._pageDictionary.get('Annots');\n        }\n        if (!this._isDuplicatePage) {\n            formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                fieldNames.push(formFields.fieldAt(k).name);\n            }\n        }\n        for (var i = 0; i < form.count; i++) {\n            var field = form.fieldAt(i);\n            var formField = void 0;\n            var destinationKids = [];\n            var sourceKids = field._dictionary.get('Kids');\n            if (fieldNames.indexOf(field.name) !== -1 || this._isDuplicatePage) {\n                if (!this._isDuplicatePage) {\n                    formField = formFields.fieldAt(fieldNames.indexOf(field.name));\n                    if (formField._dictionary.get('Kids')) {\n                        destinationKids = formField._dictionary.get('Kids');\n                    }\n                }\n                else {\n                    formField = field;\n                    destinationKids = sourceKids;\n                }\n                field._isDuplicatePage = true;\n                if ((field instanceof PdfSignatureField && formField instanceof PdfSignatureField) || !(field instanceof\n                    PdfSignatureField)) {\n                    if (sourceKids !== undefined && sourceKids.length > 0) {\n                        for (var j = 0; j < sourceKids.length; j++) {\n                            var fieldItem = field.itemAt(j); // eslint-disable-line\n                            if (fieldItem.page === oldPage) {\n                                formField._page = newPage;\n                                array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, j, i, drEntry, fieldItem);\n                            }\n                        }\n                    }\n                    else {\n                        array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, 0, i, drEntry);\n                    }\n                }\n            }\n            else {\n                array = this._insertFormFields(i, form._crossReference, field, form, newPage._ref, array, kidsArray);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._groupFormFieldsKids = function (destinationField, field, kidsArray, destKids, oldKids, ref, array, index, fieldIndex, drEntry, widget) {\n        if (field._dictionary.has('Kids') && destinationField._dictionary.has('Kids')) {\n            if (kidsArray.indexOf(oldKids[Number.parseInt(index.toString(), 10)]) !== -1) {\n                var oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n                var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n                dictionary.update('P', ref);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                array.push(reference);\n                dictionary.update('Parent', destinationField._ref);\n                destKids.push(reference);\n                dictionary._updated = true;\n                destinationField._dictionary._updated = true;\n                if (!this._isDuplicatePage) {\n                    if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n                        delete dictionary._map.AS;\n                    }\n                    this._createAppearance(destinationField, field, oldDictionary, dictionary, drEntry, widget);\n                }\n            }\n        }\n        else if (field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids') || this._isDuplicatePage) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary, !this._isDuplicatePage);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, destinationField._dictionary);\n        }\n        else if ((!field._dictionary.has('Kids') && destinationField._dictionary.has('Kids'))) {\n            var fieldDict = this._copier._copyDictionary(field._dictionary);\n            this._updateFieldDictionary(fieldDict, ref, destinationField._ref);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, fieldDict);\n            destKids.push(reference);\n            array.push(reference);\n            destinationField._dictionary._updated = true;\n            this._createAppearance(destinationField, field, field._dictionary, fieldDict, drEntry, widget);\n        }\n        else if (!field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids')) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary);\n            var formFieldDict = this._copier._copyDictionary(field._dictionary, !this._isDuplicatePage);\n            this._removeFieldDictionary(formFieldDict, ['Parent', 'FT', 'T', 'Ff']);\n            formFieldDict.update('P', ref);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDict);\n        }\n        return array;\n    };\n    _PdfMergeHelper.prototype._updateFieldsWithKids = function (destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDictionary) {\n        var newFieldReference = this._crossReference._getNextReference();\n        var newFieldDict = this._createNewFieldDictionary(fieldDictionary, destinationField._dictionary);\n        newFieldDict.objId = newFieldReference.toString();\n        this._crossReference._cacheMap.set(newFieldReference, newFieldDict);\n        var newField = this._destinationDocument.form._parseFields(newFieldDict, newFieldReference);\n        destinationField._dictionary.update('Parent', newFieldReference);\n        newField._dictionary._updated = true;\n        this._updateFieldDictionary(fieldDictionary, ref, newFieldReference);\n        this._destinationDocument.form._dictionary._updated = true;\n        var oldDictionary;\n        if (oldKids !== undefined && oldKids.length > 0) {\n            oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n        }\n        else {\n            oldDictionary = formFieldDictionary;\n        }\n        var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n        if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n            delete dictionary._map.AS;\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, dictionary);\n        dictionary.update('P', ref);\n        array.push(reference);\n        dictionary.update('Parent', newField._ref);\n        var kidsElement = [];\n        kidsElement.push(destinationField._ref);\n        kidsElement.push(reference);\n        dictionary._updated = true;\n        destinationField._dictionary._updated = true;\n        newFieldDict.update('Kids', kidsElement);\n        newField._kids = kidsElement;\n        this._formFieldsCollection.set(fieldIndex, newFieldReference);\n        this._destinationDocument.form._parsedFields.set(fieldIndex, newField);\n        if (!this._isDuplicatePage) {\n            this._createAppearance(newField, field, oldDictionary, dictionary, drEntry);\n        }\n        newFieldDict._updated = true;\n    };\n    _PdfMergeHelper.prototype._removeFieldDictionary = function (dictionary, keys) {\n        keys.forEach(function (key) {\n            if (dictionary.has(key)) {\n                delete dictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return dictionary;\n    };\n    _PdfMergeHelper.prototype._updateFieldDictionary = function (dictionary, pageRef, parentRef) {\n        dictionary = this._removeFieldDictionary(dictionary, ['Parent', 'FT', 'T', 'Ff']);\n        dictionary.update('P', pageRef);\n        dictionary.update('Parent', parentRef);\n        dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._createNewFieldDictionary = function (fieldDictionary, destDictionary) {\n        var newFieldDict = new _PdfDictionary(this._crossReference);\n        ['Parent', 'FT', 'T', 'V', 'Ff', 'TU', 'Opt', 'I'].forEach(function (key) {\n            if (fieldDictionary.has(key)) {\n                newFieldDict.update(key, fieldDictionary.get(key));\n                delete fieldDictionary._map[key]; // eslint-disable-line\n                delete destDictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return newFieldDict;\n    };\n    _PdfMergeHelper.prototype._getItemStyle = function (item, field) {\n        var mkDictionary = item._dictionary.get('MK');\n        if (mkDictionary && mkDictionary.has('CA')) {\n            item._styleText = mkDictionary.get('CA').charAt(0);\n        }\n        else {\n            item._styleText = (field instanceof PdfRadioButtonListField) ? 'l' : '4';\n        }\n    };\n    _PdfMergeHelper.prototype._createAppearance = function (destinationField, field, oldDictionary, dictionary, drEntry, widget) {\n        var previousIndex = destinationField._kidsCount - 1;\n        var itemValue;\n        if (destinationField instanceof PdfCheckBoxField) {\n            var item = destinationField.itemAt(previousIndex);\n            item._enableGrouping = true;\n            this._getItemStyle(item, destinationField);\n            if (field instanceof PdfRadioButtonListField) {\n                item._dictionary.update('AS', _PdfName.get('Off'));\n                itemValue = _getItemValue(oldDictionary);\n            }\n            else {\n                item._postProcess(destinationField.checked ? 'Yes' : 'Off');\n            }\n            destinationField._drawAppearance(item, itemValue);\n        }\n        else if (destinationField instanceof PdfRadioButtonListField) {\n            var item = destinationField.itemAt(previousIndex);\n            this._getItemStyle(item, destinationField);\n            if (item._dictionary.has('AS')) {\n                item._postProcess(item._dictionary.get('AS').name);\n            }\n            else {\n                item._postProcess('Off');\n            }\n            item._enableGrouping = true;\n            destinationField._enableGrouping = true;\n            destinationField._drawAppearance(item);\n        }\n        else if (destinationField instanceof PdfListField) {\n            var item = destinationField.itemAt(previousIndex);\n            if (typeof widget !== 'undefined') {\n                item.rotationAngle = widget.rotationAngle;\n            }\n            if (item && !destinationField._checkFieldFlag(item._dictionary)) {\n                item._enableGrouping = true;\n                var template = destinationField._createAppearance(item);\n                destinationField._addAppearance(item._dictionary, template, 'N');\n                item._dictionary._updated = true;\n            }\n        }\n        else if (destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof\n            PdfSignatureField) {\n            var widgetAnnotation = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n            if (typeof widget !== 'undefined' && widget !== null && destinationField instanceof PdfSignatureField) {\n                destinationField._createAppearance(widget, false);\n            }\n            else {\n                widgetAnnotation.setAppearance(true);\n                widgetAnnotation._enableGrouping = true;\n                var pdfFont = void 0;\n                if (typeof widget !== 'undefined' && widget !== null) {\n                    pdfFont = this._obtainFont(widget._dictionary, drEntry);\n                }\n                else {\n                    pdfFont = this._obtainFont(dictionary, drEntry);\n                }\n                widgetAnnotation._pdfFont = pdfFont;\n                if (destinationField instanceof PdfSignatureField) {\n                    destinationField._createAppearance(widgetAnnotation, false);\n                }\n                else {\n                    destinationField._postProcess(false, widgetAnnotation);\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._obtainFont = function (item, formDictionary) {\n        var fontFamily = '';\n        var fontSize = 8;\n        var pdfFont;\n        if (item && (item.has('DS') || item.has('DA'))) {\n            if (item.has('DS')) {\n                var collection = item.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    if (fontSize === 0) {\n                        fontSize = 8;\n                    }\n                }\n            }\n        }\n        fontFamily = fontFamily.trim();\n        var fontStyle = PdfFontStyle.regular;\n        var baseFontName;\n        if (typeof formDictionary != 'undefined' && formDictionary.has('Font')) {\n            var dictionary = formDictionary.get('Font').get(fontFamily);\n            if (typeof dictionary !== 'undefined') {\n                baseFontName = dictionary.get('BaseFont').name;\n                fontStyle = this._getFontStyle(baseFontName);\n            }\n        }\n        switch (fontFamily) {\n            case 'Helv':\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n            case 'Courier':\n            case 'Cour':\n                pdfFont = new PdfStandardFont(PdfFontFamily.courier, fontSize, fontStyle);\n                break;\n            case 'Symb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.symbol, fontSize, fontStyle);\n                break;\n            case 'TiRo':\n            case 'TiIt':\n                pdfFont = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, fontStyle);\n                break;\n            case 'ZaDb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, fontStyle);\n                break;\n            default:\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n        }\n        return pdfFont;\n    };\n    _PdfMergeHelper.prototype._getFontStyle = function (fontStyle) {\n        var style = PdfFontStyle.regular;\n        if (fontStyle.includes('Bold')) {\n            style = PdfFontStyle.bold;\n        }\n        else if (fontStyle.includes('Italic')) {\n            style = PdfFontStyle.italic;\n        }\n        return style;\n    };\n    _PdfMergeHelper.prototype._importFormField = function (page, pdfForm, newPage, crossReference) {\n        var form = this._destinationDocument.form;\n        var array = [];\n        if (newPage && newPage._pageDictionary && newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        var kidsArray = [];\n        var widgetArray = [];\n        if (this._destinationDocument.form._dictionary.has('Fields')) {\n            var formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                var name_2 = formFields.fieldAt(k).name;\n                this._fieldNames.push(name_2);\n            }\n        }\n        if (page._pageDictionary.has('Annots')) {\n            widgetArray = page._pageDictionary.get('Annots');\n        }\n        var count = pdfForm.count;\n        for (var i = 0; i < count; ++i) {\n            var pdfField = pdfForm.fieldAt(i);\n            if (pdfField._dictionary.has('Kids')) {\n                kidsArray = pdfField._dictionary.get('Kids');\n                if (kidsArray.length > 1) {\n                    for (var j = 0; j < kidsArray.length; j++) {\n                        var fieldItem = pdfField.itemAt(j); // eslint-disable-line\n                        if (fieldItem.page === page) {\n                            array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                            break;\n                        }\n                    }\n                }\n                else if (kidsArray.length === 1) {\n                    if (pdfField.page === page) {\n                        array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                    }\n                }\n            }\n            else {\n                if (pdfField.page === page) {\n                    array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                }\n            }\n        }\n        if (pdfForm._dictionary.has('DR')) {\n            var dr = pdfForm._dictionary.get('DR');\n            var drDictionary = this._copier._copyDictionary(dr); // eslint-disable-line\n            var font = void 0; // eslint-disable-line\n            if (drDictionary.has('Font')) {\n                font = drDictionary.get('Font');\n            }\n            if (this._destinationDocument.form._dictionary.has('DR')) {\n                var curreneDR = this._destinationDocument.form._dictionary.get('DR');\n                if (curreneDR.has('Font')) {\n                    var currentFont_1 = curreneDR.get('Font'); // eslint-disable-line\n                    if (font) {\n                        font.forEach(function (key, value) {\n                            currentFont_1.set(key, value);\n                        });\n                    }\n                    currentFont_1._updated = true;\n                }\n            }\n            else {\n                this._destinationDocument.form._dictionary.update('DR', drDictionary);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._insertFormFields = function (index, crossReference, pdfField, form, ref, array, kidsArray) {\n        var dictionary = new _PdfDictionary();\n        if (pdfField._dictionary.has('Kids')) {\n            pdfField._dictionary.forEach(function (key, value) {\n                if (key !== 'Kids') {\n                    dictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            dictionary = this._copier._copyDictionary(pdfField._dictionary);\n        }\n        var newReference = this._crossReference._getNextReference();\n        dictionary.objId = newReference.toString();\n        var field = form._parseFields(dictionary, ref);\n        this._crossReference._cacheMap.set(newReference, field._dictionary);\n        if (pdfField._dictionary.has('Kids')) {\n            var oldKids = pdfField._dictionary.get('Kids');\n            var kids = [];\n            for (var j = 0; j < oldKids.length; j++) {\n                if ((kidsArray.indexOf(oldKids[Number.parseInt(j.toString(), 10)]) !== -1)) {\n                    var oldDictionary = pdfField._crossReference._fetch(oldKids[Number.parseInt(j.toString(), 10)]);\n                    var dict = this._copier._copyDictionary(oldDictionary);\n                    dict.update('P', ref);\n                    dict.update('Parent', newReference);\n                    dict._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, dict);\n                    array.push(reference);\n                    kids.push(reference);\n                }\n            }\n            dictionary.update('Kids', kids);\n            field._kids = kids;\n        }\n        else {\n            field._dictionary.update('P', ref);\n            array.push(newReference);\n        }\n        field._dictionary._updated = true;\n        var i = 0;\n        var fieldName = field.name;\n        var modified = false;\n        while (this._fieldNames.indexOf(fieldName) !== -1) {\n            fieldName = field.name + i;\n            modified = true;\n            ++i;\n        }\n        if (modified) {\n            field._dictionary.update('T', fieldName);\n            field._name = fieldName;\n        }\n        field._dictionary._updated = true;\n        if (this._fieldCount > 0) {\n            this._destinationDocument.form._parsedFields.set(this._fieldCount, field);\n            field._annotationIndex = this._fieldCount;\n            this._fieldCount++;\n        }\n        else {\n            this._destinationDocument.form._parsedFields.set(index, field);\n            field._annotationIndex = index;\n        }\n        this._destinationDocument.form._fields.push(newReference);\n        return array;\n    };\n    _PdfMergeHelper.prototype._mergeFormFieldsWithDocument = function () {\n        var pdfFields;\n        if (this._formFieldsCollection.size > 0) {\n            pdfFields = this._destinationDocument.form._dictionary.get('Fields');\n            this._formFieldsCollection.forEach(function (value, key) {\n                pdfFields[Number.parseInt(key.toString(), 10)] = value;\n            });\n        }\n        else {\n            pdfFields = this._destinationDocument.form._fields;\n        }\n        if (this._destinationDocument.form._dictionary.get('NeedAppearances')) {\n            this._destinationDocument.form._dictionary.set('NeedAppearances', false);\n        }\n        this._destinationDocument.form._dictionary.set('Fields', pdfFields);\n        this._destinationDocument.form._fields = pdfFields;\n        this._destinationDocument.form._dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importLayers = function (ocProperties, layers) {\n        this._isLayersPresent = layers;\n        if (this._isLayersPresent && this._destinationDocument._catalog._catalogDictionary.has('OCProperties')) {\n            var destinationOCProperties = this._destinationDocument._catalog._catalogDictionary.get('OCProperties');\n            var currentOCProperties = ocProperties.get('OCProperties');\n            if (destinationOCProperties.has('OCGs')) {\n                var ocgs = destinationOCProperties.get('OCGs'); // eslint-disable-line\n                var Cocgs = currentOCProperties.get('OCGs'); // eslint-disable-line\n                if (ocgs.length > 0) {\n                    for (var i = 0; i < Cocgs.length; i++) {\n                        ocgs.push(Cocgs[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            destinationOCProperties._updated = true;\n            if (destinationOCProperties.has('D') && currentOCProperties.has('D')) {\n                var curreneDefaultView = destinationOCProperties.get('D');\n                var existingDefaultView = currentOCProperties.get('D');\n                if (curreneDefaultView && existingDefaultView) {\n                    if (curreneDefaultView.has('Order') && existingDefaultView.has('Order')) {\n                        var order = curreneDefaultView.get('Order'); // eslint-disable-line\n                        var existingOrder = existingDefaultView.get('Order'); // eslint-disable-line\n                        if (order.length > 0 && existingOrder.length > 0) {\n                            for (var i = 0; i < existingOrder.length; i++) {\n                                order.push(existingOrder[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('Order')) {\n                        curreneDefaultView.set('Order', existingDefaultView.get('Order'));\n                    }\n                    if (curreneDefaultView.has('RBGroups') && existingDefaultView.has('RBGroups')) {\n                        var groups = curreneDefaultView.get('RBGroups'); // eslint-disable-line\n                        var existingRBGroups = existingDefaultView.get('RBGroups'); // eslint-disable-line\n                        if (groups.length > 0 && existingRBGroups.length > 0) {\n                            for (var i = 0; i < existingRBGroups.length; i++) {\n                                groups.push(existingRBGroups[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('RBGroups')) {\n                        curreneDefaultView.set('RBGroups', existingDefaultView.get('RBGroups'));\n                        curreneDefaultView._updated = true;\n                    }\n                    if (curreneDefaultView.has('ON') && existingDefaultView.has('ON')) {\n                        var on = curreneDefaultView.get('ON'); // eslint-disable-line\n                        var existingON = existingDefaultView.get('ON'); // eslint-disable-line\n                        if (on.length > 0 && existingON.length > 0) {\n                            for (var i = 0; i < existingON.length; i++) {\n                                on.push(existingON[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('ON')) {\n                        curreneDefaultView.set('ON', existingDefaultView.get('ON'));\n                    }\n                    if (curreneDefaultView.has('AS') && existingDefaultView.has('AS')) {\n                        var elements = curreneDefaultView.get('AS'); // eslint-disable-line\n                        var existingElements = existingDefaultView.get('AS'); // eslint-disable-line\n                        if (elements.length > 0 && existingElements.length > 0) {\n                            var asDictionary = existingElements[0];\n                            var currentASDictionary = elements[0];\n                            if (asDictionary instanceof _PdfReference && currentASDictionary instanceof _PdfReference) {\n                                asDictionary = this._crossReference._fetch(asDictionary);\n                                currentASDictionary = this._crossReference._fetch(currentASDictionary);\n                            }\n                            if (asDictionary.has('OCGs') && currentASDictionary.has('OCGs')) {\n                                var usageGroup = asDictionary.get('OCGs'); // eslint-disable-line\n                                var currentUsageGroup = currentASDictionary.get('OCGs'); // eslint-disable-line\n                                if (usageGroup.length > 0 && currentUsageGroup.length > 0) {\n                                    for (var i = 0; i < usageGroup.length; i++) {\n                                        currentUsageGroup.push(usageGroup[Number.parseInt(i.toString(), 10)]);\n                                    }\n                                }\n                            }\n                            for (var i = 0; i < existingElements.length; i++) {\n                                elements.push(existingElements[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('AS')) {\n                        curreneDefaultView.set('AS', existingDefaultView.get('AS'));\n                    }\n                    if (curreneDefaultView.has('OFF') && existingDefaultView.has('OFF')) {\n                        var off = curreneDefaultView.get('OFF'); // eslint-disable-line\n                        var existingOff = existingDefaultView.get('OFF'); // eslint-disable-line\n                        if (off.length > 0 && existingOff.length > 0) {\n                            for (var i = 0; i < existingOff.length; i++) {\n                                off.push(existingOff[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('OFF')) {\n                        curreneDefaultView.set('OFF', existingDefaultView.get('OFF'));\n                    }\n                }\n                if (curreneDefaultView.has('Locked') && existingDefaultView.has('Locked')) {\n                    var locked = curreneDefaultView.get('Locked'); // eslint-disable-line\n                    var existingLocked = existingDefaultView.get('Locked'); // eslint-disable-line\n                    if (locked.length > 0 && existingLocked.length > 0) {\n                        for (var i = 0; i < existingLocked.length; i++) {\n                            locked.push(existingLocked[Number.parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                else if (existingDefaultView.has('Locked')) {\n                    curreneDefaultView.set('Locked', existingDefaultView.get('Locked'));\n                }\n            }\n            else if (currentOCProperties.has('D')) {\n                destinationOCProperties.set('D', currentOCProperties.get('D'));\n            }\n            destinationOCProperties._updated = true;\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n        else if (this._isLayersPresent) {\n            this._destinationDocument._catalog._catalogDictionary.update('OCProperties', ocProperties.get('OCProperties'));\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._mergeLayer = function (newPageDictionary, oldPageDictionary, crossReference) {\n        var _this = this;\n        var res = newPageDictionary.get('Resources');\n        var xobject = res.get('XObject');\n        var xobjdict; // eslint-disable-line\n        if (xobject) {\n            xobject.forEach(function (key, value) {\n                xobjdict = _this._crossReference._fetch(value);\n            });\n        }\n        var resource;\n        if (xobjdict) {\n            resource = xobjdict.dictionary.get('Resources');\n        }\n        var XObject; // eslint-disable-line\n        var oldPageList = new Map();\n        var oldPageResource = oldPageDictionary.get('Resources');\n        var layerDictionary; // eslint-disable-line\n        var dict; // eslint-disable-line\n        if (oldPageResource.has('Properties')) {\n            layerDictionary = oldPageResource.get('Properties');\n            layerDictionary.forEach(function (key, value) {\n                oldPageList.set(key, value);\n            });\n            var properties_1 = new _PdfDictionary(this._crossReference);\n            oldPageList.forEach(function (value, key) {\n                _this._newList.forEach(function (layerValue, layerkey) {\n                    if (value === layerkey) {\n                        properties_1.set(key, layerValue);\n                    }\n                });\n            });\n            resource.set('Properties', properties_1);\n            resource._updated = true;\n            properties_1._updated = true;\n        }\n        else if (oldPageResource.has('XObject')) {\n            XObject = resource.get('XObject');\n            layerDictionary = oldPageResource.get('XObject');\n            layerDictionary.forEach(function (key, value) {\n                if (value instanceof _PdfReference) {\n                    dict = crossReference._fetch(value);\n                    dict.dictionary.forEach(function (annotationKey, annotationValue) {\n                        if (annotationKey === 'OC') {\n                            _this._newList.forEach(function (layerValue, layerKey) {\n                                if (layerKey === annotationValue) {\n                                    if (XObject.has(key)) {\n                                        var xobjDictionary = XObject.get(key); // eslint-disable-line\n                                        xobjDictionary.dictionary.set(annotationKey, layerValue);\n                                        xobjDictionary._updated = true;\n                                    }\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        if (this._annotationLayer.size > 0) {\n            var annotations_1 = newPageDictionary._get('Annots'); // eslint-disable-line\n            this._annotationLayer.forEach(function (reference, index) {\n                var pdfAnnotation = annotations_1[Number.parseInt(index.toString(), 10)]; // eslint-disable-line\n                var annotDictionary = _this._crossReference._fetch(pdfAnnotation);\n                _this._newList.forEach(function (value, oldReference) {\n                    if (reference === oldReference) {\n                        annotDictionary.set('OC', value);\n                    }\n                });\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._exportBookmarks = function (document, pageCount) {\n        var _this = this;\n        if (this._bookmarks.length > 0) {\n            var bookmark = this._bookmarks;\n            var currentBase = this._destinationDocument.bookmarks;\n            var current = document.bookmarks;\n            var bkCollection = void 0; // eslint-disable-line\n            if (current) {\n                var stack = [];\n                var nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                if (document.pageCount !== pageCount) {\n                    nodeInformation = { index: 0, base: currentBase, kids: bookmark };\n                    bkCollection = [];\n                }\n                do {\n                    var _loop_1 = function () {\n                        current = nodeInformation.kids[nodeInformation.index];\n                        if (bookmark.indexOf(current) !== -1 && typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1) {\n                            var bm = current;\n                            var newBm = currentBase.add(bm.title);\n                            var dest = bm.destination;\n                            newBm.color = bm.color;\n                            newBm.textStyle = bm.textStyle;\n                            var newDest = null;\n                            var newPage_1 = null;\n                            var page_1 = null;\n                            var nDest = bm.namedDestination;\n                            if (nDest) {\n                                if (nDest.destination) {\n                                    page_1 = nDest.destination.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_1._ref === key) {\n                                            newPage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newPage_1) {\n                                        var newNameddest = this_1._getNamedDestination(nDest, newPage_1);\n                                        newBm.namedDestination = newNameddest;\n                                        delete newBm._dictionary._map.C;\n                                        this_1._namedDestinations.push(newNameddest._title);\n                                        var reference_1 = this_1._crossReference._getNextReference();\n                                        this_1._crossReference._cacheMap.set(reference_1, newNameddest._dictionary);\n                                        this_1._namedDestinations.push(reference_1);\n                                    }\n                                }\n                            }\n                            else if (dest) {\n                                page_1 = dest.page;\n                                this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                    if (page_1._ref === key) {\n                                        newPage_1 = _this._destinationDocument.getPage(value);\n                                    }\n                                });\n                                if (newPage_1) {\n                                    newDest = new PdfDestination(newPage_1, dest.location);\n                                    newDest.mode = dest.mode;\n                                    newDest.zoom = dest.zoom;\n                                    newDest.location = dest.location;\n                                    newBm.destination = newDest;\n                                }\n                            }\n                            currentBase = newBm;\n                            bkCollection.push(newBm.title);\n                        }\n                        else if (typeof bkCollection === 'undefined' || (typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1)) {\n                            var bm = current;\n                            var dest = bm.destination;\n                            var newDest = null;\n                            var newpage_1 = null;\n                            var page_2 = null;\n                            var nDest = bm.namedDestination;\n                            if (document.pageCount === pageCount) {\n                                var newBm = currentBase.add(bm.title);\n                                if (bm._dictionary.has('A')) {\n                                    newBm._dictionary.update('A', bm._dictionary.get('A'));\n                                }\n                                newBm.textStyle = bm.textStyle;\n                                newBm.color = bm.color;\n                                if (nDest) {\n                                    if (nDest._destination) {\n                                        page_2 = nDest.destination.page;\n                                        this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                            if (page_2._ref === key) {\n                                                newpage_1 = _this._destinationDocument.getPage(value);\n                                            }\n                                        });\n                                        if (newpage_1) {\n                                            var newNameddest = this_1._getNamedDestination(nDest, newpage_1);\n                                            newBm.namedDestination = newNameddest;\n                                            delete newBm._dictionary._map.C;\n                                            this_1._namedDestinations.push(newNameddest._title);\n                                            var reference_2 = this_1._crossReference._getNextReference();\n                                            this_1._crossReference._cacheMap.set(reference_2, newNameddest._dictionary);\n                                            this_1._namedDestinations.push(reference_2);\n                                        }\n                                    }\n                                }\n                                else if (dest) {\n                                    page_2 = dest.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_2._ref === key) {\n                                            newpage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newpage_1) {\n                                        newDest = new PdfDestination(newpage_1, dest.location);\n                                        newDest.mode = dest.mode;\n                                        newDest.zoom = dest.zoom;\n                                        newDest.location = dest.location;\n                                        newBm.destination = newDest;\n                                    }\n                                }\n                                currentBase = newBm;\n                            }\n                        }\n                        nodeInformation.index += 1;\n                        if (current.count > 0) {\n                            stack.push(nodeInformation);\n                            nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                        }\n                        else {\n                            currentBase = nodeInformation.base;\n                        }\n                    };\n                    var this_1 = this;\n                    for (; nodeInformation.index < nodeInformation.kids.length;) {\n                        _loop_1();\n                    }\n                    if (stack.length > 0) {\n                        nodeInformation = stack.pop();\n                        while ((nodeInformation.index === nodeInformation.kids.length) && (stack.length > 0)) {\n                            nodeInformation = stack.pop();\n                        }\n                        currentBase = nodeInformation.base;\n                    }\n                } while (nodeInformation.index < nodeInformation.kids.length);\n            }\n            var reference = void 0;\n            if (this._namedDestinations.length > 0) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Names', this._namedDestinations);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Dests', reference);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._destinationDocument._catalog._catalogDictionary.set('Names', reference);\n            }\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._destinationDocument._catalog._catalogDictionary.isCatalog = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._getNamedDestination = function (nDest, page) {\n        var newNamedDest = new PdfNamedDestination(nDest.title); // eslint-disable-line\n        newNamedDest.destination = this._getDestination(page, nDest.destination);\n        return newNamedDest;\n    };\n    _PdfMergeHelper.prototype._getDestination = function (page, dest) {\n        var newDest = new PdfDestination(page, dest.location);\n        newDest._location = dest._location;\n        newDest.mode = dest.mode;\n        newDest.zoom = dest.zoom;\n        newDest.location = dest.location;\n        return newDest;\n    };\n    _PdfMergeHelper.prototype._writeObject = function (document, table, value, dictionary, key, array, ref) {\n        if (value instanceof _PdfName || typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            this._writeDictionary(value, table, key, array, ref, null);\n        }\n        else if (Array.isArray(value)) {\n            var list = []; // eslint-disable-line\n            this._writeArray(document, list, value, dictionary);\n            this._writeDictionary(null, table, key, array, ref, list);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new _PdfDictionary(this._crossReference);\n            this._writePropertiesDictionary(document, subTable, value);\n            this._writeDictionary(null, table, key, array, ref, subTable);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(document, table, document._crossReference._fetch(value), dictionary, key, array, value);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeDictionary('null', table, key, array, ref, null);\n        }\n    };\n    _PdfMergeHelper.prototype._writeDictionary = function (value, table, key, array, ref, list) {\n        if (key && value) {\n            table.set(key, value);\n        }\n        else if (key && list) {\n            table.set(key, list);\n        }\n        else if (list && !ref) {\n            array.push(list);\n        }\n        else if (value) {\n            array.push(value);\n        }\n        else if (ref) {\n            var reference_3;\n            if (this._newList && this._newList.size > 0) {\n                this._newList.forEach(function (value, key) {\n                    if (key === ref) {\n                        reference_3 = value;\n                    }\n                });\n            }\n            if (reference_3) {\n                array.push(reference_3);\n            }\n            else {\n                var layerList = list;\n                reference_3 = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference_3, layerList);\n                layerList._updated = true;\n                array.push(reference_3);\n                this._newList.set(ref, reference_3);\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._writeArray = function (document, array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(document, null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _PdfMergeHelper.prototype._writePropertiesDictionary = function (document, table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(document, table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._fixDestinations = function (document) {\n        var pageLinkReference = this._pageReference;\n        if (this._destination.length > 0) {\n            for (var i = 0; i < this._destination.length; i++) {\n                var dest = this._destination[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (dest instanceof Array) {\n                    var destination = dest; // eslint-disable-line\n                    if (destination.length > 0 && destination[0] && destination[0] instanceof _PdfReference) {\n                        var ref = document._crossReference._fetch(destination[0]); // eslint-disable-line\n                        var index = pageLinkReference.get(ref);\n                        if (ref && pageLinkReference.has(ref) && index !== null) {\n                            destination[0] = index._ref;\n                        }\n                        if (ref && pageLinkReference.has(ref) && index === null) {\n                            destination[0] = null;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._insertNewPage = function (page, index) {\n        var newPage;\n        var pagesettings = new PdfPageSettings();\n        pagesettings.size = page.size;\n        pagesettings.margins.left = 0;\n        pagesettings.margins.top = 0;\n        pagesettings.margins.right = 0;\n        pagesettings.margins.bottom = 0;\n        if (typeof this._options !== 'undefined' && typeof this._options.rotation !== 'undefined') {\n            pagesettings.rotation = this._options.rotation;\n        }\n        else {\n            pagesettings.rotation = page.rotation;\n        }\n        pagesettings.orientation = (page.size[0] > page.size[1]) ? PdfPageOrientation.landscape : PdfPageOrientation.portrait;\n        if (typeof index !== 'undefined') {\n            newPage = this._destinationDocument.addPage(index, pagesettings);\n        }\n        else {\n            newPage = this._destinationDocument.addPage(pagesettings);\n        }\n        var pageDictionary = page._pageDictionary;\n        if (pageDictionary._get('MediaBox')) {\n            var mBox = pageDictionary._get('MediaBox'); // eslint-disable-line\n            newPage._pageDictionary.update('MediaBox', mBox);\n        }\n        if (pageDictionary._get('CropBox')) {\n            var cBox = pageDictionary._get('CropBox'); // eslint-disable-line\n            newPage._pageDictionary.update('CropBox', cBox);\n        }\n        if (typeof this._options.rotation !== 'undefined' || page._pageDictionary.has('Rotate')) {\n            var rotate = void 0;\n            if (typeof this._options.rotation !== 'undefined') {\n                rotate = Math.floor(this._options.rotation) * 90;\n            }\n            else {\n                rotate = Math.floor(page.rotation) * 90;\n            }\n            rotate = rotate >= 360 ? rotate % 360 : rotate;\n            newPage._pageDictionary.update('Rotate', rotate);\n        }\n        return newPage;\n    };\n    _PdfMergeHelper.prototype._objectDispose = function () {\n        this._bookmarkHashTable = new Map();\n        this._namedDestinations = [];\n        this._bookmarks = [];\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference.clear();\n        this._destination = [];\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._fieldNames = [];\n        if (this._destinationDocument && this._destinationDocument._form && this._destinationDocument._form._widgetReferences) {\n            this._destinationDocument._form._widgetReferences = [];\n        }\n    };\n    return _PdfMergeHelper;\n}());\nexport { _PdfMergeHelper };\nvar _PdfCopier = /** @class */ (function () {\n    function _PdfCopier(targetCrossReference, sourceCrossReference) {\n        this._traversedObjects = new Map();\n        this._isGroupingSupport = false;\n        this._targetCrossReference = targetCrossReference;\n        this._sourceCrossReference = sourceCrossReference;\n    }\n    _PdfCopier.prototype._copy = function (object) {\n        var clonedObject; // eslint-disable-line\n        if (object instanceof _PdfDictionary) {\n            clonedObject = this._copyDictionary(object);\n        }\n        else if (Array.isArray(object)) {\n            clonedObject = this._copyArray(object);\n        }\n        else if (object instanceof _PdfBaseStream) {\n            clonedObject = this._copyStream(object);\n        }\n        else if (object instanceof _PdfReference) {\n            clonedObject = this._copyReference(object);\n        }\n        else if (object instanceof _PdfName || typeof object === 'number' ||\n            typeof object === 'string' || typeof object === 'boolean') {\n            clonedObject = object;\n        }\n        return clonedObject;\n    };\n    _PdfCopier.prototype._copyDictionary = function (element, copiedPage) {\n        var _this = this;\n        var clonedDictionary = new _PdfDictionary(this._targetCrossReference);\n        if (element && element.size > 0) {\n            element.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && copiedPage))) {\n                    var copiedValue = _this._copy(value); // eslint-disable-line\n                    if (copiedValue !== null && typeof copiedValue !== 'undefined') {\n                        clonedDictionary.update(key, copiedValue);\n                    }\n                }\n            });\n        }\n        clonedDictionary._updated = true;\n        return clonedDictionary;\n    };\n    _PdfCopier.prototype._copyArray = function (originalArray) {\n        var newArray = []; // eslint-disable-line \n        for (var i = 0; i < originalArray.length; i++) {\n            newArray.push(this._copy(originalArray[Number.parseInt(i.toString(), 10)]));\n        }\n        return newArray;\n    };\n    _PdfCopier.prototype._copyStream = function (originalStream) {\n        var bytes;\n        var imageStream = false;\n        var baseStream = originalStream; // eslint-disable-line\n        if (originalStream.dictionary.has('Subtype') && originalStream.dictionary.get('Subtype').name === 'Image') {\n            imageStream = true;\n            if (originalStream instanceof _PdfStream) {\n                bytes = originalStream.getByteRange(originalStream.offset, originalStream.end);\n            }\n            else if (originalStream && baseStream.stream && baseStream.stream instanceof _PdfStream) {\n                if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                    var streamLength = baseStream.stream.end - baseStream.stream.start;\n                    baseStream.getBytes(streamLength);\n                    bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                }\n                else {\n                    var stream = baseStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n            }\n            else if (baseStream.stream && baseStream.stream.stream) {\n                var flateStream = baseStream.stream; // eslint-disable-line\n                if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                    var streamLength = flateStream.stream.end - flateStream.stream.start;\n                    flateStream.getBytes(streamLength);\n                    bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                }\n                else if (flateStream.stream && flateStream.stream instanceof _PdfStream) {\n                    var stream = flateStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n                else {\n                    bytes = [];\n                }\n            }\n            else {\n                bytes = originalStream.getBytes();\n                if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                    bytes = originalStream._bytes;\n                }\n            }\n        }\n        else {\n            bytes = originalStream.getBytes();\n            if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                bytes = originalStream._bytes;\n            }\n        }\n        var content = new _PdfContentStream(Array.from(bytes));\n        content._isImage = imageStream;\n        content.dictionary = this._copyDictionary(originalStream.dictionary);\n        content.dictionary._updated = true;\n        return content;\n    };\n    _PdfCopier.prototype._copyReference = function (element) {\n        if (this._traversedObjects.has(element)) {\n            return this._traversedObjects.get(element);\n        }\n        else {\n            this._traversedObjects.set(element, null);\n            var dereferencedValue = this._sourceCrossReference._fetch(element); // eslint-disable-line\n            var copyValue = this._copy(dereferencedValue); // eslint-disable-line\n            if (copyValue instanceof _PdfDictionary || copyValue instanceof _PdfBaseStream) {\n                var newRef = this._addToDestination(copyValue);\n                this._traversedObjects.set(element, newRef);\n                return newRef;\n            }\n            else {\n                this._traversedObjects.set(element, copyValue);\n                return copyValue;\n            }\n        }\n    };\n    _PdfCopier.prototype._addToDestination = function (element) {\n        var newRef = this._targetCrossReference._getNextReference();\n        this._targetCrossReference._cacheMap.set(newRef, element);\n        element.objId = newRef.objectNumber + \" \" + newRef.generationNumber;\n        return newRef;\n    };\n    return _PdfCopier;\n}());\nexport { _PdfCopier };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode, _emptyPdfData, _getNewGuidString, _isNullOrUndefined } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _PdfName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment, PdfPageOrientation, PdfRotationAngle } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\nimport { _PdfMergeHelper } from './pdf-merge';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        this._isDuplicatePage = false;\n        this._isSplitDocument = false;\n        if (!data) {\n            throw new Error('PDF data cannot be undefined or null');\n        }\n        this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        this._fileStructure = new PdfFileStructure();\n        this._crossReference = new _PdfCrossReference(this, password);\n        this._pages = new Map();\n        this._checkHeader();\n        this._crossReference._setStartXRef(this._startXRef);\n        try {\n            this._parse(false);\n        }\n        catch (e) {\n            if (e.name === 'XRefParseException') {\n                this._parse(true);\n            }\n            else {\n                throw e;\n            }\n        }\n        this._crossReference._version = this._version;\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog) {\n                if (catalog._catalogDictionary.has('Outlines')) {\n                    var reference = catalog._catalogDictionary._get('Outlines');\n                    var outlines = catalog._catalogDictionary.get('Outlines');\n                    if (outlines) {\n                        this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                        this._bookmarkBase._reference = reference;\n                        if (outlines.has('First')) {\n                            this._bookmarkBase._reproduceTree();\n                        }\n                    }\n                }\n                else {\n                    var outlines = new _PdfDictionary(this._crossReference);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, outlines);\n                    catalog._catalogDictionary.update('Outlines', reference);\n                    this._crossReference._allowCatalog = true;\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    this._bookmarkBase._reference = reference;\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        if (pageIndex < 0 || pageIndex >= this.pageCount) {\n            throw new Error('Invalid page index');\n        }\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.addPage = function (arg1, arg2) {\n        var settings;\n        var pageIndex;\n        if (typeof arg2 !== 'undefined') {\n            settings = arg2;\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        else if (typeof arg1 === 'undefined') {\n            settings = new PdfPageSettings();\n            pageIndex = this.pageCount;\n        }\n        else if (arg1 instanceof PdfPageSettings) {\n            settings = arg1;\n            pageIndex = this.pageCount;\n        }\n        else {\n            settings = new PdfPageSettings();\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        var sectionDictionary = new _PdfDictionary(this._crossReference);\n        sectionDictionary.update('Type', _PdfName.get('Pages'));\n        sectionDictionary.update('Count', 1);\n        this._updatePageSettings(sectionDictionary, settings);\n        var sectionReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n        sectionDictionary.objId = sectionReference.toString();\n        var pageDictionary = new _PdfDictionary(this._crossReference);\n        pageDictionary.update('Type', _PdfName.get('Page'));\n        var pageReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pageReference, pageDictionary);\n        pageDictionary.objId = pageReference.toString();\n        pageDictionary.update('Parent', sectionReference);\n        sectionDictionary.update('Kids', [pageReference]);\n        if (this.pageCount === 0) {\n            var parentReference = this._catalog._catalogDictionary._get('Pages');\n            if (parentReference && this._catalog._topPagesDictionary) {\n                this._catalog._topPagesDictionary.update('Kids', [sectionReference]);\n                sectionDictionary.update('Parent', parentReference);\n            }\n            else {\n                this._catalog._catalogDictionary.update('Pages', sectionReference);\n            }\n            this._pages = new Map();\n            this._pageCount = 1;\n        }\n        else {\n            var lastPage_1 = this.getPage(pageIndex === this.pageCount ? (pageIndex - 1) : pageIndex);\n            if (lastPage_1 && lastPage_1._pageDictionary) {\n                var parentReference = lastPage_1._pageDictionary._get('Parent');\n                var parentDictionary = this._crossReference._fetch(parentReference);\n                if (parentDictionary && parentDictionary.has('Kids')) {\n                    var kids = parentDictionary.get('Kids');\n                    if (kids) {\n                        if (pageIndex === this.pageCount) {\n                            kids.push(sectionReference);\n                        }\n                        else {\n                            var newKids_1 = [];\n                            kids.forEach(function (entry) {\n                                if (entry === lastPage_1._ref) {\n                                    newKids_1.push(sectionReference);\n                                }\n                                newKids_1.push(entry);\n                            });\n                            kids = newKids_1;\n                            this._updatePageCache(pageIndex);\n                        }\n                        parentDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                        this._updatePageCount(parentDictionary, 1);\n                        this._pageCount = this.pageCount + 1;\n                    }\n                }\n            }\n        }\n        var result = new PdfPage(this._crossReference, pageIndex, pageDictionary, pageReference);\n        result._pageSettings = settings;\n        result._isNew = true;\n        this._pages.set(pageIndex, result);\n        return result;\n    };\n    PdfDocument.prototype.removePage = function (argument) {\n        var targetPage = (argument instanceof PdfPage) ? argument : this.getPage(argument);\n        this._removePage(targetPage);\n    };\n    PdfDocument.prototype._checkPageNumber = function (index) {\n        if (index < 0 || index > this.pageCount) {\n            throw new Error('Index out of range');\n        }\n    };\n    PdfDocument.prototype._updatePageCount = function (dictionary, valueToIncrement) {\n        dictionary.update('Count', dictionary.get('Count') + valueToIncrement);\n        if (dictionary.has('Parent')) {\n            var parentDictionary = dictionary.get('Parent');\n            if (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                this._updatePageCount(parentDictionary, valueToIncrement);\n            }\n        }\n    };\n    PdfDocument.prototype._updatePageSettings = function (dictionary, settings) {\n        var bounds = [0, 0, settings.size[0], settings.size[1]];\n        dictionary.update('MediaBox', bounds);\n        dictionary.update('CropBox', bounds);\n        var rotate = Math.floor(settings.rotation) * 90;\n        if (rotate >= 360) {\n            rotate = rotate % 360;\n        }\n        dictionary.update('Rotate', rotate);\n    };\n    PdfDocument.prototype._updatePageCache = function (index, isIncrement) {\n        if (isIncrement === void 0) { isIncrement = true; }\n        var updatedData = new Map();\n        for (var i = this.pageCount - 1; i >= 0; i--) {\n            var page = this.getPage(i);\n            if (isIncrement) {\n                if (i >= index) {\n                    updatedData.set(i + 1, page);\n                    page._pageIndex = i + 1;\n                }\n                else {\n                    updatedData.set(i, page);\n                }\n            }\n            else {\n                if (i > index) {\n                    updatedData.set(i - 1, page);\n                    page._pageIndex = i - 1;\n                }\n                else if (i !== index) {\n                    updatedData.set(i, page);\n                }\n            }\n        }\n        this._pages = updatedData;\n        if (!isIncrement) {\n            this._pageCount = this._pages.size;\n        }\n    };\n    PdfDocument.prototype._removePage = function (pageToRemove) {\n        var bookMarkMap = this._parseBookmarkDestination();\n        if (bookMarkMap && bookMarkMap.has(pageToRemove)) {\n            var bookmarks = bookMarkMap.get(pageToRemove);\n            if (bookmarks) {\n                for (var i = 0; i < bookmarks.length; i++) {\n                    var bookmark = bookmarks[Number.parseInt(i.toString(), 10)];\n                    if (bookmark) {\n                        var bookmarkDictionary = bookmark._dictionary;\n                        if (bookmarkDictionary) {\n                            if (bookmarkDictionary.has('A')) {\n                                bookmarkDictionary.update('A', null);\n                            }\n                            bookmarkDictionary.update('Dest', null);\n                        }\n                    }\n                }\n            }\n        }\n        this._removePageTemplates(pageToRemove);\n        for (var i = this.form.count - 1; i >= 0; --i) {\n            var field = this.form.fieldAt(i);\n            if (field && field.page === pageToRemove) {\n                this.form.removeFieldAt(i);\n            }\n        }\n        this._updatePageCache(pageToRemove._pageIndex, false);\n        this._removeParent(pageToRemove._ref, pageToRemove._pageDictionary);\n        if (this._crossReference._cacheMap.has(pageToRemove._ref)) {\n            pageToRemove._pageDictionary._updated = false;\n        }\n    };\n    PdfDocument.prototype._removeParent = function (referenceToRemove, dictionary) {\n        if (dictionary.has('Parent')) {\n            var parentReference = dictionary._get('Parent');\n            var parentDictionary = this._crossReference._fetch(parentReference);\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                if (_isNullOrUndefined(kids) && kids.length === 1 && parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                    this._removeParent(parentReference, parentDictionary);\n                }\n                else {\n                    kids = kids.filter(function (item) { return item !== referenceToRemove; });\n                    parentDictionary.update('Kids', kids);\n                    this._updatePageCount(parentDictionary, -1);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._parseBookmarkDestination = function () {\n        var current = this.bookmarks;\n        if (typeof this._bookmarkHashTable === 'undefined' && current) {\n            this._bookmarkHashTable = new Map();\n            var stack = [];\n            var nodeInformation = { index: 0, kids: current._bookMarkList };\n            do {\n                for (; nodeInformation.index < nodeInformation.kids.length;) {\n                    current = nodeInformation.kids[nodeInformation.index];\n                    var namedDestination = current.namedDestination;\n                    if (namedDestination) {\n                        if (namedDestination.destination) {\n                            var page = namedDestination.destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    else {\n                        var destination = current.destination;\n                        if (destination) {\n                            var page = destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    nodeInformation.index += 1;\n                    if (current.count > 0) {\n                        stack.push(nodeInformation);\n                        nodeInformation = { index: 0, kids: current._bookMarkList };\n                        continue;\n                    }\n                }\n                if (stack.length > 0) {\n                    nodeInformation = stack.pop();\n                    while (nodeInformation.index === nodeInformation.kids.length && stack.length > 0) {\n                        nodeInformation = stack.pop();\n                    }\n                }\n            } while (nodeInformation.index < nodeInformation.kids.length);\n        }\n        return this._bookmarkHashTable;\n    };\n    PdfDocument.prototype._removePageTemplates = function (page) {\n        var dictionary;\n        if (this._catalog._catalogDictionary.has('Names')) {\n            dictionary = this._catalog._catalogDictionary.get('Names');\n            if (dictionary) {\n                this._removeInternalTemplates(dictionary, 'Pages', page);\n                this._removeInternalTemplates(dictionary, 'Templates', page);\n            }\n        }\n    };\n    PdfDocument.prototype._removeInternalTemplates = function (dictionary, key, page) {\n        if (dictionary.has(key)) {\n            var namedObject = dictionary.get(key);\n            if (namedObject && namedObject.has('Names')) {\n                var nameCollection = namedObject.getArray('Names');\n                if (nameCollection && nameCollection.length > 0) {\n                    var namedPageCollection = this._getUpdatedPageTemplates(nameCollection, page);\n                    var namedPageDictionary = new _PdfDictionary(this._crossReference);\n                    namedPageDictionary.update('Names', namedPageCollection);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, namedPageDictionary);\n                    namedPageDictionary.objId = reference.toString();\n                    dictionary.update(key, reference);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._getUpdatedPageTemplates = function (namedPages, page) {\n        if (namedPages.length > 0) {\n            for (var i = 1; i <= namedPages.length; i = i + 2) {\n                var pageDictionary = namedPages[Number.parseInt(i.toString(), 10)];\n                if (pageDictionary && page._pageDictionary === pageDictionary) {\n                    namedPages.pop();\n                    namedPages.pop();\n                    return namedPages;\n                }\n            }\n        }\n        return namedPages;\n    };\n    /**\n     * Reorders the pages in the PDF document.\n     *\n     * @param {number[]} orderArray The page sequence to arrange the pages.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Reorders the pages in the PDF document\n     * document.reorderPages([3, 2, 1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.reorderPages = function (orderArray) {\n        var _this = this;\n        orderArray.forEach(function (pageNumber) {\n            _this._checkPageNumber(pageNumber);\n        });\n        var sortedArray = this._sortedArray(orderArray);\n        var ascendingOrder = orderArray.slice().sort(function (a, b) { return a - b; });\n        var inputArray = Array.from({ length: this.pageCount }, function (_, i) { return i; });\n        var pagesToRemove = inputArray.filter(function (element) { return sortedArray.indexOf(element) === -1; });\n        for (var i = pagesToRemove.length - 1; i >= 0; i--) {\n            this.removePage(pagesToRemove[Number.parseInt(i.toString(), 10)]);\n        }\n        var newkids = [];\n        var newPages = new Map();\n        var parentReference = this._catalog._catalogDictionary._get('Pages');\n        var _loop_1 = function (i) {\n            var indexPage = this_1.getPage(ascendingOrder.indexOf(sortedArray[Number.parseInt(i.toString(), 10)]));\n            indexPage._pageIndex = i;\n            newPages.set(i, indexPage);\n            var sectionDictionary = new _PdfDictionary(this_1._crossReference);\n            sectionDictionary.update('Type', _PdfName.get('Pages'));\n            sectionDictionary.update('Count', 1);\n            sectionDictionary.update('Parent', parentReference);\n            var sectionReference = this_1._crossReference._getNextReference();\n            sectionDictionary.objId = sectionReference.toString();\n            sectionDictionary.update('Kids', [indexPage._ref]);\n            newkids.push(sectionReference);\n            var parentDictionary = indexPage._pageDictionary.get('Parent');\n            while (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                parentDictionary.forEach(function (key, value) {\n                    switch (key) {\n                        case 'Parent':\n                        case 'Kids':\n                        case 'Type':\n                        case 'Count':\n                            break;\n                        case 'Resources':\n                            _this._cloneResources(parentDictionary.get('Resources'), sectionDictionary);\n                            break;\n                        default:\n                            if (!sectionDictionary.has(key)) {\n                                sectionDictionary.update(key, value);\n                            }\n                            break;\n                    }\n                });\n                if (parentDictionary.has('Parent')) {\n                    parentDictionary = parentDictionary.get('Parent');\n                }\n                else {\n                    break;\n                }\n            }\n            this_1._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n            var pageSection = this_1._crossReference._fetch(indexPage._ref);\n            pageSection.update('Parent', sectionReference);\n        };\n        var this_1 = this;\n        for (var i = 0; i < sortedArray.length; i++) {\n            _loop_1(i);\n        }\n        this._pages = newPages;\n        if (this._catalog) {\n            var parentDictionary = this._catalog._topPagesDictionary;\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                kids = newkids;\n                parentDictionary.update('Kids', kids);\n            }\n        }\n    };\n    PdfDocument.prototype._sortedArray = function (order) {\n        var sortedArray = [];\n        order.forEach(function (num) {\n            if (sortedArray.indexOf(num) === -1) {\n                sortedArray.push(num);\n            }\n        });\n        return sortedArray;\n    };\n    PdfDocument.prototype._cloneResources = function (source, target) {\n        var _this = this;\n        if (!target.has('Resources')) {\n            target.update('Resources', source);\n        }\n        else {\n            var resourceDictionary_1 = target.get('Resources');\n            source.forEach(function (key, value) {\n                if (resourceDictionary_1.has(key)) {\n                    _this._cloneInnerResources(key, value, resourceDictionary_1);\n                }\n                else {\n                    resourceDictionary_1.update(key, value);\n                }\n            });\n        }\n    };\n    PdfDocument.prototype._cloneInnerResources = function (key, value, resourceDictionary) {\n        if (value instanceof _PdfDictionary) {\n            var oldObject_1 = resourceDictionary.get(key);\n            if (oldObject_1) {\n                var hasNew_1 = false;\n                oldObject_1.forEach(function (innerKey, innerValue) {\n                    if (!oldObject_1.has(innerKey)) {\n                        oldObject_1.update(innerKey, innerValue);\n                        hasNew_1 = true;\n                    }\n                });\n                if (hasNew_1) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n        else if (Array.isArray(value)) {\n            var oldArray_1 = resourceDictionary.get(key); // eslint-disable-line\n            if (oldArray_1) {\n                var hasNew_2 = false;\n                value.forEach(function (entry) {\n                    if (oldArray_1.indexOf(entry) === -1) {\n                        oldArray_1.push(entry);\n                        hasNew_2 = true;\n                    }\n                });\n                if (hasNew_2) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n    };\n    PdfDocument.prototype.save = function (filename) {\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        if (this._pages) {\n            this._pages.clear();\n            this._pages = undefined;\n        }\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n        if (this._mergeHelperCache) {\n            if (this._mergeHelperCache.size > 0) {\n                this._mergeHelperCache.forEach(function (value) {\n                    if (value) {\n                        value._objectDispose();\n                    }\n                });\n            }\n            this._mergeHelperCache.clear();\n            this._mergeHelperCache = undefined;\n        }\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._catalog._catalogDictionary.has('AcroForm')) {\n            this.form._doPostProcess(isFlatten);\n            if (isFlatten) {\n                var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary._updated = true;\n                if (formObject instanceof _PdfReference) {\n                    this._crossReference._cacheMap.set(formObject, dictionary);\n                }\n                else {\n                    this.form._dictionary = dictionary;\n                    this._crossReference._allowCatalog = true;\n                }\n                this.form._clear();\n            }\n            if (this.form._isDefaultAppearance) {\n                this.form._dictionary.update('NeedAppearances', this.form._isDefaultAppearance);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances') && this.form._isNeedAppearances) {\n                this.form._dictionary.update('NeedAppearances', false);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances')) {\n                this.form._dictionary.update('NeedAppearances', this.form.needAppearances);\n            }\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    PdfDocument.prototype.importPageRange = function (sourceDocument, startIndex, endIndex, options) {\n        if (startIndex > endIndex || startIndex >= sourceDocument.pageCount) {\n            throw new Error('The start index is greater then the end index, which might indicate the error in the program.');\n        }\n        this._importPages(sourceDocument, startIndex, endIndex, options);\n    };\n    PdfDocument.prototype._importPages = function (sourceDocument, startIndex, endIndex, options) {\n        var sourceOCProperties;\n        var correspondancePagecount = 0;\n        var ocProperties;\n        if (typeof options !== 'undefined' && typeof options.targetIndex === 'number') {\n            if (options.targetIndex > this.pageCount) {\n                throw new Error('The target index is out of range.');\n            }\n            this._targetIndex = options.targetIndex;\n        }\n        var pageReference = new Map();\n        if (!this._isDuplicatePage) {\n            for (var index = 0; index < sourceDocument.pageCount; index++) {\n                var sourcepage = sourceDocument.getPage(index);\n                pageReference.set(sourcepage._pageDictionary, null);\n            }\n        }\n        var helper;\n        if (!this._mergeHelperCache) {\n            this._mergeHelperCache = new Map();\n        }\n        if (!sourceDocument._uniqueID) {\n            sourceDocument._uniqueID = _getNewGuidString();\n        }\n        if (this._mergeHelperCache.has(sourceDocument._uniqueID)) {\n            helper = this._mergeHelperCache.get(sourceDocument._uniqueID);\n        }\n        else {\n            helper = new _PdfMergeHelper(this._crossReference, this, sourceDocument, pageReference, options);\n            this._mergeHelperCache.set(sourceDocument._uniqueID, helper);\n        }\n        var isLayersPresent = false;\n        if ((!this._isDuplicatePage && sourceDocument._catalog._catalogDictionary.has('OCProperties')) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            isLayersPresent = true;\n            sourceOCProperties = sourceDocument._catalog._catalogDictionary.get('OCProperties');\n            ocProperties = new _PdfDictionary(this._crossReference);\n            helper._writeObject(sourceDocument, ocProperties, sourceOCProperties, sourceOCProperties, 'OCProperties', null, null);\n            ocProperties._updated = true;\n        }\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = sourceDocument.getPage(i);\n            sourceDocument.form._doPostProcess(sourceDocument.flatten, page);\n            if (page.annotations.count > 0) {\n                page.annotations._doPostProcess(sourceDocument.flatten);\n                if (sourceDocument.flatten) {\n                    if (page._pageDictionary.has('Annots')) {\n                        delete page._pageDictionary._map.Annots;\n                        page._pageDictionary._updated = true;\n                    }\n                    page.annotations._clear();\n                }\n            }\n            if (sourceDocument._isSplitDocument) {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options, sourceDocument._isSplitDocument);\n            }\n            else {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options);\n            }\n            correspondancePagecount++;\n            if (typeof this._targetIndex === 'number') {\n                ++this._targetIndex;\n            }\n        }\n        if (!this._isDuplicatePage) {\n            helper._fixDestinations(sourceDocument);\n        }\n        helper._exportBookmarks(sourceDocument, correspondancePagecount);\n        helper._mergeFormFieldsWithDocument();\n        if ((isLayersPresent && !this._isDuplicatePage) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            helper._importLayers(ocProperties, true);\n        }\n        helper._objectDispose();\n        this._isDuplicatePage = false;\n    };\n    PdfDocument.prototype.importPage = function (arg1, arg2, options) {\n        if (typeof arg1 === 'number') {\n            this._isDuplicatePage = true;\n            if (arg2 instanceof PdfPageImportOptions) {\n                this._importPages(this, arg1, arg1, arg2);\n            }\n            else {\n                this._importPages(this, arg1, arg1);\n            }\n        }\n        else if (arg1 instanceof PdfPage && arg2 instanceof PdfDocument) {\n            var index = arg1._pageIndex;\n            this.importPageRange(arg2, index, index, options);\n        }\n    };\n    /**\n     * Splitting a PDF file into individual pages.\n     *\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document into individual pages\n     * document.split();\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.split = function () {\n        this.splitByFixedNumber(1);\n    };\n    /**\n     * Splits the PDF document into parts, each containing a maximum number of pages specified.\n     *\n     * @param {number} fixedNumber specifies the maximum number of pages in each split PDF. The default value is 1.\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByFixedNumber = function (fixedNumber) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent && pageCount >= fixedNumber && fixedNumber > 0) {\n            var splitIndex = 0;\n            for (var tempValue = 0; tempValue < pageCount; tempValue += fixedNumber) {\n                var endIndex = Math.min(tempValue + fixedNumber - 1, pageCount - 1);\n                var pdfData = this._importDocumentPages(tempValue, endIndex);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n        else {\n            throw new Error('Invalid split number. Split number should be greater than zero and less than or equal to page count.');\n        }\n    };\n    /**\n     * Splits the PDF document into multiple parts based on the specified page ranges.\n     *\n     * @param {Array<number[]>} ranges The two dimensional number array specified for start and end page indexes to split PDF documents.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by page ranges specified\n     * document.splitByPageRanges([[0, 4], [5, 9]]);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByPageRanges = function (ranges) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent) {\n            var splitIndex = 0;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[Number.parseInt(i.toString(), 10)];\n                if (Array.isArray(range) && range.length < 2) {\n                    throw new Error('Invalid page range. Start and end page indexes should be specified.');\n                }\n                var start = range[0];\n                var end = range[1];\n                if (start < 0 || end < 0 || start >= pageCount || end >= pageCount || start > end) {\n                    throw new Error('Invalid page range: start (${start}) and end (${end}).');\n                }\n                var pdfData = this._importDocumentPages(start, end);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n    };\n    PdfDocument.prototype._importDocumentPages = function (startIndex, endIndex) {\n        this._isSplitDocument = true;\n        var document = new PdfDocument(_emptyPdfData);\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = this.getPage(i);\n            document.importPage(page, this);\n        }\n        document.removePage(0);\n        var result = document.save();\n        document.destroy();\n        return result;\n    };\n    PdfDocument.prototype._invokeSplitEvent = function (splitIndex, pdfData) {\n        var args = new PdfDocumentSplitEventArgs(splitIndex, pdfData);\n        this.splitEvent(this, args);\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n/**\n * The class provides various settings related to PDF pages.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageSettings = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPageSettings` class\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Create a new PDF page settings instance\n     * let pageSettings: PdfPageSettings = new PdfPageSettings();\n     * // Sets the margins\n     * pageSettings.margins = new PdfMargins(40);\n     * // Sets the page size\n     * pageSettings.size = [595, 842];\n     * // Sets the page orientation\n     * pageSettings.orientation = PdfPageOrientation.landscape;\n     * // Add a new PDF page with page settings\n     * page = document.addPage(pageSettings);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPageSettings() {\n        this._size = [595, 842];\n        this._isOrientation = false;\n        this._orientation = PdfPageOrientation.portrait;\n        this._size = [595, 842];\n        this._margins = new PdfMargins();\n        this._rotation = PdfRotationAngle.angle0;\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page.\n         *\n         * @returns {PdfPageOrientation} The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [842, 595];\n         * // Gets the page orientation\n         * let orientation: PdfPageOrientation = pageSettings.orientation;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._orientation;\n        },\n        /**\n         * Sets the orientation of the page.\n         *\n         * @param {PdfPageOrientation} value The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isOrientation = true;\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this._updateSize(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        /**\n         * Gets the size of the page.\n         *\n         * @returns {number[]} The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        /**\n         * Sets the width and height of the page.\n         *\n         * @param {number[]} value The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isOrientation) {\n                this._updateSize(value);\n            }\n            else {\n                this._size = value;\n                this._updateOrientation();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets the margin value of the page.\n         *\n         * @returns {PdfMargins} PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the margins\n         * let margins: PdfMargins = pageSettings.margins;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._margins;\n        },\n        /**\n         * Sets the margin value of the page.\n         *\n         * @param {PdfMargins} value PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * pageSettings.margins = new PdfMargins(40);\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._margins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the PDF page.\n         *\n         * @returns {PdfRotationAngle} PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the rotation angle\n         * let rotation: PdfRotationAngle = pageSettings.rotation;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page.\n         *\n         * @param {PdfRotationAngle} value PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the rotation angle\n         * pageSettings.rotation = PdfRotationAngle.angle90;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n            if (value >= 4) {\n                this._rotation = (value % 4);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPageSettings.prototype._updateSize = function (value) {\n        var pageOrientation;\n        var pageSize;\n        if (Array.isArray(value)) {\n            pageOrientation = this.orientation;\n            pageSize = value;\n        }\n        else {\n            pageOrientation = value;\n            pageSize = this._size;\n        }\n        if (pageOrientation === PdfPageOrientation.portrait) {\n            this._size = [Math.min(pageSize[0], pageSize[1]), Math.max(pageSize[0], pageSize[1])];\n        }\n        else {\n            this._size = [Math.max(pageSize[0], pageSize[1]), Math.min(pageSize[0], pageSize[1])];\n        }\n    };\n    PdfPageSettings.prototype._updateOrientation = function () {\n        this._orientation = (this._size[1] >= this._size[0]) ? PdfPageOrientation.portrait : PdfPageOrientation.landscape;\n    };\n    PdfPageSettings.prototype._getActualSize = function () {\n        var width = this._size[0] - (this._margins._left + this._margins._right);\n        var height = this._size[1] - (this._margins._top + this._margins._bottom);\n        return [width, height];\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n/**\n * A class representing PDF page margins.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfMargins = /** @class */ (function () {\n    function PdfMargins(all) {\n        if (typeof all === 'undefined') {\n            this._left = this._right = this._top = this._bottom = 40;\n        }\n        else {\n            this._left = this._right = this._top = this._bottom = all;\n        }\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        /**\n         * Gets the left margin value of the page.\n         *\n         * @returns {number} Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the left margin\n         * let left: number = pageSettings.margins.left;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._left;\n        },\n        /**\n         * Sets the left margin value of the page.\n         *\n         * @param {number} value Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._left = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets the right margin value of the page.\n         *\n         * @returns {number} Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the right margin\n         * let right: number = pageSettings.margins.right;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._right;\n        },\n        /**\n         * Sets the right margin value of the page.\n         *\n         * @param {number} value - Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._right = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets the top margin value of the page.\n         *\n         * @returns {number} Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the top margin\n         * let top: number = pageSettings.margins.top;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._top;\n        },\n        /**\n         *Sets the top margin value of the page.\n         *\n         * @param {number} value Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._top = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Get the bottom margin value of the page.\n         *\n         * @returns {number} Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the bottom margin\n         * let bottom: number = pageSettings.margins.bottom;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bottom;\n        },\n        /**\n         * Sets the bottom margin value of the page.\n         *\n         * @param {number} value Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._bottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfMargins;\n}());\nexport { PdfMargins };\n/**\n * Public class to provide data for the document split event, including the split index and PDF data.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * document.splitEvent = documentSplitEvent;\n * // Split PDF document by fixed number of pages\n * document.splitByFixedNumber(1);\n * // Event to invoke while splitting PDF document data\n * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n * }\n * // Destroy the document\n * document.destroy();\n */\nvar PdfDocumentSplitEventArgs = /** @class */ (function () {\n    /*\n     * Initializes a new instance of the `PdfDocumentSplitEventArgs` class.\n     *\n     * @param {number} splitIndex The fixed number to split PDF document pages. The default value is 1.\n     * @param {Uint8Array} pdfData The byte array of the split PDF document data.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfDocumentSplitEventArgs(splitIndex, pdfData) {\n        this._index = splitIndex;\n        this._pdfData = pdfData;\n    }\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"pdfData\", {\n        /*\n         * Gets the byte array of the PDF document data.\n         *\n         * @returns {Uint8Array} The byte array of the PDF document data.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._pdfData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"index\", {\n        /*\n         * Gets the split index of the PDF document.\n         *\n         * @returns {Uint8Array} The index that defines the number of event calls during the PDF document split.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDocumentSplitEventArgs;\n}());\nexport { PdfDocumentSplitEventArgs };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","import { PdfLayoutType, PdfLayoutBreakType } from '../enumerator';\n/**\n * Represent the layout format class for pagination\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create an instance for PDF layout format\n * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set the layout format\n * layout.break = PdfLayoutBreakType.fitPage;\n * layout.layout = pdfLayoutType.paginate;\n * // Draw the items using specified bounds and layout format\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfLayoutFormat = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutFormat` class.\n     *\n     * @param {PdfLayoutFormat}  format Format for pagination.\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page of document\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create an instance of ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Create an instance for layout format for drawing\n     * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n     * // Set the layout format\n     * layout.break = PdfLayoutBreakType.fitPage;\n     * layout.layout = pdfLayoutType.paginate;\n     * // Draw the items using specified bounds and layout format\n     * list.draw(page, 0, 20, layout);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfLayoutFormat(format) {\n        this._boundSet = false;\n        this._paginateBounds = [];\n        if (format) {\n            this.break = format.break;\n            this.layout = format.layout;\n            this.paginateBounds = format.paginateBounds;\n            this._boundSet = format._boundSet;\n        }\n        else {\n            this.layout = PdfLayoutType.paginate;\n            this.break = PdfLayoutBreakType.fitPage;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        /**\n         * Gets the layout type of the page.\n         *\n         * @returns {PdfLayoutType} The layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Retrieve the layout type applied to the page layout format\n         * let layoutType: PdfLayoutType = pageLayout.layout;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._layout;\n        },\n        /**\n         * Sets the layout type of the page.\n         *\n         * @param {PdfLayoutType} value the  layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Initialize an array of string items\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout type to paginate for the page layout format\n         * pageLayout.layout = PdfLayoutType.paginate;\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._layout = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets the layout break type of the page.\n         *\n         * @returns {PdfLayoutBreakType} The layout break type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define an array of products\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the layout break type of the list\n         * let layoutType: PdfLayoutBreakType = pageLayout.break;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._break;\n        },\n        /**\n         * Sets the layout break type for the page.\n         *\n         * @param {PdfLayoutBreakType} value The layout break type to set for the page.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout break type for the page\n         * pageLayout.break = PdfLayoutBreakType.fitPage;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._break = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets the paginate bounds of the page.\n         *\n         * @returns {number[]} Array containing the paginate bounds.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the paginate bounds\n         * let layoutType: paginateBounds = pageLayout.paginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._paginateBounds;\n        },\n        /**\n         * Sets the paginate bounds for the page.\n         *\n         * @param {number[]} value Array representing the paginate bounds to set for the page.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for page layout settings\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the paginate bounds for the page\n         * pageLayout.paginateBounds = [0, 0, 500, 700];\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._paginateBounds = value;\n            this._boundSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets whether to use paginate bounds for pagination.\n         *\n         * @returns {boolean} Whether pagination bounds are used.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get whether paginate bounds are used\n         * let usePaginate:  boolean = pageLayout.usePaginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._boundSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\n/**\n * Represents a class for layout result in PDF generation.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list and access the layout result\n * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLayoutResult = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutResult` class.\n     * Remarks: Internal constructor used to create a new instance of a PDF layout result.\n     *\n     * @param {PdfPage} page The page where the circle annotation is to be placed.\n     * @param {number[]} bounds The bounds within which the list has been drawn.\n     * ```typescript\n     * // Load an existing document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create a new ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list and access the layout result\n     * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfLayoutResult(page, bounds) {\n        this._page = page;\n        this._bounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"Page\", {\n        /**\n         * Gets the page associated with the layout result.\n         *\n         * @returns {PdfPage} value of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the page from the layout result\n         * let resultPage: PdfPage = result.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the bounds associated with the layout result.\n         *\n         * @returns {number[]} The bounds of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the bounds associated with layout result\n         * let bounds: number[] = result.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\nvar _PageLayoutResult = /** @class */ (function () {\n    function _PageLayoutResult() {\n        this.markerWrote = false;\n        this.markerWidth = 0;\n        this.markerX = 0;\n    }\n    return _PageLayoutResult;\n}());\nexport { _PageLayoutResult };\nvar _PdfLayoutParameters = /** @class */ (function () {\n    function _PdfLayoutParameters() {\n    }\n    return _PdfLayoutParameters;\n}());\nexport { _PdfLayoutParameters };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfImage } from './pdf-image';\nimport { _PdfName } from './../../pdf-primitives';\nimport { _decode, _getDecoder } from './../../utils';\nimport { _PdfColorSpace } from './../../enumerator';\nimport { _PngDecoder } from './png-decoder';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = _getDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n        if (this._decoder && this._decoder instanceof _PngDecoder) {\n            var decoder = this._decoder;\n            this._maskStream = decoder._maskStream;\n            if (decoder._isDecode) {\n                if (decoder._colorSpace) {\n                    this._setColorSpace();\n                }\n            }\n            else {\n                this._setColorSpace();\n            }\n        }\n        else {\n            this._setColorSpace();\n        }\n    };\n    PdfBitmap.prototype._setColorSpace = function () {\n        var stream = this._imageStream;\n        var dictionary = stream.dictionary;\n        var color = dictionary.get('ColorSpace');\n        var colorSpace;\n        if (color.name === 'DeviceCMYK') {\n            colorSpace = _PdfColorSpace.cmyk;\n        }\n        else if (color.name === 'DeviceGray') {\n            colorSpace = _PdfColorSpace.grayScale;\n        }\n        if (this._decoder instanceof _PngDecoder) {\n            var cs = this._decoder._colorSpace; // eslint-disable-line\n            if (typeof cs !== 'undefined' && cs !== null) {\n                colorSpace = _PdfColorSpace.indexed;\n            }\n        }\n        switch (colorSpace) {\n            case _PdfColorSpace.cmyk:\n                dictionary.update('Decode', [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceCMYK'));\n                break;\n            case _PdfColorSpace.grayScale:\n                dictionary.update('Decode', [0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceGray'));\n                break;\n            case _PdfColorSpace.rgb:\n                dictionary.update('Decode', [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceRGB'));\n                break;\n            case _PdfColorSpace.indexed:\n                dictionary.update('ColorSpace', this._decoder._colorSpace);\n                break;\n            default:\n                break;\n        }\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * Represents the items of the list.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new list item and add into the collection\n * items.add(new PdfListItem('PDF'));\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItem = /** @class */ (function () {\n    /**\n     * Creates a new `PdfListItem` instance with the specified text and optional settings for font, format, pen, and brush.\n     *\n     * @param {string} text The text content for the list item.\n     * @param {object} [settings] Optional settings for the list item.\n     * @param {PdfFont} [settings.font] The font used for rendering the text.\n     * @param {PdfStringFormat} [settings.format] The string format used for text layout.\n     * @param {PdfBrush} [settings.brush] The brush used for filling shapes or text.\n     * @param {PdfPen} [settings.pen] The pen used for drawing outlines.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create an instance of list item collection by passing the string array\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n     * // Create a new list item\n     * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n     * // Add the list item into the collection\n     * items.add(item);\n     * // Create a new PDF ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list items\n     * list.draw(page, 0, 20);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfListItem(text, settings) {\n        this._textIndent = 0;\n        if (text === null || typeof text === 'undefined') {\n            throw new Error('Text cannot be null or undenfied.');\n        }\n        this._text = text;\n        if (settings) {\n            if (settings.font) {\n                this._font = settings.font;\n            }\n            if (settings.format) {\n                this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                this._brush = settings.brush;\n            }\n        }\n    }\n    Object.defineProperty(PdfListItem.prototype, \"brush\", {\n        /**\n         * Gets the brush associated with the list item.\n         *\n         * @returns {PdfBrush} The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the brush from the list item\n         * let brush: PdfBrush = item.brush;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the brush associated with the list item.\n         *\n         * @param {PdfBrush} value The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the fill color\n         * item.brush = new PdfBrush([255, 0, 0]);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list item.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfPen([255, 0, 0], 1)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the pen from the list item\n         * let pen: PdfPen = item.pen;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `Pdfpen` object associated with the list item.\n         *\n         * @param {PdfPen} value `PdfPen` object used to specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the stroke color\n         * item.pen = new PdfPen([255, 0, 0], 1);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"font\", {\n        /**\n         * Get the `PdfFont` object associated with the list item.\n         *\n         * @returns {PdfFont} The `PdfFont` object used for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfStandardFont(PdfFontFamily.timesRoman, 12)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the font from the list item\n         * let font: PdfFont = item.font;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list item.\n         *\n         * @param {PdfFont} value The `PdfFont` object to be set for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"stringFormat\", {\n        /**\n         * Gets the `PdfStringFormat` object associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object used to specify text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {format: new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the string format from the list item\n         * let format: PdfStringFormat = item.stringFormat;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the `PdfStringFormat` object associated with the list item.\n         *\n         * @param {PdfStringFormat} value The`PdfStringFormat` object to be set for text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"text\", {\n        /**\n         * Gets the text content of the list item.\n         *\n         * @returns {string} The text content of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item1);\n         * // Get the text content of the item\n         * let text: string = item.text;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._text;\n        },\n        /**\n         * Sets string format of the list item.\n         *\n         * @param {string} value The text content to be set.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('Word');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text of the list item\n         * item.text = 'PDF';\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Get the text indent of the item\n         * let textIndent: number = item.textIndent;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list item.\n         *\n         * @param {number} value he text indent value to be set.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Set the text indent for the item\n         * item.textIndent = 30;\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Draw the list items on the specified page at position (10, 50)\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"subList\", {\n        /**\n         * Get the sub-list associated with the current list item.\n         *\n         * @returns {PdfList} The `PdfList` object representing the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('Sub Item 1'));\n         * subList.items.add(new PdfListItem('Sub Item 2'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Get the sublist\n         * let sublist: PdfList = list.items._listitem[0].sublist;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._subList;\n        },\n        /**\n         * Sets the sub-list associated with the current list item.\n         *\n         * @param {PdfList} value The `PdfList` object to be set as the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('PDF'));\n         * subList.items.add(new PdfListItem('Word'));\n         * subList.items.add(new PdfListItem('PPT'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._subList = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfListItem;\n}());\nexport { PdfListItem };\n/**\n * Represents a collection of list items that can be drawn on a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItemCollection = /** @class */ (function () {\n    function PdfListItemCollection(items) {\n        var _this = this;\n        if (!this._listItems) {\n            this._listItems = [];\n        }\n        if (items) {\n            items.forEach(function (item) {\n                _this.add(new PdfListItem(item));\n            });\n        }\n    }\n    Object.defineProperty(PdfListItemCollection.prototype, \"count\", {\n        /**\n         * Gets the count of the list item collection.\n         *\n         * @returns {number} The count of the list items.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Initialize an array of string items\n         * let products: string[] = ['Word', 'Excel', 'PDF', 'Power Point'];\n         * // Add the items to list item collection by passing the array of products\n         * list.items = new PdfListCollection(products);\n         * / Draw the list on the page at specified bounds\n         * list.draw(page,0, 10, 500, 700);\n         * // Get the count of items from the list\n         * let count: number = list.items.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._listItems.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListItemCollection.prototype.add = function (item, itemIndent) {\n        if (item) {\n            this._listItems.push(item);\n            if (itemIndent) {\n                item.textIndent = itemIndent;\n            }\n        }\n        else {\n            throw new Error('item should not be null');\n        }\n    };\n    /**\n     * Retrieves the `PdfListItem` at the specified index in the collection.\n     *\n     * @param {number} index The zero-based index of the item to retrieve.\n     * @returns {PdfListItem} The `PdfListItem` at the specified index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Accessing the first page of the document\n     * let page: PdfPage = document.getpage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = ['Excel', 'Power Point', 'Word', 'Windows', 'MAUI'];\n     * // Add the items to list item collection by passing the array of products\n     * let itemCollection: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Retrieve a specific item from the list collection at a particular index\n     * let item: PdflistItem = list.itemCollection.itemAt(1);\n     * // Draw the list items on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 50, 500, 700);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.at = function (index) {\n        if (index === null) {\n            throw new Error('index should not be null');\n        }\n        var item = this._listItems[Number.parseInt(index.toString(), 10)];\n        return item;\n    };\n    /**\n     * Removes a `PdfListItem` from the collection.\n     *\n     * @param {PdfListItem} item The list item to be removed from the collection.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection\n     * let itemToRemove: PdfListItem = list.items.at(0);\n     * list.items.remove(itemToRemove);\n     * // Draw the list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.remove = function (item) {\n        if (!item) {\n            throw new Error('item should not be null');\n        }\n        var found = false;\n        for (var i = 0; i < this._listItems.length; i++) {\n            if (this._listItems[Number.parseInt(i.toString(), 10)] === item) {\n                found = true;\n                this._listItems.splice(Number.parseInt(i.toString(), 10), 1);\n                break;\n            }\n        }\n        if (!found) {\n            throw new Error('item collection does not contain the given content');\n        }\n    };\n    /**\n     * Removes a `PdfListItem` at the specified index from the collection.\n     *\n     * @param {number} index The zero-based index of the item to remove.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection by its index\n     * list.items.removeAt(1);\n     * // Draw the modified list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._listItems.length) {\n            throw new Error('The index should be less than items count or equal to 0');\n        }\n        this._listItems.splice(index, 1);\n    };\n    /**\n     * Clear the list item collection.\n     *\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Draw the initial list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Clear the list item collection\n     * list.items.clear();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.clear = function () {\n        this._listItems = [];\n    };\n    /**\n     * Inserts a `PdfListItem` into the collection at the specified index.\n     *\n     * @param {number} index The zero-based index at which the item should be inserted.\n     * @param {PdfListItem} item The list item to be inserted into the collection.\n     * @param {number} itemIndent The indent of the list item.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Create a new PdfListItem instance with some text\n     * let item: PdfListItem = new PdfListItem('text');\n     * // Insert the new item into the list at index 1 with an indent of 40\n     * list.items.insert(1, item, 40);\n     * // Draw the updated list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.insert = function (index, item, itemIndent) {\n        if (index < 0 || index > this._listItems.length) {\n            throw new Error('Index should be within the range of items count (inclusive).');\n        }\n        if (!item) {\n            throw new Error('Item cannot be null.');\n        }\n        if (itemIndent) {\n            item.textIndent = itemIndent;\n        }\n        this._listItems.splice(index, 0, item);\n    };\n    /**\n     * Finds the index of a `PdfListItem` in the collection.\n     *\n     * @param {PdfListItem} item The list item to find in the collection.\n     * @returns {number} The zero-based index of the item in the collection, or -1 if not found.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Retrieve the first item from the collection\n     * let item: PdfListItem = item._listItems[0];\n     * // Find the index of the first item in the collection\n     * let index: number = list.items.indexOf(item);\n     * // Draw the list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.indexOf = function (item) {\n        if (!item) {\n            throw new Error('Item should be defined.');\n        }\n        return this._listItems.indexOf(item);\n    };\n    return PdfListItemCollection;\n}());\nexport { PdfListItemCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfListMarkerAlignment, PdfLayoutType, PdfNumberStyle, PdfTextAlignment, PdfUnorderedListStyle } from '../enumerator';\nimport { PdfFontFamily, PdfStandardFont, PdfStringFormat, _PdfStringLayouter } from '../fonts';\nimport { PdfBrush } from '../graphics/pdf-graphics';\nimport { PdfTemplate } from '../graphics/pdf-template';\nimport { PdfLayoutResult, PdfLayoutFormat, _PdfLayoutParameters, _PageLayoutResult } from '../graphics';\nimport { PdfPage } from '../pdf-page';\nimport { PdfListItemCollection } from './pdf-list-item';\nimport { _convertNumber } from './../utils';\n/**\n * Represents base class for lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Initialize a new brush\n * let brush: PdfBrush =  new PdfBrush([0, 255, 255])\n * // Add an item to item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new instance of ordered list\n * let list: PdfList = new PdfOrderedList(items);\n * // Draw the ordered list with specified items\n * list.draw(page, 0, 20, 500, 700);\n * // Get the brush associated with the ordered list\n * let listBrush: PdfBrush = list.brush;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfList = /** @class */ (function () {\n    function PdfList() {\n        this._textIndent = 5;\n        this._indent = 10;\n        this._alignment = PdfListMarkerAlignment.left;\n        this._delimiter = '.';\n        this._suffix = '.';\n        this._enableHierarchy = false;\n        this._currentIndex = 0;\n        this._size = [0, 0];\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n    }\n    Object.defineProperty(PdfList.prototype, \"brush\", {\n        /**\n         * Gets the `PdfBrush` object associated with the list.\n         *\n         * @returns {PdfBrush} The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Initialize a new brush\n         * let brush: PdfBrush =  new PdfBrush([0, 255, 255]);\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the brush associated with the ordered list\n         * let listBrush: PdfBrush = list.brush;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the `PdfBrush` object associated with the list.\n         *\n         * @param {PdfBrush} value The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new Ordered list and set the brush\n         * let list: PdfOrderedList = new PdfOrderedList(items, {brush: new PdfBrush([255, 0, 0])});\n         * // Set fill color to the list\n         * list.brush = brush;\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify stroke properties for text rendering.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // create a new ordered list and draw the list\n         * let list: PdfOrderedList = new PdfOrderedList(items, {pen: new PdfPen([0, 255, 255], 1)});\n         * list.draw(page, 0, 20, 500, 700);\n         * // Retrieve the pen associated with the ordered list\n         * let itemPen: PdfPen = list.pen;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `PdfPen` object associated with the list.\n         *\n         * @param {PdfPen} value The `PdfPen` object to specify fill text rendering mode.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new pen\n         * let pen: PdfPen =  new PdfPen([0, 255, 255], 1);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the pen for the ordered list\n         * list.pen = pen;\n         * // Draw the list associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"font\", {\n        /**\n         * Gets the font of the list item.\n         *\n         * @returns {PdfFont} The font used for the list items.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * /// Retrieve the font used for the list items\n         * let itemPen: PdfFont = list.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list.\n         *\n         * @param {PdfFont} value The `PdfPen` object to to set for the list items.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new font for list\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Create a new ordered list with items and font\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * list.font = font;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"stringFormat\", {\n        /**\n         * Gets the text layout format associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to  listitem collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list with items\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Getting the text layout format used by the list items\n         * let itemFormat: PdfStringFormat = list.stringFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the text layout format of the list item.\n         *\n         * @param {PdfStringFormat} value The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new  format with alignment settings for list\n         * let itemFormat: PdfStringFormat =  new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(items);\n         * // Create a ordered list with the item collection\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Set the text layout format for the list\n         * list.stringFormat = itemFormat;\n         * // Draw the items on the page with the updated format\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"indent\", {\n        /**\n         * Gets the indent of the list.\n         *\n         * @returns {number} The indent value of the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current indent value used by the list\n         * let itemIndent: number = list.indent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._indent;\n        },\n        /**\n         * Sets the indent of the list.\n         *\n         * @param {number} value The indent value to set for the list.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the indent value for the list\n         * list.indent = 40;\n         * // Draw the items on the page with the specified indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._indent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current text indent value of the list\n         * let textIndent: number = list.textIndent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list.\n         *\n         * @param {number} value The text indent value to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text indent value for the list\n         * list.textIndent = 40;\n         * // Draw the items on the page with the updated text indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"delimiter\", {\n        /**\n         * Gets the delimiter string used to separate items in the list.\n         *\n         * @returns {string} The delimiter string used in the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of PdfListItemCollection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the delimiter used in the list\n         * let delimiter: string = list.delimiter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._delimiter;\n        },\n        /**\n         * Sets the delimiter string used to separate items in the list.\n         *\n         * @param {string} value The delimiter string to be set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the delimiter for the list\n         * list.delimiter = ')';\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._delimiter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"suffix\", {\n        get: function () {\n            return this._suffix;\n        },\n        set: function (value) {\n            this._suffix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"enableHierarchy\", {\n        /**\n         * Gets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @returns {boolean} `true` if hierarchical structure is enabled; otherwise, `false`.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items associated with the items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the hierarchical structure status\n         * let enableHierarchy: boolean = list.enableHierarchy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._enableHierarchy;\n        },\n        /**\n         * Sets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @param {boolean} value The boolean flag to enable or disable hierarchical structure.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the hierarchical structure status\n         * list.enableHierarchy = true;\n         * / Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._enableHierarchy = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"alignment\", {\n        /**\n         * Gets the text alignment of the list.\n         *\n         * @returns {PdfTextAlignment} The text alignment.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the alignment of the list\n         * let listAlignment: PdfTextAlignment = list.alignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._alignment;\n        },\n        /**\n         * Sets the text alignment of the list.\n         *\n         * @param {PdfTextAlignment} value The text alignment to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the alignment for the list\n         * list.alignment = PdfTextAlignment.left;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._alignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"items\", {\n        /**\n         * Gets the item collection of the list.\n         *\n         * @returns {PdfListItemCollection} The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the item collection\n         * let collection: PdfListItemCollection = list.items;\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._itemCollection;\n        },\n        /**\n         * Sets the item collection of the list.\n         *\n         * @param {PdfListItemCollection} value The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Sets the item collection\n         * list.items = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._itemCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"_markerRightToLeft\", {\n        get: function () {\n            return this._alignment === PdfListMarkerAlignment.right;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfList.prototype.draw = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPage) {\n            if (arg1._isNew) {\n                return this._drawInternal(arg1, arg2, arg3, arg4, arg5, arg6);\n            }\n            else {\n                (new _PdfListLayouter(this)).layout(arg1.graphics, [arg2, arg3, 0, 0]);\n            }\n        }\n        else {\n            (new _PdfListLayouter(this)).layout(arg1, [arg2, arg3, 0, 0]);\n        }\n    };\n    PdfList.prototype._drawInternal = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        var parameter = new _PdfLayoutParameters();\n        parameter._page = arg1;\n        if (arg4 === null || typeof arg4 === 'undefined') {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = new PdfLayoutFormat();\n        }\n        else if (typeof arg4 === 'number') {\n            parameter._bounds = [arg2, arg3, arg4, arg5];\n            if (arg6) {\n                parameter._format = arg6;\n            }\n            else {\n                parameter._format = new PdfLayoutFormat();\n            }\n        }\n        else if (arg4 instanceof PdfLayoutFormat) {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = arg4;\n        }\n        return this._layout(parameter);\n    };\n    PdfList.prototype._layout = function (parameter) {\n        return (new _PdfListLayouter(this)).layoutInternal(parameter);\n    };\n    return PdfList;\n}());\nexport { PdfList };\n/**\n * Represents an ordered list in a PDF document.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define an array of strings representing items to be added\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the ordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfOrderedList = /** @class */ (function (_super) {\n    __extends(PdfOrderedList, _super);\n    function PdfOrderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        _this._startNumber = 1;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfNumberStyle.numeric;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfNumberStyle.numeric;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfOrderedList.prototype, \"style\", {\n        /**\n         * Gets the numbering style used for the ordered list.\n         *\n         * @returns {PdfNumberStyle} The numbering style used for the ordered list.\n         *  ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the numbering style used for the ordered list\n         * let style: PdfNumberStyle = list.style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the numbering style used for the ordered list.\n         *\n         * @param {PdfNumberStyle} value The numbering style used for the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         *  // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Define a style for the list\n         * let style: PdfNumberStyle = PdfNumberStyle.lowerLatin;\n         * // Set the numbering style for the list items\n         * list.style = style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfOrderedList.prototype, \"startNumber\", {\n        /**\n         * Gets the starting number used for the ordered list.\n         *\n         * @returns {number} The starting number of the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the starting number used for the ordered list\n         * let startnumber: number = list.startNumber;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._startNumber;\n        },\n        /**\n         * Sets the starting number to be used for the ordered list.\n         *\n         * @param {number} value The starting number to set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the starting number for the ordered list\n         * list.startNumber = 5;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('Start number should be greater than 0.');\n            }\n            this._startNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfOrderedList.prototype._getNumber = function () {\n        return _convertNumber(this._startNumber + this._currentIndex, this._style);\n    };\n    return PdfOrderedList;\n}(PdfList));\nexport { PdfOrderedList };\n/**\n * Represents the Unordered lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define the items in the unordered list\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Create an instance of PdfListItemCollection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of PdfUnorderedList\n * let list: PdfUnorderedList = new PdfUnorderedList();\n * // Draw the unordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfUnorderedList = /** @class */ (function (_super) {\n    __extends(PdfUnorderedList, _super);\n    function PdfUnorderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfUnorderedListStyle.disk;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfUnorderedListStyle.disk;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUnorderedList.prototype, \"style\", {\n        /**\n         * Gets the style used for the unordered list.\n         *\n         * @returns {PdfUnorderedListStyle} The style used for the unordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Get the style used for the unordered list\n         * let style: PdfUnorderedListStyle = list.style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style used for the unordered list.\n         *\n         * @param {PdfUnorderedListStyle} value The style to set for the unordered list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Initialize a style for the unordered list\n         * let style: PdfUnorderedListStyle = PdfUnorderedListStyle.circle;\n         * // Set the style for the unordered list items\n         * list.style = style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUnorderedList.prototype._getStyledText = function () {\n        switch (this._style) {\n            case PdfUnorderedListStyle.disk:\n                return '\\x6C';\n            case PdfUnorderedListStyle.square:\n                return '\\x6E';\n            case PdfUnorderedListStyle.asterisk:\n                return '\\x5D';\n            case PdfUnorderedListStyle.circle:\n                return '\\x6D';\n            default:\n                return '';\n        }\n    };\n    PdfUnorderedList.prototype._draw = function (graphics, x, y, brush, pen) {\n        var template = new PdfTemplate([0, 0, this._size[0], this._size[1]], graphics._crossReference);\n        var bounds = [0, 0, 0, 0];\n        if (pen) {\n            bounds[0] = bounds[0] + pen._width;\n            bounds[1] = bounds[1] + pen._width;\n        }\n        template.graphics.drawString(this._getStyledText(), this._unicodeFont, bounds, pen, brush);\n        graphics.drawTemplate(template, { x: x, y: y, width: template.size[0], height: template.size[1] });\n    };\n    return PdfUnorderedList;\n}(PdfList));\nexport { PdfUnorderedList };\nvar _PdfListInfo = /** @class */ (function () {\n    function _PdfListInfo(list, index, number) {\n        this._list = list;\n        this._index = index;\n        this._number = number;\n    }\n    return _PdfListInfo;\n}());\nexport { _PdfListInfo };\nvar _PdfListLayouter = /** @class */ (function () {\n    function _PdfListLayouter(element) {\n        this._indent = 0;\n        this._information = [];\n        this._markerMaxWidth = 0;\n        this._finish = false;\n        this._usePaginateBounds = true;\n        this._resultHeight = 0;\n        this._size = [0, 0];\n        this._index = 0;\n        this._element = element;\n    }\n    _PdfListLayouter.prototype.layout = function (graphics, bounds) {\n        this._graphics = graphics;\n        var parameter = new _PdfLayoutParameters();\n        parameter._bounds = bounds;\n        parameter._format = new PdfLayoutFormat();\n        parameter._format.layout = PdfLayoutType.onePage;\n        this.layoutInternal(parameter);\n    };\n    _PdfListLayouter.prototype.layoutInternal = function (parameter) {\n        this._currentPage = parameter._page;\n        this._bounds = parameter._bounds.slice();\n        if (this._currentPage) {\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            this._graphics = this._currentPage.graphics;\n        }\n        var pageResult = new _PageLayoutResult();\n        pageResult.broken = false;\n        pageResult.y = this._bounds[1];\n        this._curList = this._element;\n        this._indent = this._curList.indent;\n        this._setCurrentParameters(this._curList);\n        if (!this._curList.brush) {\n            this._currentBrush = new PdfBrush([0, 0, 0]);\n        }\n        if (!this._curList.font) {\n            this._currentFont = this._curList._defaultFont;\n        }\n        if (this._curList instanceof PdfOrderedList) {\n            this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n        }\n        var useOnPage = parameter._format.layout === PdfLayoutType.onePage;\n        while (!this._finish) {\n            pageResult.y = this._bounds[1];\n            pageResult = this._layoutOnPage(pageResult);\n            if (useOnPage) {\n                break;\n            }\n            if (this._currentPage && !this._finish) {\n                this._currentPage = this._getNextPage(this._currentPage);\n            }\n            this._graphics = this._currentPage.graphics;\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            if (parameter._format && parameter._format.usePaginateBounds && this._usePaginateBounds) {\n                this._bounds = parameter._format._paginateBounds;\n            }\n        }\n        this._information = [];\n        var finalBounds = [this._bounds[0], pageResult.y, this._bounds[2], this._resultHeight];\n        var result = new PdfLayoutResult(this._currentPage, finalBounds);\n        if (this._currentFormat) {\n            this._currentFormat._isList = false;\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._layoutOnPage = function (pageResult) {\n        var height = 0;\n        var resultantHeight = 0;\n        var y = this._bounds[1];\n        var x = this._bounds[0];\n        this._size = [this._bounds[2] - this._indent, this._bounds[3]];\n        while (true) { // eslint-disable-line\n            for (; this._index < this._curList.items.count; ++this._index) {\n                var item = this._curList.items.at(this._index);\n                var result = this._drawItem(pageResult, x, this._curList, this._index, this._indent, this._information, item, height, y);\n                pageResult = result.pageResult;\n                height = result.height;\n                y = result.y;\n                resultantHeight += height;\n                if (pageResult.broken) {\n                    return pageResult;\n                }\n                pageResult.markerWrote = false;\n                if (item.subList && item.subList.items.count > 0) {\n                    if (this._curList instanceof PdfOrderedList) {\n                        var oList = this._curList;\n                        oList._currentIndex = this._index;\n                        var info = new _PdfListInfo(this._curList, this._index, oList._getNumber());\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        info._markerWidth = this._markerMaxWidth;\n                        this._information.push(info);\n                    }\n                    else {\n                        var info = new _PdfListInfo(this._curList, this._index);\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        this._information.push(info);\n                    }\n                    this._curList = item.subList;\n                    if (this._curList instanceof PdfOrderedList) {\n                        this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n                    }\n                    this._index = -1;\n                    this._indent += this._curList.indent;\n                    this._size[0] = this._size[0] - this._curList.indent;\n                    this._setCurrentParameters(item);\n                    this._setCurrentParameters(this._curList);\n                }\n            }\n            if (this._information.length === 0) {\n                this._resultHeight = resultantHeight;\n                this._finish = true;\n                break;\n            }\n            var listInfo = this._information.pop();\n            this._index = listInfo._index + 1;\n            this._indent -= this._curList.indent;\n            this._size[0] = this._size[0] + this._curList.indent;\n            this._markerMaxWidth = listInfo._markerWidth;\n            this._currentBrush = listInfo._brush;\n            this._currentPen = listInfo._pen;\n            this._currentFont = listInfo._font;\n            this._currentFormat = listInfo._format;\n            this._curList = listInfo._list;\n        }\n        return pageResult;\n    };\n    _PdfListLayouter.prototype._drawItem = function (pageResult, x, curList, index, indent, info, item, height, y) {\n        var layouter = new _PdfStringLayouter();\n        var result;\n        var textIndent = curList.textIndent;\n        var posY = height + y;\n        var posX = indent + x;\n        var itemHeight = 0;\n        var itemSize = this._size;\n        var text = item.text;\n        var markerText;\n        var itemBrush = this._currentBrush;\n        var markerHeight = 0;\n        if (item.brush) {\n            itemBrush = item.brush;\n        }\n        var itemPen = this._currentPen;\n        if (item.pen) {\n            itemPen = item.pen;\n        }\n        var itemFont = this._currentFont;\n        if (item.font) {\n            itemFont = item.font;\n        }\n        var itemFormat = this._currentFormat;\n        if (item.stringFormat) {\n            itemFormat = item.stringFormat;\n        }\n        if ((this._size[0] <= 0 || this._size[0] < itemFont.size) && this._currentPage) {\n            throw new Error('There is not enough space to layout list.');\n        }\n        this._size[1] = this._size[1] - height;\n        if (pageResult.broken) {\n            text = pageResult.itemText;\n            markerText = pageResult.markerText;\n        }\n        var canDrawMarker = true;\n        var markerResult = this._createMarkerResult(index, curList, info, item);\n        if (markerResult) {\n            if (curList instanceof PdfOrderedList) {\n                posX += this._markerMaxWidth;\n                pageResult.markerWidth = this._markerMaxWidth;\n            }\n            else {\n                posX += markerResult._actualSize[0];\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            markerHeight = markerResult._actualSize[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n            if (markerResult._empty) {\n                canDrawMarker = false;\n            }\n        }\n        else {\n            posX += curList._size[0];\n            pageResult.markerWidth = curList._size[0];\n            markerHeight = curList._size[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n        }\n        if (!markerText || markerText === '') {\n            canDrawMarker = true;\n        }\n        if (text && canDrawMarker) {\n            itemSize = this._size;\n            itemSize[0] = itemSize[0] - pageResult.markerWidth;\n            if (item.textIndent === 0) {\n                itemSize[0] = itemSize[0] - textIndent;\n            }\n            else {\n                itemSize[0] = itemSize[0] - item.textIndent;\n            }\n            if ((itemSize[0] <= 0 || itemSize[0] < itemFont.size) && this._currentPage) {\n                throw new Error('Not enough space to layout the text. The marker is too long or there is not enough space to draw it.');\n            }\n            var itemX = posX;\n            if (!curList._markerRightToLeft) {\n                if (item.textIndent === 0) {\n                    itemX += textIndent;\n                }\n                else {\n                    itemX += item.textIndent;\n                }\n            }\n            else {\n                itemX -= pageResult.markerWidth;\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    itemX -= indent;\n                }\n            }\n            if (!this._currentPage && itemFormat) {\n                itemFormat = Object.assign({}, itemFormat);\n                itemFormat.alignment = PdfTextAlignment.left;\n            }\n            result = layouter._layout(text, itemFont, itemFormat, itemSize);\n            var rect = [itemX, posY, itemSize[0], itemSize[1]];\n            this._graphics._drawStringLayoutResult(result, itemFont, itemPen, itemBrush, rect, itemFormat);\n            y = posY;\n            itemHeight = result._actualSize[1];\n        }\n        height = (itemHeight < markerHeight) ? markerHeight : itemHeight;\n        if ((result && result._remainder && result._remainder !== '') ||\n            (markerResult && markerResult._remainder && markerResult._remainder !== '') ||\n            !canDrawMarker) {\n            y = 0;\n            height = 0;\n            if (result) {\n                pageResult.itemText = result._remainder;\n                if (result._remainder === item.text) {\n                    canDrawMarker = false;\n                }\n            }\n            else {\n                if (canDrawMarker) {\n                    pageResult.itemText = undefined;\n                }\n                else {\n                    pageResult.itemText = item.text;\n                }\n            }\n            if (markerResult) {\n                pageResult.markerText = markerResult._remainder;\n            }\n            else {\n                pageResult.markerText = undefined;\n            }\n            pageResult.broken = true;\n            pageResult.y = 0;\n            this._bounds[1] = 0;\n        }\n        else {\n            pageResult.broken = false;\n        }\n        if (result) {\n            pageResult.markerX = posX;\n            if (itemFormat) {\n                switch (itemFormat.alignment) {\n                    case PdfTextAlignment.right:\n                        pageResult.markerX = posX + itemSize[0] - result._actualSize[0];\n                        break;\n                    case PdfTextAlignment.center:\n                        pageResult.markerX = posX + (itemSize[0] / 2) - (result._actualSize[0] / 2);\n                        break;\n                }\n            }\n            if (curList._markerRightToLeft) {\n                pageResult.markerX += result._actualSize[0];\n                if (item.textIndent === 0) {\n                    pageResult.markerX += textIndent;\n                }\n                else {\n                    pageResult.markerX += item.textIndent;\n                }\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    pageResult.markerX -= indent;\n                }\n            }\n        }\n        if (canDrawMarker && !pageResult.markerWrote) {\n            pageResult.markerWrote = this._drawMarker(curList, item, markerResult, posY, pageResult.markerX);\n            if (curList instanceof PdfOrderedList) {\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            else {\n                pageResult.markerWidth = curList._size[0];\n            }\n        }\n        return { pageResult: pageResult, height: height, y: y };\n    };\n    _PdfListLayouter.prototype._createMarkerResult = function (index, curList, info, item) {\n        if (curList instanceof PdfOrderedList) {\n            return this._createOrderedMarkerResult(curList, item, index, info, false);\n        }\n        else {\n            return this._createUnorderedMarkerResult(curList, item);\n        }\n    };\n    _PdfListLayouter.prototype._drawMarker = function (curList, item, markerResult, posY, posX) {\n        if (curList instanceof PdfOrderedList) {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n                this._drawOrderedMarker(curList, markerResult, item, posX, posY);\n            }\n        }\n        else {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n            }\n            this._drawUnorderedMarker(curList, markerResult, item, posX, posY);\n        }\n        return true;\n    };\n    _PdfListLayouter.prototype._drawUnorderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        if (markerResult) {\n            curList._size = markerResult._actualSize;\n            curList._unicodeFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n            curList._draw(this._graphics, posX - markerResult._actualSize[0], posY, markerBrush, markerPen);\n        }\n        else {\n            curList._size = [markerFont.size, markerFont.size];\n            curList._draw(this._graphics, posX - markerFont.size, posY, markerBrush, markerPen);\n        }\n    };\n    _PdfListLayouter.prototype._drawOrderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        var rect = [posX - this._markerMaxWidth, posY, this._markerMaxWidth, markerResult._actualSize[1]];\n        var markerFormat = this._setMarkerStringFormat(curList, this._getMarkerFormat(curList, item));\n        this._graphics._drawStringLayoutResult(markerResult, markerFont, markerPen, markerBrush, rect, markerFormat);\n    };\n    _PdfListLayouter.prototype._setCurrentParameters = function (element) {\n        if (element.brush) {\n            this._currentBrush = element.brush;\n        }\n        if (element.pen) {\n            this._currentPen = element.pen;\n        }\n        if (element.font) {\n            this._currentFont = element.font;\n        }\n        if (element.stringFormat) {\n            this._currentFormat = element.stringFormat;\n            if (element instanceof PdfList) {\n                this._currentFormat._isList = true;\n            }\n        }\n    };\n    _PdfListLayouter.prototype._getMarkerMaxWidth = function (list, infromation) {\n        var width = -1;\n        for (var i = 0; i < list.items.count; i++) {\n            var result = this._createOrderedMarkerResult(list, list.items.at(i), i + list.startNumber, infromation, true);\n            if (width < result._actualSize[0]) {\n                width = result._actualSize[0];\n            }\n        }\n        return width;\n    };\n    _PdfListLayouter.prototype._createUnorderedMarkerResult = function (list, item) {\n        var markerFont = this._getMarkerFont(list, item);\n        var layouter = new _PdfStringLayouter();\n        var uFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n        var result = layouter._layout(list._getStyledText(), uFont, null, this._size);\n        list._size = result._actualSize;\n        if (list.pen) {\n            result._size = [result._actualSize[0] + 2 * list.pen._width, result._actualSize[1] + 2 * list.pen._width];\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._createOrderedMarkerResult = function (list, item, index, infromation, findMaxWidth) {\n        list._currentIndex = index;\n        var text = '';\n        if (list.style !== PdfNumberStyle.none) {\n            text = list._getNumber() + list.suffix;\n        }\n        if (list.enableHierarchy) {\n            var collection = infromation.slice();\n            for (var i = 0; i < collection.length; i++) {\n                var listInfo = collection[Number.parseInt(i.toString(), 10)];\n                var orderedList = listInfo._list;\n                if (!(orderedList && orderedList instanceof PdfOrderedList && orderedList.style !== PdfNumberStyle.none)) {\n                    break;\n                }\n                text = listInfo._number + orderedList.delimiter + text;\n                if (!orderedList.enableHierarchy) {\n                    break;\n                }\n            }\n        }\n        var layouter = new _PdfStringLayouter();\n        var font = this._getMarkerFont(list, item);\n        var format = this._getMarkerFormat(list, item);\n        var markerSize = [0, 0];\n        if (!findMaxWidth) {\n            markerSize[0] = this._markerMaxWidth;\n            format = this._setMarkerStringFormat(list, format);\n        }\n        return layouter._layout(text, font, format, markerSize);\n    };\n    _PdfListLayouter.prototype._setMarkerStringFormat = function (list, format) {\n        if (format) {\n            format = Object.assign({}, format);\n        }\n        else {\n            format = new PdfStringFormat();\n        }\n        if (!list.stringFormat) {\n            format.alignment = PdfTextAlignment.right;\n            if (list._markerRightToLeft) {\n                format.alignment = PdfTextAlignment.left;\n            }\n        }\n        if (!this._currentPage && format) {\n            format = Object.assign({}, format);\n            format.alignment = PdfTextAlignment.left;\n        }\n        return format;\n    };\n    _PdfListLayouter.prototype._getMarkerFont = function (list, item) {\n        var markerFont = list.font;\n        if (!markerFont) {\n            markerFont = item.font;\n            if (!markerFont) {\n                markerFont = this._currentFont;\n            }\n        }\n        list.font = markerFont;\n        return markerFont;\n    };\n    _PdfListLayouter.prototype._getMarkerFormat = function (list, item) {\n        var markerFormat = list.stringFormat;\n        if (!markerFormat) {\n            markerFormat = item.stringFormat;\n            if (!markerFormat) {\n                markerFormat = this._currentFormat;\n            }\n        }\n        return markerFormat;\n    };\n    _PdfListLayouter.prototype._getMarkerPen = function (list, item) {\n        var markerPen = list.pen;\n        if (!markerPen) {\n            markerPen = item.pen;\n            if (!markerPen) {\n                markerPen = this._currentPen;\n            }\n        }\n        return markerPen;\n    };\n    _PdfListLayouter.prototype._getMarkerBrush = function (list, item) {\n        var markerBrush = list.brush;\n        if (!markerBrush) {\n            markerBrush = item.brush;\n            if (!markerBrush) {\n                markerBrush = this._currentBrush;\n            }\n        }\n        return markerBrush;\n    };\n    _PdfListLayouter.prototype._getNextPage = function (page) {\n        var document = page._crossReference._document;\n        if (page._pageIndex < document.pageCount - 1) {\n            return document.getPage(page._pageIndex + 1);\n        }\n        else {\n            return document.addPage();\n        }\n    };\n    return _PdfListLayouter;\n}());\nexport { _PdfListLayouter };\n"],"names":["_toUnsigned","value","bits","Math","pow","_toSigned16","_toSigned32","_copyRange","target","at","source","start","end","length","max","min","i","j","Number","parseInt","toString","_checkType","imageData","header","_getDecoder","decoder","_JpegDecoder","Error","_PngDecoder","_checkRotation","page","height","left","topValue","rotation","PdfRotationAngle","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","PdfAnnotationFlag","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","code","String","fromCharCode","charAt","isDirect","isPassword","destination","bytes","charCode","Uint8Array","_areArrayEqual","first","second","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","isJson","stringBuffer","_decodeUnicodeBytes","apply","chunkEnd","chunk","subarray","byte","codePoint","_stringToUnicodeArray","output","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decodeChunk","input","chr1","chr2","chr3","enc2","enc3","key","resultIndex","totalLength","replace","Array","indexOf","_decode","outputChunks","decodedChunk","offset","_i","outputChunks_1","set","from","_encodeChunk","isLastChunk","byte1","byte2","byte3","value1","value2","value3","value4","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","arguments","refSet","Set","_PdfDictionary","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","b","c","m","k","fBlack","_mapBorderStyle","style","token","PdfBorderStyle","dot","dashed","beveled","inset","underline","_PdfName","_mapBorderEffectStyle","PdfBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","PdfLineEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","PdfHighlightMode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","PdfBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","ref","_PdfReference","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","_PdfBaseStream","keys_1","forEach","_getStateTemplate","item","template","_PdfCheckFieldState","checked","_dictionary","stream","getRaw","PdfTemplate","_crossReference","colorName","_setMatrix","box","_content","matrix","_PdfTransformationMatrix","_translate","_rotate","_matrix","_elements","_styleToString","PdfCheckBoxStyle","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","PdfMeasurementUnit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","PdfTextMarkupAnnotationType","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_PdfGraphicsUnit","_mapRubberStampIcon","iconString","icon","PdfRubberStampAnnotationIcon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","PdfPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","PdfAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","PdfAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","PdfAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","PdfAnnotationIntent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","PdfFontStyle","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_encodeValue","hex","_getCommentsOrReview","annotation","isReview","reviewHistory","comments","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","PdfFormFieldVisibility","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","_PdfStream","_defaultToString","Object","prototype","call","_obtainFontDetails","form","widget","field","fontSize","font","defaultAppearance","fontFamily","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","regular","_getFontStyle","includes","_mapFont","PdfStandardFont","PdfFontFamily","helvetica","_circleCaptionFont","fontFamilyString","position","PdfLineAnnotation","_isLoaded","courier","symbol","timesRoman","zapfDingbats","PdfCjkStandardFont","PdfCjkFontFamily","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","PdfTrueTypeFont","PdfAnnotation","_type","_PdfAnnotationType","widgetAnnotation","PdfField","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","_checkInkPoints","inkPointsCollection","previousCollection","_obtainDestination","destinationArray","_document","bottom","right","zoom","pageNumber","document_1","leftValue","angle0","PdfDestination","_index","_setValidation","PdfDestinationMode","fitR","fitH","fitToPage","_updateBounds","bounds","_bounds","_page","_pageSettings","pageSettings","pageBounds","margins","top","cropBoxOrMediaBox","_getCropOrMediaBox","_decodeText","isColorSpace","startsWith","endsWith","codeUnit","_getSize","_stringToBigEndianBytes","_convertNumber","intArabic","numberStyle","PdfNumberStyle","numeric","lowerLatin","_arabicToLetter","lowerRoman","_arabicToRoman","upperLatin","upperRoman","retval","romanNumerals_1","_a","numeral","arabic","remainder","floor","_appendChar","_isNullOrUndefined","_compressStream","isExport","getString","dataArray","sw","CompressedStreamWriter","write","close","getCompressedString","_clearPrimitiveCaches","nameCache","create","cmdCache","refCache","_isName","_isCommand","command","_PdfCommand","PdfLineIntent","PathPointType","PdfLineCaptionType","PdfCrossReferenceType","PdfTextAlignment","PdfCircleMeasurementType","DataFormat","PdfFormFieldsTabOrder","_FieldFlag","_SignatureFlag","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","_PdfColorSpace","PdfUnorderedListStyle","PdfLayoutType","PdfLayoutBreakType","PdfListMarkerAlignment","_PdfStreamWriter","this","_newLine","_whiteSpace","_stream","_writeOperator","_saveGraphicsState","_restoreGraphicsState","_writeComment","_setGraphicsState","_modifyCtm","_toString","_modifyTM","_setColorSpace","arg2","arg3","colorSpaceName","rgb","cmyk","grayScale","_setColor","forStroking","_appendRectangle","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","_setTextScaling","textScaling","_closePath","_startNextLine","_setLeading","leading","_write","_showText","_writeText","string","builder","data","_escapeSymbols","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x3","y3","_setTextRenderingMode","renderingMode","_setCharacterSpacing","charSpacing","_setWordSpacing","wordSpacing","_showNextLineText","unicode","_setLineDashPattern","pattern","patternOffset","tempPattern","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_beginMarkupSequence","_endMarkupSequence","_clear","_bytes","currentData","PdfStringFormat","arg1","horizontalScalingFactor","rightToLeft","_wordWrapType","word","_isList","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","characterSpacing","lineSpacing","clipPath","firstLineIndent","_internalParagraphIndent","measureTrailingSpaces","noClip","defineProperty","enumerable","configurable","_pdfSubSuperScript","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","_PdfFontMetrics","_lineGap","_getAscent","format","_ascent","_getDescent","_descent","_getLineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","_size","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","widths","_this","_itemAt","_toArray","_CjkWidthTable","defaultWidth","_defaultWidth","_from","_to","_appendToArray","_add","_CjkWidth","_CjkSameWidth","to","_widthFrom","_widthTo","_width","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","_initialize","_doLayout","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lineResult","lines","line","_peekLine","lineIndent","_getLineIndent","_layoutLine","numSymbolsInserted","returnedValue","_copyToResult","success","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","_addToLineResult","newLineBreak","curLine","curIndent","reader","_peekWord","_length","_position","curLineWidth","_getWrapType","wordOnly","_remainder","_peek","_wordWrap","character","stringValue","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","_empty","textValue","text2","_tab","_spaces","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_readInt32","setValue","_lowestPosition","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","getValue","shift","version","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","_getCmapEncoding","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","id","_firstCode","_entryCount","_fontFamily","_postScriptName","obj","containsKey","glyphCode","platformID","encodingID","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","sort","a","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","charKeys","usedTablesSize","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte4","_writeBytes","buff","i_1","written","read","_createInternals","obj1","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_UnicodeTrueTypeFont","_nameString","_isEmbedFont","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapBeginRange","_cmapEndRange","_cmapSuffix","_fontSize","_fontString","_Initialize","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","_fontProgram","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_ttfReader","_ttfMetrics","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_isBold","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","_generateCmap","_toHexString","isCaseChange","s","last","middlePart","nextRange","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","_ArabicShapeRenderer","_arabicCharTable","_alef","_alefHamza","_alefHamzaBelow","_alefMadda","_lam","_hamza","_zeroWidthJoiner","_hamzaAbove","_hamzaBelow","_wawHamza","_yehHamza","_waw","_alefsura","_yeh","_farsiYeh","_shadda","_madda","_lwa","_lwawh","_lwawhb","_lwawm","_bwhb","_fathatan","_superalef","_vowel","_arabicMapTable","Map","_getCharacterShape","_shape","shapeText","_doShape","level","str","next","previous","_ArabicShape","present","_ligature","shapeCount","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_shapeVowel","_Bidirectional","_indexes","_indexLevels","_mirroringShape","_update","_doMirrorShaping","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","sIndex","eIndex","odd","even","_reArrange","pstart","pend","temp","_textOrder","_rtlCharacterTypes","L","lre","lro","R","AL","rle","rlo","pdf","EN","ES","ET","AN","CS","nsm","BN","B","S","WS","ON","_charTypes","_getCharacterCode","_doVisualOrder","_levels","characterCodes","_setDefaultLevels","_setLevels","_updateLevels","_result","_getEmbeddedCharactersLength","preview","preType","_checkEmbeddedCharacters","startType","endType","charType","_checkEuropeanDigits","_checkArabicCharacters","_checkEuropeanNumberSeparator","_checkEuropeanNumberTerminator","l","_getLength","_checkOtherNeutrals","_checkOtherCharacters","pst","_checkCharacters","validSet","t","lt","tt","rt","_RtlRenderer","_openBracket","_closeBracket","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","_addCharacter","PdfFont","_style","_fontMetrics","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","measureString","arg4","arg5","temparg2","layoutArea","temparg3","_applyFormatSettings","realWidth","_checkStyle","_initializeInternals","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","_createFontInternal","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","_getHelveticaMetrics","_getCourierMetrics","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontMetrics","fontBox","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","fontBoxItalic","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","PdfPath","pathTypes","_points","_pathTypes","_isRoundedRectangle","_fillMode","winding","_isStart","_isXps","_brush","_pen","addPath","_addPath","pathPoints","slice","addLine","_addPoints","_addLines","linePoints","_addPoint","startIndex","endIndex","lastPoint","addArc","startAngle","sweepAngle","list","bezier","addRectangle","startFigure","closeFigure","addPolygon","newPoints","addEllipse","addBezier","startX","startY","firstX","firstY","secondX","secondY","endX","endY","_addBezierPoints","pointsCollection","inner1","inner2","addPie","closePath","closeAllFigures","pointType","_getBounds","xmin","xmax","ymin","ymax","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","graphics","needSave","save","translateTransform","drawImage","restore","horizontalResolution","ucX","_PdfUnitConvertor","ucY","_convertUnits","pixel","PdfGraphics","content","xref","_pendingResource","_hasResourceReference","PdfPage","_source","_template","_resourceObject","_sw","_clipBounds","_m","_resourceMap","other","_transparencies","_setTransparencyData","PdfGraphicsState","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_graphicsState","_doRestore","pop","_transformationMatrix","drawRectangle","_setPenBrush","_drawGraphicsPath","pen","brush","drawBezier","_stateControl","drawPie","_constructPiePath","drawPolygon","drawEllipse","_constructArcPath","drawArc","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","keyName","isNew","_updateImageResource","resource","drawTemplate","_isExported","_isResourceExport","_importStream","scaleX","scaleY","needScale","trunc","needTransform","_origin","_isAnnotationTemplate","_needScale","scaleApplied","templateMatrix","templateBox","templateScaleX","templateScaleY","roundScaleX","roundScaleY","_scale","keyName_1","ref_1","isReference","_resources","base","_getNextReference","_processResources","_updatePendingResource","_reference","_updateFontResource","image","_imageStream","_maskStream","_maskReference","internal","drawPath","path","_buildUpPath","fillMode","drawRoundedRectangle","radius","diameter","arc","sweep","_writePen","_dashPattern","setPattern","_dashOffset","_lineJoin","_lineCap","_miterLimit","_color","drawString","layouter","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_mediaBoxUpperRightBound","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","hasResource","PdfPen","PdfBrush","layoutRectangle","shouldClip","clipRegion","clipBounds","middle","setClip","isItalic","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_skewTransform","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","_pageIndex","addPage","tm","_TextRenderingMode","fill","setLineWidth","fillStroke","stroke","fontName","isBoldFont","toLocaleLowerCase","isBold","clipFlag","cs","ws","ttfFont","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","useWordSpace","_justifyLine","rtlRender","blocks","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","center","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justify","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","drawLine","textSize","layoutedRectangle","needClosing","isBrush","isPen","alternate","_initializeCoordinates","cbox","location_1","needTransformation","mbox","_cropBox","scaleTransform","_multiply","rotateTransform","setTransparency","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_key","tkey","tdata","_clipTranslateMargins","angleX","angleY","_getSkewTransform","_skew","_Matrix","tanA","tan","_degreeToRadians","tanB","skew","degreesX","arg6","_clone","_transform","_offsetX","_offsetY","_g","_dashStyle","flat","miter","_proportions","_updateProportions","_convertFromPixels","_convertToPixels","_XmlWriter","isAppearance","_bufferText","_namespaceStack","_elementStack","_currentState","_skipNamespace","_Namespace","_XmlElement","_set","_attributeStack","_writeStartDocument","standalone","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_writeEndElementInternal","_prefix","_localName","splice","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_destroy","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_writeStartNamespaceDeclaration","inAttributeValue","_kind","_namespaceUri","_addNamespace","ns","kind","_lookupNamespaceIndex","existingNsIndex","isValid","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","test","previousTop","_ExportHelper","_asPerSpecification","_fileName","_formKey","_exportEmptyFields","_groupReferences","_groupHolders","_richTextPrefix","_table","_fields","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","export","_getEncodedFontDictionary","fieldName","_getEncodedValue","selectedValue","_getExportValue","PdfListBoxField","PdfComboBoxField","_obtainSelectedValue","radioButton","PdfRadioButtonListField","selectedIndex","options","isNaN","PdfCheckBoxField","_getAppearanceStateValue","itemAt","_defaultIndex","_exportFormFieldData","replaceValue","PdfTextBoxField","multiLine","PdfListField","_getAnnotationType","subtype","_getValue","primitive","_getValidString","colorArray","_getColor","kids","kid","structure","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","root","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","holder","updatedString","_fontType","_baseFontEncoding","_fontEncoding","_fontName","_addReferenceToGroup","_handlePopup","annotations","annotationDictionary","popupReference","popup","popupAnnotation","_parseAnnotation","_annotations","_parsedAnnotations","_importField","richTextValue","_getFieldIndex","fieldAt","_importFieldData","selectedValues_1","indexes_1","options_1","_options","option","AP","lowerCase","_containsExportValue","_kidsCount","_checkSelected","asEntry","normalTemplate","_dispose","exportAppearance","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","fileName","_exportAnnotations","_exportFormFields","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","_getElements","flag_1","_writeFieldName","hasId","_root","parentElements","newTable","pageIndex","PdfFileLinkAnnotation","PdfTextWebLinkAnnotation","PdfDocumentLinkAnnotation","PdfUriAnnotation","_writeAnnotationData","hasAppearance","borderEffect","_writeDictionary","isBorderStyle","_writeAttribute","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","vertices","elementCount","_writeRawData","defaultStyle","inkList","textWriter","_writeAppearanceDictionary","_writeObject","isNewReference","_writePrefix","_writeArray","streamDictionary","_getFormatedString","isParsing","_writeColor","attribute","isLowerCase","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","skip","name_1","parentElement","dataValues","textContent","name_2","richText","innerHTML","hasAttributes","_getAnnotationDictionary","_isImported","_ref","_comments","isValidType","points_1","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","flagType","_allowImportCustomData","children","this_1","childElement","popupDictionary","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","inkChild","inkChildElement","points_2","pointsArray_1","_addStreamData","parent","raw","_addFileAttachment","_addSound","soundStream","_PdfContentStream","soundReference","fileDictionary","fileStream","param","embeddedFile","fileReference","innerText","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getName","_getBoolean","_getData","isImage","_isCompress","Length","Filter","_addArrayElements","name_3","floatValue","intValue","bool","measurement","area","distance","xformat","measureDictionary","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","beginLineStyle","endLineStyle","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFontEncoding","fontEncoding","differences","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","_isImport","_isColorSpace","_isGroupingSupport","isAnnotationAdded","_exportAnnotation","_convertToJson","clear","rcValue","rectArray","_writeInkList","_writeVertices","styleTable","textStyle","bytes_1","vertice","json","details","parentTable","appearanceTable","_writeTable","_convertToJsonArray","isTabSpace","_hasUnicodeCharacters","dataTable","streamTable","baseStream","isImageStream","_initialized","_cipher","streamLength","bufferLength","flateStream","map","unicodeRegex","some","_parseJson","stringData","JSON","parse","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","page_1","pageAnnotation","pageAnnotationKeys","annotationKeys","annotations_1","annotation_1","outColor","dataStream","_addLinePoints","color_1","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","count_1","styleKey","styleValue","gestureKeys","gesture","interactionKeys","convertString","stringify","objectNumber","generationNumber","dashArray","dash","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","unicodeData","dataKeys","byteString","_parseStreamElements","_pendingResources","_templateOriginalSize","_isReadOnly","_writeTransformation","_isTemplateGraphics","_exportStream","jsonDocument","resourceTable","_appearance","hasCrossReference","isResourceExport","resourceDictionary","PdfAction","_next","PdfGoToAction","arg","_destination","PdfFieldActions","_field","_mouseEnter","_getPdfAction","_updateAction","_mouseLeave","_mouseUp","_mouseDown","_gotFocus","_lostFocus","action","_destinationMode","location","_enableGrouping","_isDuplicatePage","_visible","_isTransparentBackColor","_isTransparentBorderColor","_defaultFont","_appearanceFont","_defaultItemFont","_flatten","_isUpdating","_kids","_form","names","_actualName","_mappingName","mappingName","_alternateName","toolTip","_hasFlags","visibleNotPrintable","flagValue","_visibility","visibility","rotate","_defaultAppearance","_da","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","_parseBorderColor","_updateBorderColor","_fieldFlags","required","border","PdfInteractiveBorder","PdfButtonField","borderStyle","_dash","_updateBorder","rotationAngle","noExport","index1","_tabIndex","tabOrder","manual","_tabOrder","annotationCollection","PdfAnnotationCollection","_annotationIndex","widgetRef","_gray","_silver","_white","_black","mkDictionary","_mkDictionary","hasTransparency","_hasBackColor","backColor","bgArray","_hasBorderColor","borderColor","BC","bsDictionary","W","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","itemsCount","_getPage","_removeAnnotation","parsedItems_1","removeItem","da","bs","_checkFieldFlag","_initializeFont","fontDict","_drawRectangularControl","parameter","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","_drawRadioButton","checkSymbol","unchecked","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","outward","foreBrush","_drawCheckBox","inflateValue","shadowColor","leftTop","rightBottom","_blackBrush","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","state_1","size_1","z","_addToKid","currentIndex","_drawTemplate","_addToOptions","_listValues","_value","_pdfFont","_addAppearance","_rotateTextBox","_checkIndex","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","_autoResizeText","_defaultValue","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_maxLength","maxLength","_isAutoResize","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","appearanceStream","_PaintParameter","backcolor","insertSpaces","pdfFont","stringFormat","enableGrouping","_drawTextBox","scrollable","multiline","scroll","startlocation","isAutoFontSize","_actions","_assignText","fieldDictionary","pushButton","pressed","isPressed","isSizeZero","font_1","previousFont","currentFont","textWidth","_drawPressedButton","_drawButton","PdfStateItem","V","AS","_drawAppearance","_styleText","normalChecked","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","_selectedIndex","_retrieveOptionValue","_obtainSelectedIndex","name_5","PdfRadioButtonListItem","_setField","parsedItems_2","radio","_optionValue","checkName","asName","actualValue","values_1","_tryGetIndex","values_2","indices_1","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","_getFontHeight","selectedIndexes","combo","acroForm","fontString","verticalAlignment","_drawComboBox","doubleBorderWidth","padding","itemTextBound","x_3","itemFont","widths_1","h","_drawListBox","location_2","selected","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","annot","_templateNormal","_isExport","_opacity","_isAllRotation","_popUpFont","_authorBoldFont","_lineCaptionFont","_isTransparentColor","_isRotated","_isChanged","_author","author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_caption","PdfAnnotationCaption","_cap","capType","inline","caption","cap","opacity","_subject","subject","prevRotate","_getRotationAngle","_isFlattenPopups","_ratio","getValues","setValues","assignXref","_getMediaOrCropBox","cropOrMediaBox","_getBoundsValue","_validateTemplateMatrix","isRotatedMatrix","isValidMatrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","remove","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","measure","flatten","_needInitializeGraphics","rubberStampAnnotation","PdfAngleMeasurementAnnotation","_o","radians","_drawCloudStyle","overlap","_isClockWise","sortedPoints","previousPoint","circles","circleOverlap","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","intensity","_createRectangleAppearance","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","angleRatio","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","graphicsUnit","_createMeasureDictionary","_colorToHex","col","_componentToHex","_getRotatedBounds","rotateAngle","corners","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","contentRect","_drawSubject","_flattenLoadedPopUp","_getRectangleBoundsValue","trackingHeight","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","_getPoints","polygonPoints","modifiedPoints","PdfComment","PdfPopupAnnotationCollection","_reviewHistory","_unit","_unitString","lineAnnotation","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","_appearanceTemplate","_createLineMeasureAppearance","isUpdated","boundsArray","_obtainLineBounds","updatedBounds","rectangleBounds","flattenPopups","reference_1","_isFlatten","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","lineAngle","endPoint","lineDistance","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","nativeRectangle1","ds","dic","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","leaderLineValue","_drawLine","PdfCircleAnnotation","_measureType","circleAnnotation","_createCircleMeasureAppearance","reference_2","fontsize","converter","PdfEllipseAnnotation","ellipseAnnotation","reference_3","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_5","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","pageSize","PdfPolyLineAnnotation","_beginLine","_endLine","polyLineAnnotation","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","centerX","centerY","intersection1","intersection2","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","_isEnableControlPoints","inkAnnotation","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","removeAt","inkPoints","pathPointCont","p1","p2","_getControlPoints","controlP1","controlP2","point_1","path1","path2","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","containsCropOrMediaBox","modifiedInkList","_updateInkListCollection","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","PdfPopupAnnotation","_icon","_iconString","_stateModel","_state","_open","_isReview","_isComment","_comment","_commentSecondHalf","_note","_help","_helpSecondHalf","_insert","_keySecondHalf","_newParagraph","_newParagraphSecondHalf","_paragraph","_paragraphSecondHalf","_obtainIconName","_createPopupAppearance","fileLinkAnnotation","_action","actionDictionary","_addAction","nextAction","uri","_uri","uriAnnotation","linkDict","documentLinkAnnotation","_initializePrimitive","_addDocument","_getDestination","top_3","top_4","referenceArray","referenceValue","top_5","top_6","top_7","_getNamedDestination","catalog","_catalog","_catalogDictionary","_getNamedObjectFromTree","_extractDestination","found","currentDictionary","_getProperKid","_findName","destinationReference","lowerIndex","topIndex","cmp","_stringCompare","kidsArray","_checkLimits","limits","lowerLimit","higherLimit","lowCompare","highCompare","byteArray1","commonSize","resultValue","_array","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","textWebLinkAnnotation","_url","linkSource","_get","PdfAttachmentAnnotation","fileAttachmentAnnotation","_addAttachment","fileSpecification","fileSpectDictionary","toTimeString","efileDictionary","fsReference","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","yCrop","heightCrop","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","textMarkUpColor","pdfPen","w1","h1","textMarkupType","_drawSquiggly","defaultRect","pathPointsCount","zigZag","textQuadLocation","margin","noofRect","isContainscropOrMediaBox","cropOrMediaBoxX","cropOrMediaBoxY","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","dictionary_1","PdfRubberStampAnnotation","_stampWidth","_alterRotateBounds","_stampAppearanceFont","createTemplate","templateDictionary","mMatrix","_transformBBox","_createRubberStampAppearance","innerBounds","_obtainInnerBounds","_parseStampAppearance","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","rubberFont","_drawRubberStamp","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_cropBoxValueX","_cropBoxValueY","_isContentUpdated","freeTextAnnotation","_parsedXMLData","_calloutLines","_getCalloutLinePoints","_obtainLineEndingStyle","collections","rcColor","_updateStyle","rcAlignment","_borderColor","_obtainColor","_annotationIntent","_obtainAnnotationIntent","_parseXMLData","_setPaddings","paddings","_paddings","_saveFreeTextDictionary","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","angle_1","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","rcFont","alignmentText","body","textDecoration","decorationText","_getXmlFormattedString","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","first_2","second_2","checkPaddingWithFontHeight","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","isContent","markUpText","_rcText","hasAlignment","pointY","pointX","annotationIntent","markupText","rcContent","xdocument","fontCollection","nameSpaceURI","namespaceURI","styleMap","_collectStyles","_extractStylesToInput","fontDetails","_getFontDetails","_updateFontProperties","updatedFontName","updatedFontStyle","updatedBrush","obtainFont","_fontCollection","nodeStyle","window","getComputedStyle","error","tagName","firstElementChild","nextElementSibling","propertyName","propertyValue","getPropertyValue","property","_obtainFontStyle","_parseTextAlignment","_parseFont","_parseFontSize","_parseFontWeight","_parseFontFamily","_rgbStringToArray","_parseFontStyle","_parseTextDecoration","_parseTextAlign","part","rgbString","match","concat","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","PdfRichMediaAnnotation","richMediaAnnotation","_rotationAngle","_highlightMode","_addWidget","recreateAppearance","reference_9","document_2","_backColor","_setCheckedStatus","fieldValue","_unCheckOthers","isChecked","asValue","apDictionary","keyList_1","_initializeItem","_getBorderEffect","_styleToEffect","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","_getProperty","actualIndex","_reorderParsedAnnotations","_updateChildReference","childAnnotation","_collection","link","isTextWebLink","_hasValidBorder","_getLinkAnnotation","remote","val","tabIndex","parentReference","_annotation","_parentDictionary","_parseCommentsOrReview","nextAnnotation","_parseReview","_parseComments","remaining","PdfBookmarkBase","_bookMarkList","_isExpanded","_isLoadedBookmark","_reproduceTree","bookmark","contains","title","PdfBookmark","_updateBookmarkList","prev","_updateCount","_removeFirst","_removeLast","_removeCount","_removePrevious","_removeNext","First","Last","Next","Prev","Count","updatedList","isExpanded","firstBookmark","_getBookmark","isBookmark","bookmarkBase","isFirst","bookMark","bookmarkBaseDictionary","bookMarkDictionary","namedDestination","_obtainNamedDestination","_parent","_namedDestination","_title","_textStyle","_obtainTextStyle","_updateTextStyle","nextBookmark","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_addCollection","_findDestination","destinationObject","_location","_zoom","_isValid","_isAnnotationParsed","widgets_1","_parseWidgetReferences","validAnnotations_1","cBox","isValidCropBox","_rotation","_obtainTabOrder","tabs","column","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","annotsRef","Annots","merge","_loadContents","saveStream","saveReference","_contents","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","cx","cy","crx","cry","origin","sign","clip","_getActualBounds","actualSize","_getActualSize","_fetchResources","targetArray","_combineIntoSingleArray","targetStream","arrays","reduce","arr","sourceArray","_destinationBounds","_ImageDecoder","_bitsPerComponent","_noOfComponents","_reset","_getBuffer","outputBuffer","_seek","byteLength","_toUnsigned16","_readUnsigned32","_imageData","jpeg","_readHeader","imgData","isLengthExceed","_readExceededJpegImage","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","skippedByte","marker","_InflaterState","_BlockType","_PngChunkTypes","_DecompressedOutput","_usedBytes","_dOutput","_dOutSize","_dOutMask","_writeLD","copyStart","_copyFrom","copied","tailLen","_copyTo","sourceStart","sourceStartIndex_1","sourceStartIndex","_InBuffer","_bBuffer","_bInBuffer","_needsInput","_availableBits","_load16Bits","_getBitMask","_getBits","bitBuffer","avail","_setInput","_skipBits","_skipByteBoundary","_HuffmanTree","_clArray","_loadTree","isLengthTree","_getLengthTree","_getDepthTree","_maxLengthTree","_tBits","_tMask","_createTable","lTree","_maxDepthTree","_calculateHashCode","bit","_bitReverse","newcode","codeArray","ofBits","bitMask","_getNextSymbol","mask","codeLength","_nCLength","_Inflater","_extraLengthBits","_staticDistanceTreeTable","_lengthBase","_distanceBasePosition","_codeOrder","_bfinal","_bLength","_blBuffer","_blockType","unCompressedType","_caSize","_clCodeCount","_extraBits","_lengthCode","_llCodeCount","_output","_input","_loopCounter","_codeList","_cltcl","_inflaterState","readingBFinal","done","vFooter","inputBytes","_inflate","_finished","eob","readingBType","_getBlockType","dynamicType","readingNlCodes","staticType","_llTree","_distanceTree","decodeTop","unCompressedAligning","_getInflaterStateValue","_decodeDynamicBlockHeader","_decodeBlock","_decodeUncompressedBlock","endBlock","unCompressedByte1","_unCompressedByte","unCompressedByte2","unCompressedByte3","unCompressedByte4","decodeUnCompressedBytes","_unusedBytes","inflaterstate","unCompressedByte","_getInflaterState","fb","dCodeResult","fLengthResult","inLengthResult","_inLength","iLength","fLength","_fLength","dCode","_dcode","_distanceCode","readingNdCodes","_readingNDCodes","readingCodes","_readingCodes","readingClCodes","_readingCLCodes","readingTcBefore","readingTcAfter","_readingTCBefore","literalTreeCodeLength","distanceTreeCodeLength","_dCodeCount","_clTree","repeatCount","previousCode","readingHeader","srFooter","rFooter","_DeflateStream","leaveOpen","_leaveOpen","_inflater","cOffset","rCount","inflateResult","png","_isRedGreenBlue","_isDecode","_shades","_ideateDecode","_colors","_bitsPerPixel","_idatLength","_inputBands","_hasValidChunkType","hasValidChunk","iHDR","iDAT","_readImageData","sRGB","_ignoreChunk","pLTE","_readPhotoPlate","iEND","_decodeImageData","tRNS","_readTransparency","tEXt","iTXt","zTXt","hIST","sBIT","iCCP","pHYs","tIME","bKGD","gAMA","cHRM","_currentChunkLength","_getChunkType","_header","_PngHeader","_bitDepth","_colorType","_compression","_filter","_getFilterType","_interlace","_setBitsPerPixel","_encodedStream","_colorSpace","_getPngColorSpace","alpha","_alpha","sh","colorspace","calRGB","whitePoint","gammaArray","wpY","alphaY","redY","blueY","blueX","blueZ","colorY","bY","alphaX","alphaZ","_maskData","_dataStream","_getDeflatedData","_dataStreamOffset","_decodedImageData","_readDecodeData","idatData","deflateStream","numRead","outputData","_decodeData","xStep","yStep","bytesPerRow","prior","sourceY","destinationY","filter","_readStream","_PngFilterTypes","sub","_decompressSub","_decompressUp","average","_decompressAverage","paeth","_decompressPaeth","_processPixels","tmp","streamOffset","bitsPerPixel","pData","pp","pr","prp","_paethPredictor","pa","pb","pc","step","sourceX","destX","_getPixel","depth","_setPixel","unsigned","dt","hb","bitDepth","bpr","_setMask","BaseException","message","FormatError","ParserEndOfFileException","_emptyPdfData","gen","_PdfReferenceSet","put","_PdfReferenceSetCache","toStringFunction","nElements","toStr","pair","keysArray","namesOfKeys","pair1","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_b","_c","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","_isImage","getByte","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","isHex","getBaseStreams","arrayBuffer","dataStream2","strEnd","_PdfNullStream","_ContentParser","_recordCollection","_operands","_lexer","_ContentLexer","_readContent","_parseObject","eof","tokenType","_getNextToken","number","_operatorParams","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_tokenType","_currentCharacter","_nextCharacter","_moveToNextChar","_getComment","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","_consumeValue","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","operands","_operator","_PdfDecodeStream","maybeMinBufferLength","_rawMinBufferLength","minBufferLength","ensureBuffer","requested","buffer2","bufEnd","_PdfDecryptStream","maybeLength","cipher","_chunkSize","_nextChunk","hasMoreData","_decryptBlock","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","cmf","flg","codeSize","codeBuffer","getBits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","hdr","blockLen","block","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","_PdfCatalog","_getCatalogObj","_topPagesDictionary","pageKidsCountCache","pageIndexCache","_createForm","_allowCatalog","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","currentPageIndex","currentNode","PdfPredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","kk","prevRow","upLeft","_PdfEncryptor","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_defaultPasswordBytes","_filterName","algorithm","_algorithm","keyLength","cfDictionary","streamCryptoName","handlerDictionary","ownerPassword","userPassword","revision","passwordBytes","fileIdBytes","encodeURIComponent","encryptionKey","_prepareKeyData","decodedPassword","_decodeUserPassword","ownerEncryptionKey","algorithm_1","ownerValidationKey","ownerValidationSalt","ownerKeySalt","userValidationKey","uBytes","userValidationSalt","userKeySalt","ownerEncryption","userEncryption","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_createEncryptionKey","_checkOwnerPassword","cipherDictionary","standardCryptFilter","event_1","_cipherDictionary","_string","_eff","_encryptionKey","_messageDigest","_MD5","isUserKey","_getUserKey","_getOwnerKey","encryptMetaData","hashData","hash","_md5","keyLengthInBytes","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_createCipherTransform","stringCipher","_buildCipherConstructor","streamCipher","_CipherTransform","_buildObjectKey","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_r","_k","h0","h2","h3","paddedLength","padded","w","f","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","_Word64","assign","rotateRight","xor","shiftRight","isMode384","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_inverseS","_mix","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","s0","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","ii","_expandKey","cipherKey","rcon","t3","t4","_stringCipher","_streamCipher","createStream","decryptString","stringBytes","encryptString","pad","repeat","crypto","getRandomValues","specialChars","_PdfLexicalOperator","nextChar","_hexStringNumber","beginInlineImagePosition","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","charBuffered","getName","previousCh","_toHexDigit","getHexString","firstDigit","secondDigit","isFirstHex","getObject","nextCh","possibleCommand","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","lexicalOperator","allowStreams","recoveryMode","encryptor","_isPassword","imageCache","_encryptor","refill","tryShift","arguement1","arguement2","arguement3","cipherTransform","makeInlineImage","_checkEnd","makeStream","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filterZero","cacheKey","imageStream","imageBytes","initialStreamPos","dictBytes","_computeMaxNumber","cacheEntry","bytesLength","makeFilter","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","endOffset","_Linearization","parser","obj2","obj3","getInt","hints","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","allowZeroValue","hintsLength","hint","_PdfCrossReference","_entries","_crossReferencePosition","_offsetReference","_pendingRefs","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_prevXRefOffset","_parse","trailerDictionary","_indexObjects","_readXRef","entrySize","_nextReferenceNumber","_trailer","encrypt","_isEncrypted","_ids","_permissionFlags","fileId","fileStructure","isIncrementalUpdate","crossReferenceType","hasRoot","_getEntry","xrefEntry","free","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_fileStructure","_crossReferenceType","_processXRefTable","_topDictionary","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","_streamState","streamParameters","streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","_currentLength","buffer_1","_saveAsStream","_saveAsTable","objectCollection","_PdfMainObjectCollection","_writeObjectCollection","_mainObjectCollection","currentLength","objectStreamCollection","_updatedDictionary","_writeArchieveStream","_objectStream","_objectStreamCollection","_writeXrefStream","formatValue","newRef","newStartXref","newXref","_copyTrailer","_computeMessageDigest","newXrefData","_writeLong","_archiveOffset","newXrefStream","tempBuffer","offsetString","_processString","genString","_writeXref","_writeXrefTable","_getSortedReferences","xrefHeader","initialEntry","now","crossReferenceInfo","transform","isCrossReference","_writeStream","nestedValue","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","value_1","_writeUnicodeString","_escapeString","byteValues","_writeObjectToBuffer","archiveObj","_PdfArchievedStream","_writeToBuffer","typeIsFilter","entriesArray","sortedCollection","lastObjectNumber","entriesArray_1","currentObjectNumber","_archiveXRef","_updatedStream","newDict","archiveStream","_pointer","_cache","foundCatalog","_addToMainObjectCollection","_parseObjectCollection","_addReferencesToMainCollection","_parseFetchValue","fetchvalue","every","objectsToWrite","processReference","fetchValue","uncompressedValue","PdfForm","_isDefaultAppearance","_hasKids","_fieldCollection","_signFlag","_isNeedAppearances","_parsedFields","_createFields","_needAppearances","_parseFields","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","orderFormFields","tab","setTabOrder","_tabCollection","fieldCollection","_getFields","_sortItemByPageIndex","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","hasNoKids","nodes","fieldKids","kidsDict","_isNode","isNode","_widgetReferences","fieldReference","kidReference","kidDictionary","pageToImport","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","nameIndex","field1","field2","xdiff","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","secondHeight","_compare","field1Index","field2Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_FdfDocument","_annotationObjects","_specialCharacters","objectID","objectArray","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","inReplyToDictionary","_appendElement","_XmlDocument","_checkXml","xmlDocument","PdfFileStructure","_incrementalUpdate","PdfPageImportOptions","_optimizeResources","_groupFormFields","_targetIndex","_PdfMergeHelper","pageReference","_bookmarks","_pageReference","_bookmarksPageLinkReference","_newList","_annotationLayer","_isLayersPresent","_kidsReference","_formFieldsCollection","_formFields","_fieldCount","_destinationDocument","_sourceDocument","_copier","_PdfCopier","_importPages","layers","isCopiedPage","isSplitDocument","newPage","_insertNewPage","optimizeResources","newContents_1","pageContent","_copy","newContent","resourceValue","_contentTemplate","_importAnnotation","groupFormFields","_formFieldsGroupingSupport","_importFormField","bookMarkMap","_parseBookmarkDestination","bookmarks","_mergeLayer","dest","isDestination","oldCollection","annotationReference","destArray","copiedAnnotationReference","copiedAnnotationDictionary","oldPage","formFields","fieldNames","drEntry","formField","destinationKids","sourceKids","_groupFormFieldsKids","_insertFormFields","destinationField","destKids","oldKids","oldDictionary","_copyDictionary","_updateFieldsWithKids","fieldDict","_updateFieldDictionary","formFieldDict","_removeFieldDictionary","formFieldDictionary","newFieldReference","newFieldDict","_createNewFieldDictionary","newField","kidsElement","pageRef","parentRef","destDictionary","_getItemStyle","previousIndex","formDictionary","baseFontName","pdfForm","widgetArray","pdfField","dr","drDictionary","curreneDR","currentFont_1","newReference","modified","_mergeFormFieldsWithDocument","pdfFields","_importLayers","ocProperties","destinationOCProperties","currentOCProperties","ocgs","Cocgs","curreneDefaultView","existingDefaultView","order","existingOrder","groups","existingRBGroups","on","existingON","existingElements","asDictionary","currentASDictionary","usageGroup","currentUsageGroup","off","existingOff","existingLocked","newPageDictionary","oldPageDictionary","xobjdict","xobject","XObject","oldPageList","oldPageResource","layerValue","layerkey","annotationKey","annotationValue","layerKey","xobjDictionary","annotDictionary","oldReference","_exportBookmarks","currentBase","bkCollection","stack","nodeInformation","bm","newBm","newDest","newPage_1","nDest","newNameddest","C","newpage_1","page_2","newNamedDest","_writePropertiesDictionary","layerList","_fixDestinations","pageLinkReference","pagesettings","PdfPageSettings","orientation","_objectDispose","_bookmarkHashTable","targetCrossReference","sourceCrossReference","_traversedObjects","_targetCrossReference","_sourceCrossReference","object","clonedObject","_copyArray","_copyStream","_copyReference","copiedPage","clonedDictionary","copiedValue","originalArray","newArray","originalStream","dereferencedValue","copyValue","_addToDestination","PdfDocument","_headerSignature","_startXrefSignature","_endObjSignature","_permissions","_allowCustomData","_isSplitDocument","_pages","_checkHeader","_startXRef","_linear","err","_linearization","_find","startXRefLength","_pageCount","outlines","_bookmarkBase","cachedPage","promise","_getLinearizationPage","settings","_checkPageNumber","sectionDictionary","_updatePageSettings","sectionReference","lastPage_1","parentDictionary","newKids_1","_updatePageCache","_updatePageCount","removePage","argument","targetPage","_removePage","valueToIncrement","isIncrement","updatedData","pageToRemove","bookmarkDictionary","_removePageTemplates","_removeParent","referenceToRemove","_removeInternalTemplates","namedObject","nameCollection","namedPageCollection","_getUpdatedPageTemplates","namedPageDictionary","namedPages","reorderPages","orderArray","sortedArray","_sortedArray","ascendingOrder","pagesToRemove","_","newkids","newPages","indexPage","_cloneResources","num","resourceDictionary_1","_cloneInnerResources","oldObject_1","hasNew_1","innerKey","oldArray_1","hasNew_2","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_mergeHelperCache","_namedDestinationCollection","reason","backwards","signatureEnd","formObject","needAppearances","_addWatermarkText","importPageRange","sourceDocument","sourceOCProperties","correspondancePagecount","targetIndex","sourcepage","_uniqueID","isLayersPresent","importPage","splitByFixedNumber","fixedNumber","splitEvent","splitIndex","tempValue","pdfData","_importDocumentPages","_invokeSplitEvent","splitByPageRanges","ranges","range","args","PdfDocumentSplitEventArgs","_exportAppearance","_exportName","_isOrientation","_margins","PdfMargins","_updateSize","_updateOrientation","pageOrientation","all","_pdfData","_PdfPaddings","PdfLayoutFormat","_boundSet","_paginateBounds","break","layout","paginateBounds","paginate","fitPage","_break","PdfLayoutResult","_PageLayoutResult","markerWrote","markerWidth","markerX","_PdfLayoutParameters","PdfBitmap","encodedString","_imageStatus","_initializeAsync","_decoder","colorSpace","indexed","PdfListItem","_textIndent","_subList","PdfListItemCollection","items","_listItems","itemIndent","textIndent","PdfList","_indent","_alignment","_delimiter","_suffix","_enableHierarchy","_currentIndex","_itemCollection","_drawInternal","_PdfListLayouter","layoutInternal","PdfOrderedList","_startNumber","indent","delimiter","suffix","PdfUnorderedList","disk","_getStyledText","asterisk","_draw","_unicodeFont","_PdfListInfo","_list","_number","_information","_markerMaxWidth","_finish","_usePaginateBounds","_resultHeight","_element","_graphics","onePage","_currentPage","pageResult","broken","_curList","_setCurrentParameters","_getMarkerMaxWidth","useOnPage","_layoutOnPage","usePaginateBounds","finalBounds","_currentFormat","resultantHeight","_drawItem","oList","_markerWidth","listInfo","curList","markerText","posY","posX","itemHeight","itemSize","itemBrush","markerHeight","itemPen","itemFormat","itemText","canDrawMarker","markerResult","_createMarkerResult","itemX","_markerRightToLeft","_drawMarker","_createOrderedMarkerResult","_createUnorderedMarkerResult","_drawOrderedMarker","_drawUnorderedMarker","markerFont","_getMarkerFont","markerPen","_getMarkerPen","markerBrush","_getMarkerBrush","markerFormat","_setMarkerStringFormat","_getMarkerFormat","infromation","startNumber","uFont","findMaxWidth","enableHierarchy","orderedList","markerSize"],"mappings":"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C7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,OACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,OACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,OACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,OACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,OACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,OACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAM,MACpC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,MACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,MACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,MACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,MACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,MACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,MACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,MACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,KAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0pB,gBAAgB7Y,SAAS,MAAO,OACrC7Q,KAAK0p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AAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAETpD,EAA+BoE,cAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExCpE,EAA+BwE,oBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IA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GAAM,IAAM,IAAM,GAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAClE,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAClE,IAAM,IAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAClE,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAClE,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAClE,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAClE,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,GAClE,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAClE,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAClE,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,EAAM,EAClE,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAClE,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAClE,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAClE,IAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAClE,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAClE,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAClE,IAAM,IAAM,IAAM,MAEtBwpB,EAAMqgC,KAAOrgC,EAAM0qG,WAAW1xH,GACvBgnB,EA4BX,MA1DA9B,IAAUwnG,EAA8B5lG,GAgCxC4lG,EAA6Bv4G,UAAUu9G,WAAa,SAAUC,GAC1D,GACIvtF,GAAItlB,KAAKqxG,GACTyB,EAAO9yG,KAAKuoC,KACZppD,EAAS,GAAIT,YAHL,IAIZS,GAAO2C,IAAI+wH,EACX,KAAK,GAAIr4H,GAAI,GAAID,EAAI,EAAGC,EALZ,MAKyBD,EAAG,CACpC,GAAI60H,GAAKjwH,EAAO3E,EAAI,GAChB60H,EAAKlwH,EAAO3E,EAAI,GAChBu4H,EAAK5zH,EAAO3E,EAAI,GAChBw4H,EAAK7zH,EAAO3E,EAAI,EACpB40H,GAAK9pF,EAAE7qC,OAAOC,SAAS00H,EAAGz0H,WAAY,KACtC00H,EAAK/pF,EAAE7qC,OAAOC,SAAS20H,EAAG10H,WAAY,KACtCo4H,EAAKztF,EAAE7qC,OAAOC,SAASq4H,EAAGp4H,WAAY,KACtCq4H,EAAK1tF,EAAE7qC,OAAOC,SAASs4H,EAAGr4H,WAAY,KACtCy0H,GAAM0D,EAAKr4H,OAAOC,SAASH,EAAEI,WAAY,IACzC,KAAK,GAAIinC,GAAI,EAAGA,EAAI,IAAKA,EACrBziC,EAAO1E,OAAOC,SAASF,EAAEG,WAAY,KAAOy0H,GAAMjwH,EAAO3E,EAAI,IAC7D2E,EAAO3E,EAAI,GAAK60H,GAAMlwH,EAAO3E,EAAI,IACjC2E,EAAO3E,EAAI,GAAKu4H,GAAM5zH,EAAO3E,EAAI,IACjC2E,EAAO3E,EAAI,GAAKw4H,GAAM7zH,EAAO3E,EAAI,IACjCA,GAAK,EAGb,MAAO2E,IAEJyuH,GACT0D,IAEEzD,GAA8C,SAAU7lG,GAExD,QAAS6lG,GAA6B3sH,GAClC,GAAIgnB,GAAQF,EAAO1S,KAAK0K,OAASA,IAIjC,OAHAkI,GAAM2pG,oBAAsB,GAC5B3pG,EAAM0pG,SAAW,IACjB1pG,EAAMqgC,KAAOrgC,EAAM0qG,WAAW1xH,GACvBgnB,EA4CX,MAlDA9B,IAAUynG,EAA8B7lG,GAQxC6lG,EAA6Bx4G,UAAUu9G,WAAa,SAAUC,GAC1D,GACIvtF,GAAItlB,KAAKqxG,GACTlyH,EAAS,GAAIT,YAFL,IAGZS,GAAO2C,IAAI+wH,EAMX,KAAK,GAJDzD,GACAC,EACA0D,EACAC,EAJArtH,EAAI,EAKCnL,EAAI,GAAID,EAAI,EAAGC,EATZ,MASyBD,EAAG,CAChCC,EAAI,IAAO,IACX40H,EAAK9pF,EAAE7qC,OAAOC,SAAS00H,EAAGz0H,WAAY,KACtC00H,EAAK/pF,EAAE7qC,OAAOC,SAAS20H,EAAG10H,WAAY,KACtCo4H,EAAKztF,EAAE7qC,OAAOC,SAASq4H,EAAGp4H,WAAY,KACtCq4H,EAAK1tF,EAAE7qC,OAAOC,SAASs4H,EAAGr4H,WAAY,MAEjCH,EAAI,IAAO,IAChB40H,EAAKjwH,EAAO3E,EAAI,GAChB60H,EAAKlwH,EAAO3E,EAAI,GAChBu4H,EAAK5zH,EAAO3E,EAAI,GAChBw4H,EAAK7zH,EAAO3E,EAAI,GAChB40H,EAAK9pF,EAAE7qC,OAAOC,SAAS00H,EAAGz0H,WAAY,KACtC00H,EAAK/pF,EAAE7qC,OAAOC,SAAS20H,EAAG10H,WAAY,KACtCo4H,EAAKztF,EAAE7qC,OAAOC,SAASq4H,EAAGp4H,WAAY,KACtCq4H,EAAK1tF,EAAE7qC,OAAOC,SAASs4H,EAAGr4H,WAAY,KACtCy0H,GAAMzpH,GACNA,IAAS,IACA,MACLA,EAAiB,KAAR,GAAJA,IAGb,KAAK,GAAIi8B,GAAI,EAAGA,EAAI,IAAKA,EACrBziC,EAAO1E,OAAOC,SAASF,EAAEG,WAAY,KAAOy0H,GAAMjwH,EAAO3E,EAAI,IAC7D2E,EAAO3E,EAAI,GAAK60H,GAAMlwH,EAAO3E,EAAI,IACjC2E,EAAO3E,EAAI,GAAKu4H,GAAM5zH,EAAO3E,EAAI,IACjC2E,EAAO3E,EAAI,GAAKw4H,GAAM7zH,EAAO3E,EAAI,IACjCA,GAAK,EAGb,MAAO2E,IAEJ0uH,GACTyD,IAEE3D,GAA6B,SAAU3lG,GAEvC,QAAS2lG,KACL,MAAkB,QAAX3lG,GAAmBA,EAAOxoB,MAAMwgB,KAAMhd,YAAcgd,KAQ/D,MAVAoG,IAAUunG,EAAa3lG,GAIvB2lG,EAAYt4G,UAAU0vG,cAAgB,SAAUniG,GAC5C,MAAOA,IAEX+qG,EAAYt4G,UAAU67G,SAAW,SAAUtuG,GACvC,MAAOA,IAEJ+qG,GACTyD,IAEE7D,GAAkC,WAClC,QAASA,GAAiBH,EAAcE,GACpCttG,KAAKizG,cAAgB7F,EACrBptG,KAAKkzG,cAAgB5F,EAgCzB,MA9BAC,GAAiBl4G,UAAU89G,aAAe,SAAUvmH,EAAQxS,GACxD,MAAO,IAAIqqH,IAAkB73G,EAAQxS,EAAQ4lB,KAAKkzG,gBAEtD3F,EAAiBl4G,UAAU+9G,cAAgB,SAAU9tF,GACjD,GAAI+tF,GAAcx1H,EAAeynC,GAAG,GAAO,EAE3C,OAAOlmC,GADc4gB,KAAKizG,cAAclO,cAAcsO,GAAa,KAGvE9F,EAAiBl4G,UAAUi+G,cAAgB,SAAUhuF,GACjD,GAAItlB,KAAKizG,wBAAyB3B,IAA+B,CAC7D,GACIiC,GAAM,GADKjuF,EAAElrC,OACU,EAC3BkrC,IAAKpnC,OAAOC,aAAao1H,GAAKC,OAAOD,EACrC,IAAIjB,GAAK,GAAI5zH,YAAW,GACxB,IAAsB,mBAAX+0H,QACPA,OAAOC,gBAAgBpB,OAGvB,KAAK,GAAI/3H,GAAI,EAAGA,EAAI,GAAIA,IACpB+3H,EAAG73H,OAAOC,SAASH,EAAEI,WAAY,KAAOjB,KAAK8iB,MAAM,IAAM9iB,KAAKqQ,SAGtE,IAAI6Y,GAAO5C,KAAKizG,cAAc/B,SAASrzH,EAAeynC,GAAG,GAAO,GAAOgtF,GACnEv0H,EAAS,GAAIW,YAAW,GAAKkkB,EAAKxoB,OAGtC,OAFA2D,GAAO+D,IAAIwwH,GACXv0H,EAAO+D,IAAI8gB,EAAM,IACVxjB,EAAerB,GAE1B,MAAOqB,GAAe4gB,KAAKizG,cAAc/B,SAASrzH,EAAeynC,GAAG,GAAO,MAExEioF,KCzkDPoqC,WACrC,QAASA,GAAoBhnH,GACzBoT,KAAKpT,OAASA,EACdoT,KAAK6zG,WACL7zG,KAAK1gB,gBACL0gB,KAAK8zG,iBAAmB,EACxB9zG,KAAK+zG,0BAA4B,EAiarC,MA/ZAH,GAAoBv+G,UAAUw+G,SAAW,WACrC,MAAQ7zG,MAAKtd,YAAcsd,KAAKpT,OAAO2zG,WAE3CqT,EAAoBv+G,UAAU2+G,SAAW,WACrC,MAAOh0G,MAAKpT,OAAO4zG,YAEvBoT,EAAoBv+G,UAAU4+G,UAAY,WACtC,GAAIvzH,GAAKsf,KAAKtd,YACVwxH,GAAY,EACZC,EAAW,EACXjpB,EAAO,CAYX,IAXW,KAAPxqG,GACAwqG,GAAQ,EAEG,MADXxqG,EAAKsf,KAAK6zG,cAENnzH,EAAKsf,KAAK6zG,aAGF,KAAPnzH,IACLwqG,EAAO,EACPxqG,EAAKsf,KAAK6zG,YAEH,KAAPnzH,GAAsB,KAAPA,EACf,GACIA,EAAKsf,KAAK6zG,iBACE,KAAPnzH,GAAsB,KAAPA,EAM5B,IAJW,KAAPA,IACAyzH,EAAW,GACXzzH,EAAKsf,KAAK6zG,YAEVnzH,EAAK,IAAQA,EAAK,GAAM,CACxB,GAAID,EAAcC,KAAe,IAARA,EAAW,CAChC,GAAiB,KAAbyzH,GAA4B,IAATjpB,EACnB,MAAO,EAEX,IAAiB,IAAbipB,IAA4B,IAAVjpB,EAClB,MAAO,GAGf,KAAM,IAAI6S,IAAY,mBAAqB7/G,OAAOC,aAAauC,GAAM,cAAgBA,EAAK,KAE9FwqG,EAAOA,GAAQ,CACf,IAAIkpB,GAAY1zH,EAAK,GACjB2zH,EAAa,EACbC,EAAiB,CAErB,KADA5zH,EAAKsf,KAAK6zG,WACHnzH,GAAM,GAAG,CACZ,GAAIA,GAAM,IAAQA,GAAM,GAAM,CAC1B,GAAI6zH,GAAe7zH,EAAK,EACpBwzH,GACAG,EAA0B,GAAbA,EAAkBE,GAGd,IAAbJ,IACAA,GAAY,IAEhBC,EAAwB,GAAZA,EAAiBG,OAGhC,IAAW,KAAP7zH,EAAa,CAClB,GAAiB,IAAbyzH,EAIA,KAHAA,GAAW,MAMd,CAAA,GAAW,KAAPzzH,EAAa,CAClBA,EAAKsf,KAAK6zG,UACV,UAEC,GAAW,KAAPnzH,GAAsB,MAAPA,EAYpB,KAVA,IAAW,MADXA,EAAKsf,KAAKg0G,aACgB,KAAPtzH,EACf4zH,EAAwB,KAAP5zH,GAAe,EAAI,EACpCsf,KAAK6zG,eAEJ,IAAInzH,EAAK,IAAQA,EAAK,GACvB,KAEJwzH,IAAY,EAKhBxzH,EAAKsf,KAAK6zG,WAQd,MANiB,KAAbM,IACAC,GAAaD,GAEbD,IACAE,GAAa16H,KAAKC,IAAI,GAAK26H,EAAiBD,IAEzCnpB,EAAOkpB,GAElBR,EAAoBv+G,UAAUwH,UAAY,WACtC,GAAI23G,GAAW,EACXhiB,GAAO,EACPlzG,EAAe0gB,KAAK1gB,YACxBA,GAAalF,OAAS,CAEtB,KADA,GAAIsG,GAAKsf,KAAK6zG,aACD,CACT,GAAIY,IAAe,CACnB,QAAa,EAAL/zH,GACJ,KAAM,EACF8xG,GAAO,CACP,MACJ,KAAK,MACCgiB,EACFl1H,EAAa3C,KAAK,IAClB,MACJ,KAAK,IACkB,KAAb63H,GACFx0G,KAAK6zG,WACLrhB,GAAO,GAGPlzG,EAAa3C,KAAK,IAEtB,MACJ,KAAK,IAED,OADA+D,EAAKsf,KAAK6zG,YAEN,KAAM,EACFrhB,GAAO,CACP,MACJ,KAAK,KACDlzG,EAAa3C,KAAK,KAClB,MACJ,KAAK,KACD2C,EAAa3C,KAAK,KAClB,MACJ,KAAK,KACD2C,EAAa3C,KAAK,KAClB,MACJ,KAAK,IACD2C,EAAa3C,KAAK,KAClB,MACJ,KAAK,KACD2C,EAAa3C,KAAK,KAClB,MACJ,KAAK,IACL,IAAK,IACL,IAAK,IACD2C,EAAa3C,KAAKuB,OAAOC,aAAauC,GACtC,MACJ,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,GAAIqD,GAAS,GAALrD,CAER+zH,IAAe,GADf/zH,EAAKsf,KAAK6zG,aAEA,IAAQnzH,GAAM,KACpBqD,GAAKA,GAAK,IAAW,GAALrD,IAChBA,EAAKsf,KAAK6zG,aACA,IAAQnzH,GAAM,KACpB+zH,GAAe,EACf1wH,GAAKA,GAAK,IAAW,GAALrD,KAGxBpB,EAAa3C,KAAKuB,OAAOC,aAAa4F,GACtC,MACJ,KAAK,IACuB,KAApBic,KAAKg0G,YACLh0G,KAAK6zG,UAET,MACJ,KAAK,IACD,KACJ,SACIv0H,EAAa3C,KAAKuB,OAAOC,aAAauC,IAG9C,KACJ,SACIpB,EAAa3C,KAAKuB,OAAOC,aAAauC,IAG9C,GAAI8xG,EACA,KAECiiB,KACD/zH,EAAKsf,KAAK6zG,YAGlB,MAAOv0H,GAAajC,KAAK,KAE7Bu2H,EAAoBv+G,UAAUq/G,QAAU,WACpC,GAAIh0H,GACAi0H,EACAr1H,EAAe0gB,KAAK1gB,YAGxB,KAFAA,EAAalF,OAAS,EACtBsG,EAAKsf,KAAK6zG,WACHnzH,GAAM,IAAMizH,GAAajzH,IAAK,CACjC,GAAW,KAAPA,EAAa,CAEb,GADAA,EAAKsf,KAAK6zG,WACNF,GAAajzH,GAAK,CAClBpB,EAAa3C,KAAK,IAClB,OAEJ,GAAIoH,GAAIic,KAAK40G,YAAYl0H,EACzB,KAAW,IAAPqD,EAAU,CACV4wH,EAAaj0H,EACbA,EAAKsf,KAAK6zG,UACV,IAAIxvH,GAAK2b,KAAK40G,YAAYl0H,EAC1B,KAAY,IAAR2D,EAAW,CAEX,GADA/E,EAAa3C,KAAK,IAAKuB,OAAOC,aAAaw2H,IACvChB,GAAajzH,GACb,KAEJpB,GAAa3C,KAAKuB,OAAOC,aAAauC,IACtCA,EAAKsf,KAAK6zG,UACV,UAEJv0H,EAAa3C,KAAKuB,OAAOC,aAAc4F,GAAK,EAAKM,QAGjD/E,GAAa3C,KAAK,IAAKuB,OAAOC,aAAauC,QAI/CpB,GAAa3C,KAAKuB,OAAOC,aAAauC,GAE1CA,GAAKsf,KAAK6zG,WAEd,MAAOltH,IAASnD,IAAIlE,EAAajC,KAAK,MAE1Cu2H,EAAoBv+G,UAAUw/G,aAAe,WACzC,GAAIv1H,GAAe0gB,KAAK1gB,YACxBA,GAAalF,OAAS,CACtB,IAEI06H,GACAC,EAHAr0H,EAAKsf,KAAKtd,YACVsyH,GAAa,CAIjB,KADAh1G,KAAK8zG,iBAAmB,IACX,CACT,GAAIpzH,EAAK,EACL,KAEC,IAAW,KAAPA,EAAa,CAClBsf,KAAK6zG,UACL,OAEC,GAAyB,IAArBF,GAAajzH,GAAjB,CAKD,GAAIs0H,GAEA,IAAoB,KADpBF,EAAa90G,KAAK40G,YAAYl0H,IACP,CACnBA,EAAKsf,KAAK6zG,UACV,eAGH,CAED,IAAqB,KADrBkB,EAAc/0G,KAAK40G,YAAYl0H,IACP,CACpBA,EAAKsf,KAAK6zG,UACV,UAEJv0H,EAAa3C,KAAKuB,OAAOC,aAAc22H,GAAc,EAAKC,IAE9DC,GAAcA,EACdt0H,EAAKsf,KAAK6zG,eApBVnzH,GAAKsf,KAAK6zG,WAuBlB,MAAOv0H,GAAajC,KAAK,KAE7Bu2H,EAAoBv+G,UAAU4/G,UAAY,WAGtC,IAFA,GAAItkH,IAAU,EACVjQ,EAAKsf,KAAKtd,cACD,CACT,GAAIhC,EAAK,EACL,MAnTA,KAqTJ,IAAIiQ,EACW,KAAPjQ,GAAsB,KAAPA,IACfiQ,GAAU,OAGb,IAAW,KAAPjQ,EACLiQ,GAAU,MAET,IAAyB,IAArBgjH,GAAajzH,GAClB,KAEJA,GAAKsf,KAAK6zG,WAEd,OAAa,EAALnzH,GACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,MAAOsf,MAAKi0G,WAChB,KAAK,IACD,MAAOj0G,MAAKnD,WAChB,KAAK,IACD,MAAOmD,MAAK00G,SAChB,KAAK,IAED,MADA10G,MAAK6zG,WACEj2G,GAAYpa,IAAI,IAC3B,KAAK,IAED,MADAwc,MAAK6zG,WACEj2G,GAAYpa,IAAI,IAC3B,KAAK,IAED,MADA9C,GAAKsf,KAAK6zG,WACC,KAAPnzH,GACAsf,KAAK6zG,WACEj2G,GAAYpa,IAAI,OAEpBwc,KAAK60G,cAChB,KAAK,IAED,MADAn0H,GAAKsf,KAAK6zG,WACC,KAAPnzH,GACAsf,KAAK6zG,WACEj2G,GAAYpa,IAAI,OAEpBoa,GAAYpa,IAAI,IAC3B,KAAK,KAED,MADAwc,MAAK6zG,WACEj2G,GAAYpa,IAAI,IAC3B,KAAK,KAED,MADAwc,MAAK6zG,WACEj2G,GAAYpa,IAAI,IAC3B,KAAK,IAED,KADAwc,MAAK6zG,WACC,GAAI9V,IAAY,sBAAwBr9G,GAEtD,GAAI8nC,GAAMtqC,OAAOC,aAAauC,EAC9B,IAAIA,EAAK,IAAQA,EAAK,IAAM,CACxB,GAAIw0H,GAASl1G,KAAKg0G,UAClB,IAAIkB,GAAU,IAAQA,GAAU,IAE5B,MADAl1G,MAAK6zG,WACEj2G,GAAYpa,IAAIglC,GAI/B,IADA9nC,EAAKsf,KAAK6zG,WACHnzH,GAAM,IAAMizH,GAAajzH,IAAK,CACjC,GAAIy0H,GAAkB3sF,EAAMtqC,OAAOC,aAAauC,EAChD,IAAmB,MAAf8nC,EAAIpuC,OACJ,KAAM,IAAI2jH,IAAY,2BAA6Bv1E,EAAIpuC,OAE3DouC,GAAM2sF,EACNz0H,EAAKsf,KAAK6zG,WAEd,MAAY,SAARrrF,GAGQ,UAARA,IAGQ,SAARA,EACO,MAEC,OAARA,IACAxoB,KAAK+zG,yBAA2B/zG,KAAKpT,OAAOmK,UAEzC6G,GAAYpa,IAAIglC,MAE3BorF,EAAoBv+G,UAAU+/G,QAAU,WACpC,GAGIC,GAHAC,EAAYt1G,KAAKpT,OAAOmK,SACxBrU,EAAcsd,KAAKtd,YACnBqxH,EAA2B/zG,KAAK+zG,wBAEpC,KACIsB,EAAUr1G,KAAKi1G,YAEnB,MAAOM,IAIP,MAHAv1G,MAAKpT,OAAOmK,SAAWu+G,EACvBt1G,KAAKtd,YAAcA,EACnBsd,KAAK+zG,yBAA2BA,EACzBsB,GAEXzB,EAAoBv+G,UAAUmgH,eAAiB,WAE3C,IADA,GAAI90H,GAAKsf,KAAKtd,YACPhC,GAAM,GAAG,CACZ,GAAW,KAAPA,EAAa,CAEF,MADXA,EAAKsf,KAAK6zG,aAEN7zG,KAAK6zG,UAET,OAEC,GAAW,KAAPnzH,EAAa,CAClBsf,KAAK6zG,UACL,OAEJnzH,EAAKsf,KAAK6zG,aAGlBD,EAAoBv+G,UAAUu/G,YAAc,SAAUl0H,GAClD,MAAIA,IAAM,IAAQA,GAAM,GACR,GAALA,EAENA,GAAM,IAAQA,GAAM,IAAUA,GAAM,IAAQA,GAAM,IAC9B,GAAR,GAALA,IAEJ,GAELkzH,KAGP6B,GAA4B,WAC5B,QAASA,GAAWC,EAAiBn6E,EAAMo6E,EAAcC,EAAcC,OAC9C,KAAjBF,IAA2BA,GAAe,OACzB,KAAjBC,IAA2BA,GAAe,GAC9C51G,KAAKghD,eAAgB,EACrBhhD,KAAK81G,aAAc,EACnB91G,KAAK01G,gBAAkBA,EACvB11G,KAAKu7B,KAAOA,EACZv7B,KAAK21G,aAAeA,EACpB31G,KAAK41G,aAAeA,EACpB51G,KAAK+1G,WAAa,GAAI7tF,KACtBloB,KAAKg2G,WAAaH,EAClB71G,KAAKi2G,SAmlBT,MAjlBAR,GAAWpgH,UAAU4gH,OAAS,WAC1Bj2G,KAAKphB,MAAQohB,KAAK01G,gBAAgBT,YAClCj1G,KAAKnhB,OAASmhB,KAAK01G,gBAAgBT,aAEvCQ,EAAWpgH,UAAUgc,MAAQ,WACrBrR,KAAKnhB,iBAAkB+e,KAAuC,OAAxBoC,KAAKnhB,OAAO8e,SAClDqC,KAAKphB,MAAQohB,KAAKnhB,OAClBmhB,KAAKnhB,OAAS,OAGdmhB,KAAKphB,MAAQohB,KAAKnhB,OAClBmhB,KAAKnhB,OAASmhB,KAAK01G,gBAAgBT,cAG3CQ,EAAWpgH,UAAU6gH,SAAW,WAC5B,IAEI,MADAl2G,MAAKqR,SACE,EAEX,MAAOvzB,GACH,OAAO,IAGf23H,EAAWpgH,UAAU4/G,UAAY,SAAUkB,EAAYC,EAAYC,GAC/D,GAAIC,GACA13H,EAAQohB,KAAKphB,KAEjB,IADAohB,KAAKqR,QACDzyB,YAAiBgf,IACjB,OAAQhf,EAAM+e,SACV,IAAK,KACD,MAA0B,gBAAfw4G,IAAiD,gBAAfC,GAClCp2G,KAAKu2G,gBAAgBJ,EAAYC,EAAYC,GAE/CF,YAAsB5I,IACpBvtG,KAAKu2G,gBAAgBJ,GAGrBn2G,KAAKu2G,iBAEpB,KAAK,IAED,IADA,GAAIj2H,OACIod,GAAWsC,KAAKphB,MAAO,MApfnC,QAof2CohB,KAAKphB,OAAqB,CAC7D,GAAI6G,OAAQ,EACc,iBAAf0wH,IAAiD,gBAAfC,IACzCE,EAAkBt2G,KAAKg2G,WAAW7I,uBAAuBgJ,EAAYC,GACrE3wH,EAAQua,KAAKi1G,UAAUkB,EAAYC,EAAYC,IAE1CF,YAAsB5I,KAC3B+I,EAAkBH,EAClB1wH,EAAQua,KAAKi1G,UAAUkB,IAGvB1wH,EAAQua,KAAKi1G,UAAUkB,GAEN,IAAjB71H,EAAMlG,QAAgBqjB,GAAQhY,EAAO,aACrCua,KAAKghD,eAAgB,GAEzBv7D,EAAQuV,GAAYvV,EAAOua,KAAKghD,cAAehhD,KAAK81G,aACpDx1H,EAAM3D,KAAK8I,GAEf,GAvgBJ,QAugBQua,KAAKphB,MAAqB,CAC1B,GAAIohB,KAAK41G,aACL,MAAOt1H,EAEX,MAAM,IAAI09G,IAAyB,6BAIvC,MAFAh+F,MAAKghD,eAAgB,EACrBhhD,KAAKqR,QACE/wB,CACX,KAAK,KAED,IADA,GAAIsC,GAAa,GAAIO,IAAe6c,KAAKu7B,OACjC79B,GAAWsC,KAAKphB,MAAO,OAlhBnC,QAkhB4CohB,KAAKphB,OACzC,GAAMohB,KAAKphB,gBAAiB+H,IAA5B,CAIA,GAAIzF,GAAM8e,KAAKphB,MAAM4K,IAMrB,IALY,MAARtI,GAAuB,MAARA,GAAuB,OAARA,IAC9B8e,KAAK81G,aAAc,GAEvB91G,KAAKqR,QACOrR,KAAKw2G,YAEb,KAEsB,iBAAfL,IAAiD,gBAAfC,KACzCE,EAAkBt2G,KAAKg2G,WAAW7I,uBAAuBgJ,EAAYC,GAEzE,IAAI58H,OAAQ,EAUZA,GAAQwhB,GARJxhB,EADsB,gBAAf28H,IAAiD,gBAAfC,GACjCp2G,KAAKi1G,UAAUkB,EAAYC,EAAYC,GAE1CF,YAAsB5I,IACnBvtG,KAAKi1G,UAAUkB,GAGfn2G,KAAKi1G,YAEUj1G,KAAKghD,cAAehhD,KAAK81G,aACpD91G,KAAK81G,aAAc,EACnBlzH,EAAWd,IAAIZ,EAAK1H,OA3BhBwmB,MAAKqR,OA6Bb,IAjjBJ,QAijBQrR,KAAKphB,MAAqB,CAC1B,GAAIohB,KAAK41G,aACL,MAAOhzH,EAEX,MAAM,IAAIo7G,IAAyB,kCAEvC,MAAItgG,IAAWsC,KAAKnhB,OAAQ,WACE,IAAtBmhB,KAAK21G,cACDQ,YAAsB5I,IACtB+I,EAAkBH,EAEbE,GAAoC,gBAAfD,KAC1BE,EAAkBt2G,KAAKg2G,WAAW7I,uBAAuBgJ,EAAYC,IAE/C,iBAAfA,IAA4BA,EAC5Bp2G,KAAKy2G,WAAW7zH,EAAY0zH,EAAiBF,GAG7Cp2G,KAAKy2G,WAAW7zH,EAAY0zH,IAIhC1zH,GAGfod,KAAKqR,QACEzuB,EACX,SACI,MAAOhE,GAGnB,GAAInE,OAAOsE,UAAUH,GAAQ,CACzB,GAAInE,OAAOsE,UAAUihB,KAAKphB,QAAU8e,GAAWsC,KAAKnhB,OAAQ,KAAM,CAC9D,GAAI4M,GAAMC,GAAclI,IAAI5E,EAAOohB,KAAKphB,MAGxC,OAFAohB,MAAKqR,QACLrR,KAAKqR,QACE5lB,EAEX,MAAO7M,GAEX,MAAqB,gBAAVA,IACHu3H,YAAsB5I,IACtB+I,EAAkBH,EAES,gBAAfA,IAAiD,gBAAfC,KAC9CE,EAAkBt2G,KAAKg2G,WAAW7I,uBAAuBgJ,EAAYC,IAErEE,EACOA,EAAgBlD,cAAcx0H,GAElCA,GAEJA,GAEX62H,EAAWpgH,UAAUqhH,kCAAoC,SAAU9pH,GAC/D,GAEI/G,GACA8wH,EAHAC,EAAWhqH,EAAOmK,SAClB8/G,GAAW,CAIf,KADAhxH,EAAI+G,EAAO2zG,WACG,IAAP16G,GACH,GAAU,MAANA,EAAJ,CAIA,OAAQ+G,EAAO2zG,WACX,IAAK,GACD,KACJ,KAAK,KACD3zG,EAAOstD,MAAM,EACb,MACJ,KAAK,KACD28D,GAAW,CACX,MACJ,KAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACDF,EAAe/pH,EAAO+zG,wBACH,EACf/zG,EAAOstD,KAAKy8D,EAAe,GAG3B/pH,EAAOstD,MAAM,GAIzB,GAAI28D,EACA,KAEJhxH,GAAI+G,EAAO2zG,cA9DP16G,GAAI+G,EAAO2zG,SAgEnB,IAAInmH,GAASwS,EAAOmK,SAAW6/G,CAC/B,QAAW,IAAP/wH,GACA+G,EAAOstD,MAAM9/D,GACN4lB,KAAK82G,2BAA2BlqH,KAE3CoT,KAAK+2G,mBAAmBnqH,GACjBxS,IAEXq7H,EAAWpgH,UAAU2hH,0BAA4B,SAAUpqH,GAGvD,IAFA,GACIlM,GADAk2H,EAAWhqH,EAAOmK,UAEc,KAA5BrW,EAAKkM,EAAO2zG,YAChB,GAAW,MAAP7/G,EAAa,CACb,GAAIu2H,GAAWrqH,EAAOmK,QAEtB,KADArW,EAAKkM,EAAO4zG,WACL//G,EAAcC,IACjBkM,EAAOstD,OACPx5D,EAAKkM,EAAO4zG,UAEhB,IAAW,KAAP9/G,EAAa,CACbkM,EAAOstD,MACP,OAEJ,GAAIttD,EAAOmK,SAAWkgH,EAAU,CAC5B,GAAIC,GAAUtqH,EAAO8zG,UAAU,EAC/B,IAAmB,KAAfwW,EAAQ,IAA8B,KAAfA,EAAQ,GAC/B,OAKhB,GAAI98H,GAASwS,EAAOmK,SAAW6/G,CAC/B,QAAY,IAARl2H,GACAkM,EAAOstD,MAAM9/D,GACN4lB,KAAK82G,2BAA2BlqH,KAE3CoT,KAAK+2G,mBAAmBnqH,GACjBxS,IAEXq7H,EAAWpgH,UAAU8hH,6BAA+B,SAAUvqH,GAC1D,GACIlM,GADAk2H,EAAWhqH,EAAOmK,QAGtB,KADArW,EAAKkM,EAAO2zG,WACG,IAAR7/G,GACQ,KAAPA,GAGJA,EAAKkM,EAAO2zG,SAEhB,IAAInmH,GAASwS,EAAOmK,SAAW6/G,CAC/B,QAAY,IAARl2H,GACAkM,EAAOstD,MAAM9/D,GACN4lB,KAAK82G,2BAA2BlqH,KAE3CoT,KAAK+2G,mBAAmBnqH,GACjBxS,IAEXq7H,EAAWpgH,UAAU0hH,mBAAqB,SAAUnqH,GAChD,GACIlM,GADAmL,EAAQ,CAGZ,KADAnL,EAAKkM,EAAO2zG,WACG,IAAR7/G,GAAW,CACd,GAAc,IAAVmL,EACAA,EAAe,KAAPnL,EAAc,EAAI,MAEzB,IAAc,IAAVmL,EACLA,EAAe,KAAPnL,EAAc,EAAI,MAEzB,IAAc,IAAVmL,EACL,KAEJnL,GAAKkM,EAAO2zG,YAGpBkV,EAAWpgH,UAAUkhH,gBAAkB,SAAUJ,EAAYC,EAAYC,GACrE,GAGIe,GACAd,EAJAZ,EAAkB11G,KAAK01G,gBACvB9oH,EAAS8oH,EAAgB9oH,OACzBhK,EAAa,GAAIO,IAAe6c,KAAKu7B,KAWzC,KARI86E,IAEIC,EADAH,YAAsB5I,IACJ4I,EAGAn2G,KAAKg2G,WAAW7I,uBAAuBgJ,EAAYC,KAGrE14G,GAAWsC,KAAKphB,MAAO,OAvwBvB,QAuwBgCohB,KAAKphB,OAAqB,CAC9D,KAAMohB,KAAKphB,gBAAiB+H,KACxB,KAAM,IAAIo3G,IAAY,uCAE1B,IAAI78G,GAAM8e,KAAKphB,MAAM4K,IAErB,IADAwW,KAAKqR,QA5wBD,QA6wBArR,KAAKphB,MAAM4K,KACX,KAEA2sH,aAAsB5I,IACtB3qH,EAAWd,IAAIZ,EAAK8e,KAAKi1G,UAAUkB,IAGnCvzH,EAAWd,IAAIZ,EAAK8e,KAAKi1G,UAAUkB,EAAYC,EAAYC,KAGjB,IAA9CX,EAAgB3B,2BAChBqD,EAAaxqH,EAAOmK,SAAW2+G,EAAgB3B,yBAEnD,IACIsD,GADA1b,EAAS/4G,EAAWY,IAAI,IAAK,SAEjC,IAAIm4G,YAAkBh1G,IAClB0wH,EAAa1b,EAAOnyG,SAEnB,IAAIlI,MAAMuB,QAAQ84G,GAAS,CAC5B,GAAIpwG,GAAYowG,EAAO,GACnB2b,EAA4B,OAAd/rH,OAA2C,KAAdA,GAA6BA,YAAqBG,IAC7FsU,KAAKu7B,KAAKhnC,OAAOhJ,GACjBA,CACA+rH,KACAD,EAAaC,EAAW9tH,MAGhC,GACIpP,GADAw8H,EAAWhqH,EAAOmK,QAEtB,QAAQsgH,GACJ,IAAK,MACL,IAAK,YACDj9H,EAAS4lB,KAAK02G,kCAAkC9pH,EAChD,MACJ,KAAK,MACL,IAAK,gBACDxS,EAAS4lB,KAAKg3G,0BAA0BpqH,EACxC,MACJ,KAAK,MACL,IAAK,iBACDxS,EAAS4lB,KAAKm3G,6BAA6BvqH,EAC3C,MACJ,SACIxS,EAAS4lB,KAAK82G,2BAA2BlqH,GAEjD,GACI2qH,GADAC,EAAc5qH,EAAOm0G,cAAc6V,EAAUx8H,EAAQwI,EAEzD,IAAIxI,EA9zBS,KA8zBkBg9H,EA7zBjB,KA6zB+C,CACzD,GAAIK,GAAaD,EAAY5gE,UAC7B4gE,GAAYvW,OACZ,IAAIyW,GAAmB9qH,EAAOmK,QAC9BnK,GAAOmK,SAAW2+G,EAAgB3B,wBAClC,IAAI4D,GAAY/qH,EAAOgqD,SAASwgE,EAChCxqH,GAAOmK,SAAW2gH,EAClBH,EAAWv3G,KAAK43G,kBAAkBH,GAAc,IAAMz3G,KAAK43G,kBAAkBD,EAC7E,IAAIE,GAAa73G,KAAK+1G,WAAWvyH,IAAI+zH,EACrC,QAAmB9zH,KAAfo0H,EAIA,MAHA73G,MAAKnhB,OAAS+e,GAAYpa,IAAI,MAC9Bwc,KAAKqR,QACLwmG,EAAW5W,QACJ4W,EAaf,MAVIvB,KACAkB,EAAclB,EAAgBnD,aAAaqE,EAAap9H,IAE5Do9H,EAAcx3G,KAAK27F,OAAO6b,EAAa50H,EAAYxI,GACnDo9H,EAAY50H,WAAaA,MACRa,KAAb8zH,GACAv3G,KAAK+1G,WAAWj0H,IAAIy1H,EAAUC,GAElCx3G,KAAKnhB,OAAS+e,GAAYpa,IAAI,MAC9Bwc,KAAKqR,QACEmmG,GAEX/B,EAAWpgH,UAAUuiH,kBAAoB,SAAUp5H,GAI/C,IAAK,GAHDs5H,GAAct5H,EAAMpE,OACpBmjC,EAAI,EACJ13B,EAAI,EACCtL,EAAI,EAAGA,EAAIu9H,IAAev9H,EAE/BsL,GADA03B,GAAgB,IAAX/+B,EAAMjE,EAGf,OAAQsL,GAAI,OAAS,GAAM03B,EAAI,OAEnCk4F,EAAWpgH,UAAUohH,WAAa,SAAU7zH,EAAY0zH,EAAiByB,OAClD,KAAfA,IAAyBA,GAAa,EAC1C,IAAIrC,GAAkB11G,KAAK01G,gBACvB9oH,EAAS8oH,EAAgB9oH,MAC7B8oH,GAAgBF,gBAChB,IAAIwC,GAAgBprH,EAAOmK,SAAW,EAClC3c,EAASwI,EAAWY,IAAI,SAM5B,IALK/I,OAAOsE,UAAU3E,KAClBA,EAAS,GAEbwS,EAAOmK,SAAWihH,EAAgB59H,EAClCs7H,EAAgB7B,WACZ7zG,KAAKk2G,YAAcx4G,GAAWsC,KAAKnhB,OAAQ,aAC3CmhB,KAAKqR,YAEJ,CACD,GAAI4mG,GAAqB,GAAIv5H,aAAY,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,MACrFw5H,EAAel4G,KAAKm4G,kBAAkBH,EAAeC,EACzD,IAAIC,EAAe,EAAG,CAClB,GAAI/9H,GAAM89H,EAAmB79H,OAAS,EAClCg+H,EAAqBH,EAAmBzgF,MAAM,EAAGr9C,GACjDuqH,EAAc1kG,KAAKm4G,kBAAkBH,EAAeI,EAOxD,IANI1T,GAAe,GAEXjkH,EADWmM,EAAO8zG,UAAUvmH,EAAM,GAAGA,MAErC+9H,EAAexT,GAGnBwT,EAAe,EACf,KAAM,IAAIna,IAAY,8BAG9B3jH,EAAS89H,EACTxC,EAAgB7B,WAChB7zG,KAAKqR,QACLrR,KAAKqR,QAWT,MATArR,MAAKqR,QACLzkB,EAASA,EAAOm0G,cAAciX,EAAe59H,EAAQwI,GAChDm1H,IACGzB,IACA1pH,EAAS0pH,EAAgBnD,aAAavmH,EAAQxS,IAElDwS,EAASoT,KAAK27F,OAAO/uG,EAAQhK,EAAYxI,IAE7CwS,EAAOhK,WAAaA,EACbgK,GAEX6oH,EAAWpgH,UAAUsmG,OAAS,SAAU/uG,EAAQhK,EAAYxI,GACxD,GAAIuhH,GAAS/4G,EAAWY,IAAI,IAAK,UAC7B6kH,EAASzlH,EAAWY,IAAI,KAAM,cAClC,IAAIm4G,YAAkBh1G,IAClB,MAAOqZ,MAAK+3G,WAAWnrH,EAAQ+uG,EAAOnyG,KAAMpP,EAAQiuH,EAExD,IAAI3D,GAActqH,CAClB,IAAIkH,MAAMuB,QAAQ84G,GAGd,IAAK,GAFD0c,GAAc1c,EACd2c,EAAcjQ,EACT9tH,EAAI,EAAGA,EAAI89H,EAAYj+H,SAAUG,EAAG,CACzC,GAAIgR,GAAY8sH,EAAY59H,OAAOC,SAASH,EAAEI,WAAY,IAE1D,OADAghH,EAASpwG,YAAqBG,IAAgBsU,KAAKu7B,KAAKhnC,OAAOhJ,GAAaA,YACpD5E,KACpB,KAAM,IAAIo3G,IAAY,oBAAsBpC,EAAS,IAGzD,IADA0M,EAAS,KACL/mH,MAAMuB,QAAQy1H,IAAgB/9H,IAAK+9H,GAAa,CAChD,GAAI7sH,GAAM6sH,EAAY79H,OAAOC,SAASH,EAAEI,WAAY,IACpD0tH,GAAS58G,YAAeC,IAAgBsU,KAAKu7B,KAAKhnC,OAAO9I,GAAOA,EAEpEmB,EAASoT,KAAK+3G,WAAWnrH,EAAQ+uG,EAAOnyG,KAAMk7G,EAAa2D,GAC3D3D,EAAc,KAGtB,MAAO93G,IAEX6oH,EAAWpgH,UAAU0iH,WAAa,SAAUnrH,EAAQpD,EAAMk7G,EAAa2D,GACnE,GAAoB,IAAhB3D,EACA,MAAO,IAAIlD,GAEf,KACI,MAAa,OAATh4G,GAA0B,gBAATA,EACb6+G,EACO,GAAID,IAAmB,GAAI9C,IAAgB14G,EAAQ83G,GAAcA,EAAa2D,GAElF,GAAI/C,IAAgB14G,EAAQ83G,GAEhC93G,EAEX,MAAO2oH,GACH,MAAO,IAAI/T,MAGnBiU,EAAWpgH,UAAU8iH,kBAAoB,SAAUH,EAAet0C,GAC9D,GAAI92E,GAASoT,KAAK01G,gBAAgB9oH,MAClCA,GAAOmK,SAAWihH,CAGlB,KAFA,GACIO,GAAkB70C,EAAUtpF,OACzBwS,EAAOmK,SAAWnK,EAAOzS,KAAK,CACjC,GAAIq+H,GAAY5rH,EAAO8zG,UAHd,MAIL+X,EAAaD,EAAUp+H,OAASm+H,CACpC,IAAIE,GAAc,EACd,KAGJ,KADA,GAAI1hH,GAAW,EACRA,EAAW0hH,GAAY,CAE1B,IADA,GAAIj+H,GAAI,EACDA,EAAI+9H,GAAmBC,EAAUzhH,EAAWvc,KAAOkpF,EAAUlpF,IAChEA,GAEJ,IAAIA,GAAK+9H,EAEL,MADA3rH,GAAOmK,UAAYA,EACZnK,EAAOmK,SAAWihH,CAE7BjhH,KAEJnK,EAAOmK,UAAY0hH,EAEvB,OAAQ,GAEZhD,EAAWpgH,UAAUyhH,2BAA6B,SAAUlqH,GACxD,GAGIlM,GACAg4H,EAJAV,EAAgBprH,EAAOmK,SAEvBlL,EAAQ,CAIZ,KADAnL,EAAKkM,EAAO2zG,WACG,IAAR7/G,GAAW,CACd,GAAc,IAAVmL,EACAA,EAAe,KAAPnL,EAAc,EAAI,MAEzB,IAAc,IAAVmL,EACLA,EAAe,KAAPnL,EAAc,EAAI,MAEzB,CACD,GAAc,IAAVmL,EACA,KAAM,IAAI3Q,OAAM,8CAEpB,IAAW,KAAPwF,GAAsB,KAAPA,GAAqB,KAAPA,EAAY,CACzCg4H,EAAmB9rH,EAAOmK,QAE1B,KAAK,GADD4hH,GAAiB/rH,EAAO8zG,UAlBhC,IAmBanmH,EAAI,EAAGo4H,EAAKgG,EAAev+H,OAAQG,EAAIo4H,EAAIp4H,IAEhD,IAAW,KADXmG,EAAKi4H,EAAep+H,KACwB,IAA1Bo+H,EAAep+H,EAAI,KAG1B,KAAPmG,GAAqB,KAAPA,IAAeA,EAAK,IAAQA,EAAK,KAAO,CACtDmL,EAAQ,CACR,OAGR,GAAc,IAAVA,EAAa,CACbnL,EAAKkM,EAAO2zG,SACZ,UAEJ,GAAc,IAAV10G,EACA,UAIJA,GAAQ,EAGhBnL,EAAKkM,EAAO2zG,WAEJ,IAAR7/G,OACgC,KAArBg4H,GACP9rH,EAAOstD,OAAOttD,EAAOmK,SAAW2hH,GAGxC,IAAIE,GAAY,CAOhB,OANAhsH,GAAOstD,MAAM0+D,GACbl4H,EAAKkM,EAAO4zG,WACZ5zG,EAAOstD,KAAK0+D,GACPn4H,EAAcC,IACfk4H,IAEGhsH,EAAOmK,SAAW6hH,EAAYZ,GAEzCvC,EAAWpgH,UAAUmhH,UAAY,WAC7B,MArhCQ,QAqhCJx2G,KAAKphB,OAON62H,KAIPoD,GAAgC,WAChC,QAASA,GAAejsH,GACpBoT,KAAK0tC,SAAU,CACf,IAAIorE,GAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,GAAS,MACzDw0B,EAAO03F,EAAO7D,YACd8D,EAAOD,EAAO7D,YACd+D,EAAOF,EAAO7D,YACdryH,EAAak2H,EAAO7D,WAExB,IADAj1G,KAAK0tC,QAAUjzD,OAAOsE,UAAUqiC,IAAS3mC,OAAOsE,UAAUg6H,IAASr7G,GAAWs7G,EAAM,YAAgC,KAAfp2H,EACjGod,KAAK0tC,QAAS,CACd,GAAIxzB,GAAMt3B,EAAWY,IAAI,aACzBwc,MAAK0tC,YAAyB,KAARxzB,GAAuBA,EAAM,EAEvD,GAAIla,KAAK0tC,QAAS,CACd,GAAIrrB,GAAWriB,KAAKi5G,OAAOr2H,EAAY,IACvC,IAAIy/B,IAAaz1B,EAAOxS,OACpB,KAAM,IAAIc,OAAM,oFAEpB8kB,MAAK5lB,OAASioC,EACdriB,KAAKk5G,MAAQl5G,KAAKm5G,SAASv2H,GAC3Bod,KAAKo5G,kBAAoBp5G,KAAKi5G,OAAOr2H,EAAY,KACjDod,KAAKq5G,SAAWr5G,KAAKi5G,OAAOr2H,EAAY,KACxCod,KAAK7jB,UAAY6jB,KAAKi5G,OAAOr2H,EAAY,KACzCod,KAAKs5G,sBAAwBt5G,KAAKi5G,OAAOr2H,EAAY,KACrDod,KAAKu5G,UAAY32H,EAAWS,IAAI,KAAO2c,KAAKi5G,OAAOr2H,EAAY,KAAK,GAAQ,GAyBpF,MAtBAi2H,GAAexjH,UAAU4jH,OAAS,SAAUr2H,EAAY4G,EAAMgwH,OACnC,KAAnBA,IAA6BA,GAAiB,EAClD,IAAIt/F,GAAMt3B,EAAWY,IAAIgG,EACzB,QAAmB,KAAR0wB,GAAuBz/B,OAAOsE,UAAUm7B,KAASs/F,EAAiBt/F,GAAO,EAAIA,EAAM,GAC1F,MAAOA,EAEX,MAAM,IAAIh/B,OAAM,QAAUsO,EAAO,4DAErCqvH,EAAexjH,UAAU8jH,SAAW,SAAUv2H,GAC1C,GAAIs2H,GAAQt2H,EAAWW,SAAS,KAC5Bk2H,EAAcP,EAAM9+H,MACxB,IAAI8+H,IAA0B,IAAhBO,GAAqC,IAAhBA,GAAoB,CACnD,IAAK,GAAIv9H,GAAQ,EAAGA,EAAQu9H,EAAav9H,IAAS,CAC9C,GAAIw9H,GAAOR,EAAMh9H,EACjB,MAAMzB,OAAOsE,UAAU26H,IAASA,EAAO,GACnC,KAAM,IAAIx+H,OAAM,SAAWgB,EAAQ,iDAG3C,MAAOg9H,GAEX,KAAM,IAAIh+H,OAAM,2DAEb29H,KCllCPc,GAAoC,WACpC,QAASA,GAAmBruH,EAAUolE,GAClC1wD,KAAKoS,SAAW,GAChBpS,KAAKC,SAAW,OAChBD,KAAKsxD,UAAYZ,EACjB1wD,KAAK1G,UAAYhO,EACjB0U,KAAKG,QAAU7U,EAAS6U,QACxBH,KAAK45G,YACL55G,KAAK65G,wBAA0BzkH,OAAOkI,OAAO,MAC7C0C,KAAKtL,UAAY,GAAIwzB,KACrBloB,KAAK85G,iBAAmB,GAAI5xF,KAC5BloB,KAAK+5G,aAAe,GAAI5b,IACxBn+F,KAAK0d,YAquCT,MAnuCAi8F,GAAmBtkH,UAAU2kH,cAAgB,SAAUC,GACnDj6G,KAAKk6G,iBAAmBD,GACxBj6G,KAAKm6G,eAAiBF,MACc,KAAzBj6G,KAAKo6G,iBAA4D,OAAzBp6G,KAAKo6G,kBACpDp6G,KAAKo6G,gBAAkBH,IAG/BN,EAAmBtkH,UAAUglH,OAAS,SAAUzE,GAC5C,GAAI0E,IAKAA,EAJC1E,EAImB51G,KAAKu6G,gBAHLv6G,KAAKw6G,aAKXr/C,WAAWn7D,KAC7B,IAAIy6G,GAAYH,EAAkB92H,IAAI,OAClCwc,MAAK45G,SAASx/H,OAASqgI,GAAaz6G,KAAK45G,SAASx/H,SAAWqgI,EAC7Dz6G,KAAK06G,qBAAuBD,EAEvBz6G,KAAK45G,SAASx/H,OAASqgI,IAC5Bz6G,KAAK06G,qBAAuB16G,KAAK45G,SAASx/H,OAAS,EAAI4lB,KAAK45G,SAASx/H,OAAS,GAElF4lB,KAAK26G,SAAWL,CAChB,IAAIM,GAAUN,EAAkB92H,IAAI,UACpC,IAAIo3H,EAAS,CACT56G,KAAK1G,UAAUuhH,cAAe,EAC9B76G,KAAK86G,KAAOR,EAAkB92H,IAAI,MAClCwc,KAAK+6G,iBAAmBH,EAAQp3H,IAAI,IACpC,IAAIw3H,GAASh7G,KAAK86G,MAAQ96G,KAAK86G,KAAK1gI,OAAS4lB,KAAK86G,KAAK,GAAK,EAC5DF,GAAQza,oBAAqB,EAC7BngG,KAAKkxG,SAAW,GAAI3H,IAAcqR,EAASI,EAAQh7G,KAAKsxD,WACxDtxD,KAAK1G,UAAUkwG,gBAAkBxpG,KAAKkxG,SAAS1H,gBAC/CxpG,KAAK1G,UAAUowG,uBAAyB1pG,KAAKkxG,SAASxH,uBAClD1pG,KAAK1G,UAAU2hH,cAAcC,oBAC7Bl7G,KAAK1G,UAAU2hH,cAAcE,mBAAqBn9G,wBAAsBpR,OAGxEoT,KAAK1G,UAAU2hH,cAAcE,mBAAqBn9G,wBAAsBsS,MAExEtQ,KAAKkxG,SAASxH,wBACd1pG,KAAK1G,UAAUmwG,sBAAuB,EACtCzpG,KAAK1G,UAAUqwG,kBAAmB,IAGlC3pG,KAAK1G,UAAUmwG,qBAAuBzpG,KAAKkxG,SAASzH,qBACpDzpG,KAAK1G,UAAUqwG,kBAAmBiR,EAAQv3H,IAAI,oBAAqBu3H,EAAQp3H,IAAI,oBAGvF,GACIouD,GADAwpE,GAAU,CAEd,KACIxpE,EAAO0oE,EAAkB92H,IAAI,QAEjC,MAAO1F,GACH,KAAM,IAAI+/G,IAAc,0BAA2B,sBAEvD,GAAIjsD,EACA,IACqBA,EAAKpuD,IAAI,WAEtBwc,KAAK01C,MAAQ9D,EACbwpE,GAAU,GAGlB,MAAO7F,GACH,KAAM,IAAI1X,IAAc,0BAA2B,eAG3D,IAAKud,EACD,KAAKxF,GAIK,GAAI/X,IAAc,0BAA2B,eAH7C,GAAIA,IAAc,0BAA2B,uBAO/D8b,EAAmBtkH,UAAUgmH,UAAY,SAAU9gI,GAC/C,GAAI+gI,GAAYt7G,KAAK45G,SAASr/H,EAC9B,OAAI+gI,KAAcA,EAAUC,MAAQD,EAAU35H,OACnC25H,EAEJ,MAEX3B,EAAmBtkH,UAAUd,OAAS,SAAU9I,EAAK00G,GACjD,GAAI16G,EACJ,MAAMgG,YAAeC,KACjB,KAAM,IAAIxQ,OAAM,gCAEpB,IAAI8pE,GAAev5D,EAAIu5D,aACnB6yD,EAAa73G,KAAKtL,UAAUlR,IAAIiI,EACpC,QAA0B,KAAfosH,EAIP,MAHIA,aAAsB10H,MAAmB00H,EAAWz0H,QACpDy0H,EAAWz0H,MAAQ4hE,GAEhB6yD,CAEX,IAAIyD,GAAYt7G,KAAKq7G,UAAUr2D,EAC/B,IAAkB,OAAds2D,EAEA,MADAt7G,MAAKtL,UAAU5S,IAAI2J,EAAK6vH,GACjBA,CAEX,IAAIt7G,KAAK+5G,aAAa12H,IAAIoI,GAEtB,KADAuU,MAAK+5G,aAAa/9C,OAAOvwE,GACnB,GAAIvQ,OAAM,qBAEpB8kB,MAAK+5G,aAAa3b,IAAI3yG,EACtB,KAEQhG,EADA61H,EAAUE,aACFx7G,KAAKy7G,mBAAmBhwH,EAAK6vH,EAAWnb,GAGxCngG,KAAK07G,iBAAiBjwH,EAAK6vH,GAEvCt7G,KAAK+5G,aAAa/9C,OAAOvwE,GAE7B,MAAO8pH,GAEH,KADAv1G,MAAK+5G,aAAa/9C,OAAOvwE,GACnB8pH,EAEV,MAAO9vH,IAEXk0H,EAAmBtkH,UAAUomH,mBAAqB,SAAUlwH,EAAW+vH,EAAWvD,GAC9E,GAAI9yD,GAAmB15D,EAAU05D,iBAC7BD,EAAez5D,EAAUy5D,YAC7B,IAAIs2D,EAAUpd,MAAQj5C,EAClB,KAAM,IAAI44C,IAAc,oCAAsCtyG,EAAW,qBAE7E,IAAIqB,GAASoT,KAAKG,QAAQ4gG,cAAcua,EAAU35H,OAASqe,KAAKG,QAAQjmB,UAAOuJ,IAC3Eq1H,EAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,GAASoT,MAAM,GAAM,EAAOA,KAAKkxG,UACjF9vF,EAAO03F,EAAO7D,YACd8D,EAAOD,EAAO7D,YACd+D,EAAOF,EAAO7D,WAClB,IAAI7zF,IAAS4jC,GAAgB+zD,IAAS9zD,OAAoC,KAAT+zD,EAC7D,KAAM,IAAInb,IAAc,kCAAoCtyG,EAAW,qBAE3E,IAAI9F,EAgBJ,QAdIA,EADAua,KAAKkxG,WAAa6G,EACVe,EAAO7D,UAAU1pH,EAAUy5D,aAAcz5D,EAAU05D,kBAAkB,GAGrE6zD,EAAO7D,UAAU,KAAM8C,aAEZ5rH,KACnB6T,KAAKtL,UAAU5S,IAAIyJ,EAAW9F,GAE9BA,YAAiBtC,IACjBsC,EAAMrC,MAAQmI,EAAU5Q,WAEnB8K,YAAiB0G,MACtB1G,EAAM7C,WAAWQ,MAAQmI,EAAU5Q,YAEhC8K,GAEXk0H,EAAmBtkH,UAAUqmH,iBAAmB,SAAUjwH,EAAK6vH,GAC3D,GAAIK,GAAcL,EAAU35H,OACxBiL,EAASoT,KAAKzL,OAAO7I,GAAclI,IAAIm4H,EAAa,GACxD,QAAsB,KAAX/uH,EACP,KAAM,IAAImxG,IAAY,oBAE1B,IAAIn/G,GAAQgO,EAAOhK,WAAWY,IAAI,SAC9Bo+B,EAAIh1B,EAAOhK,WAAWY,IAAI,KAC1B06G,EAAMzyG,EAAIw5D,gBACd,KAAKxqE,OAAOsE,UAAUH,KAAWnE,OAAOsE,UAAU6iC,GAC9C,KAAM,IAAIm8E,IAAY,mDAK1B,KAAK,GAHD+a,GAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,GAASoT,MAAM,GAC/D47G,EAAO,GAAIt6H,OAAMsgC,GACjBi6F,EAAU,GAAIv6H,OAAMsgC,GACfrnC,EAAI,EAAGA,EAAIqnC,IAAKrnC,EAAG,CACpBf,EAAQs/H,EAAO7D,WACnB,KAAKx6H,OAAOsE,UAAUvF,GAClB,KAAM,IAAIukH,IAAY,+CAAiDvkH,EAE3E,IAAImI,GAASm3H,EAAO7D,WACpB,KAAKx6H,OAAOsE,UAAU4C,GAClB,KAAM,IAAIo8G,IAAY,+CAAiDp8G,EAE3Ei6H,GAAKrhI,GAAKf,EACVqiI,EAAQthI,GAAKoH,EAIjB,IAAK,GAFDzH,IAAS0S,EAAO1S,OAAS,GAAK0E,EAC9Bk9H,EAAU,GAAIx6H,OAAMsgC,GACfrnC,EAAI,EAAGA,EAAIqnC,IAAKrnC,EAAG,CACxB,GAAI8nC,GAAY9nC,EAAIqnC,EAAI,EAAKi6F,EAAQthI,EAAI,GAAKshI,EAAQthI,OAAMkJ,EAC5D,IAAI4+B,EAAW,EACX,KAAM,IAAI07E,IAAY,uCAG1B,IAAI7jF,IADJ4+F,EAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,EAAOm0G,cAAc7mH,EAAQ2hI,EAAQthI,GAAI8nC,EAAUz1B,EAAOhK,aAAcod,MAAM,IAC7Gi1G,WAEjB,IADA6G,EAAQvhI,GAAK2/B,IACTA,YAAe/tB,KAAnB,CAGA,GAAI3S,GAAQoiI,EAAKrhI,GACbkL,EAAQua,KAAK45G,SAASpgI,EAC1B,IAAIiM,GAASA,EAAM9D,SAAWg6H,GAAel2H,EAAMy4G,MAAQ3jH,EAAG,CAC1D,GAAI6I,GAAQ5J,EAAQ,IAAM0kH,CAC1Bl+F,MAAKtL,UAAU5S,IAAI4J,GAAclI,IAAIhK,EAAO0kH,GAAMhkF,GAC9CA,YAAe/2B,MACf+2B,EAAI92B,MAAQA,KAIxB,GAAIjE,GAAS28H,EAAQR,EAAUpd,IAC/B,QAAsB,KAAX/+G,EACP,KAAM,IAAI0+G,IAAc,gCAAkCpyG,EAAK,qBAEnE,OAAOtM,IAEXw6H,EAAmBtkH,UAAUmlH,UAAY,SAAU5E,OAC1B,KAAjBA,IAA2BA,GAAe,EAC9C,IAAIhpH,GAASoT,KAAKG,QACd47G,EAAuB,GAAI74H,IAC/B,KACI,KAAO8c,KAAKk6G,gBAAgB9/H,QAAQ,CAChC,GAAI6/H,GAAYj6G,KAAKk6G,gBAAgB,EAIrC,IAHIl6G,KAAKm6G,eAAiBF,IACtBj6G,KAAKm6G,eAAiBF,GAEtB8B,EAAqB14H,IAAI42H,GACzBj6G,KAAKk6G,gBAAgB7oG,YADzB,CAIA0qG,EAAqBz4H,IAAI22H,GACzBrtH,EAAOmK,SAAWkjH,EAAYrtH,EAAO1S,KACrC,IAAI4+H,GAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,GAASoT,MAAM,GAC/Dka,EAAM4+F,EAAO7D,YACbryH,MAAa,EACjB,IAAI8a,GAAWwc,EAAK,SAShB,OARiE,KAAtDla,KAAK1G,UAAU0iH,eAAeC,sBACrCj8G,KAAK1G,UAAU0iH,eAAeC,oBAAsBj+G,wBAAsBsS,OAE9E1tB,EAAaod,KAAKk8G,kBAAkBpD,GAC/B94G,KAAKm8G,iBACNn8G,KAAKm8G,eAAiBv5H,GAE1Bs3B,EAAMt3B,EAAWY,IAAI,WACjB/I,OAAOsE,UAAUm7B,GAAM,CACvB,GAAInjB,GAAWmjB,CACTnjB,KAAYiJ,MAAK65G,0BACnB75G,KAAK65G,wBAAwB9iH,GAAY,EACzCiJ,KAAKk6G,gBAAgBv9H,KAAKoa,SAIjC,CAAA,IAAItc,OAAOsE,UAAUm7B,GAsBtB,KAAM,IAAI6jF,IAAY,kCArB2C,KAAtD/9F,KAAK1G,UAAU0iH,eAAeC,sBACrCj8G,KAAK1G,UAAU0iH,eAAeC,oBAAsBj+G,wBAAsBpR,OAE9E,IAAIsxG,GAAM4a,EAAO7D,YACbt3G,EAAUm7G,EAAO7D,WAErB,IADA/6F,EAAM4+F,EAAO7D,kBACM,KAAR/W,GACNzjH,OAAOsE,UAAUm/G,IACjBxgG,GAAWC,EAAS,QACnBuc,YAAe/tB,KACjB,KAAM,IAAI4xG,IAAY,iCAM1B,IAJAn7G,EAAaod,KAAKo8G,mBAAmBliG,GAChCla,KAAKm8G,iBACNn8G,KAAKm8G,eAAiBv5H,IAErBA,EACD,KAAM,IAAIm7G,IAAY,8BAM9B7jF,EAAMt3B,EAAWY,IAAI,QACjB/I,OAAOsE,UAAUm7B,GACjBla,KAAKk6G,gBAAgBv9H,KAAKu9B,GAErBA,YAAexuB,KACpBsU,KAAKk6G,gBAAgBv9H,KAAKu9B,EAAI8qC,cAElChlD,KAAKk6G,gBAAgB7oG,SAEzB,MAAOrR,MAAKm8G,eAEhB,MAAOr+H,GACHkiB,KAAKk6G,gBAAgB7oG,QAEzB,IAAIukG,EAGJ,KAAM,IAAI/X,IAAc,0BAA2B,uBAEvD8b,EAAmBtkH,UAAUgnH,WAAa,SAAUz5G,EAAMjhB,GAMtD,IALA,GAGIyE,GAAQ,GACR1F,EAAKkiB,EAAKjhB,GAJL,KAKFjB,GAJE,KAIWA,GAHX,KAGwBA,OACvBiB,GAAUihB,EAAKxoB,SAGrBgM,GAASlI,OAAOC,aAAauC,GAC7BA,EAAKkiB,EAAKjhB,EAEd,OAAOyE,IAEXuzH,EAAmBtkH,UAAUinH,WAAa,SAAU15G,EAAMjhB,EAAQulH,GAI9D,IAHA,GAAI9sH,GAAS8sH,EAAK9sH,OACdmiI,EAAa35G,EAAKxoB,OAClBoiI,EAAU,EACP76H,EAAS46H,GAAY,CAExB,IADA,GAAIhiI,GAAI,EACDA,EAAIH,GAAUwoB,EAAKjhB,EAASpH,KAAO2sH,EAAK3sH,MACzCA,CAEN,IAAIA,GAAKH,EACL,KAEJuH,KACA66H,IAEJ,MAAOA,IAEX7C,EAAmBtkH,UAAUklH,cAAgB,WACzC,GAKIkC,GAAY,yBACZC,EAAe,kBACfC,EAAkB,+BAElBC,EAAe,GAAIl+H,aAAY,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,MAC5Dm+H,EAAiB,GAAIn+H,aAAY,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,MACxEo+H,EAAW,GAAIp+H,aAAY,IAAK,GAAI,MACpCq+H,EAAY,GAAIr+H,aAAY,GAAI,GAAI,GAAI,IAAK,KACjDshB,MAAK45G,SAASx/H,OAAS,EACvB4lB,KAAKtL,UAAU2sD,OACf,IAAIz0D,GAASoT,KAAKG,OAClBvT,GAAOmK,SAAW,CAMlB,KALA,GAAIhZ,GAAS6O,EAAOgqD,WAChBx8D,EAAS2D,EAAO3D,OAChB2c,EAAWnK,EAAO1S,MAClB8iI,KACAC,KACGlmH,EAAW3c,GAAQ,CACtB,GAAIsG,GAAK3C,EAAOgZ,EAChB,IAxBM,IAwBFrW,GAvBC,KAuBaA,GAtBb,KAsB0BA,GArBvB,KAqBoCA,EAI5C,GAxBU,KAwBNA,EAAJ,CAUA,GAAI0F,GAAQ4Z,KAAKq8G,WAAWt+H,EAAQgZ,GAChChR,MAAI,EACR,IAAIK,EAAM8U,WAAW,UAA6B,IAAjB9U,EAAMhM,QAAgB,KAAK2zD,KAAK3nD,EAAM,KACnE2Q,GAAYiJ,KAAKs8G,WAAWv+H,EAAQgZ,EAAU6lH,GAC9CI,EAASrgI,KAAKoa,GACdA,GAAYiJ,KAAKs8G,WAAWv+H,EAAQgZ,EAAU8lH,OAI9C,IADA92H,EAAI02H,EAAUl3H,KAAKa,GACZ,CACH,GAAI4+D,GAAuC,EAAxBvqE,OAAOC,SAASqL,EAAE,IACjCm4G,EAA8B,EAAxBzjH,OAAOC,SAASqL,EAAE,IACxBm3H,MAAgB,GAChBtG,EAAW7/G,EAAW3Q,EAAMhM,OAC5B+iI,GAAgB,CACpB,IAAKn9G,KAAK45G,SAAS50D,IAGd,GAAIhlD,KAAK45G,SAAS50D,GAAck5C,MAAQA,EACzC,IACI,GAAIkf,GAAYxwH,EAAOm0G,cAAc6V,EAAUhqH,EAAOxS,OAASw8H,GAC3DlB,EAAkB,GAAI9B,IAAoBwJ,IAC1CtE,EAAS,GAAIrD,IAAWC,EAAiB,OACtCT,YACPkI,GAAgB,EAEpB,MAAO5H,GACH4H,IAAkB5H,YAAcvX,UAXpCmf,IAAgB,CAcpB,IAAIA,EAAe,CACf,GAAInwG,GAAO,GAAIqwG,GACfrwG,GAAKrrB,OAASoV,EAAWnK,EAAO1S,MAChC8yB,EAAKkxF,IAAMA,EACXlxF,EAAKwuG,cAAe,EACpBx7G,KAAK45G,SAAS50D,GAAgBh4C,EAElC,KAAO4pG,EAAW74H,EAAO3D,QAAQ,CAC7B,GAAIkjI,GAAS1G,EAAW52G,KAAKs8G,WAAWv+H,EAAQ64H,EAAUkG,GAAY,CACtEI,GAAgBI,EAASvmH,CACzB,IAAIwmH,GAAW7jI,KAAKW,IAAIijI,EAtEf,GAsE4C1G,GACjD4G,EAAWp+H,EAAerB,EAAO4B,SAAS49H,EAAUD,GACxD,IAAIZ,EAAa3uE,KAAKyvE,GAClB,KAGA,IAAIC,GAAWd,EAAgBp3H,KAAKi4H,EACpC,IAAIC,GAAYA,EAAS,GAAI,CACzBP,GAAiBO,EAAS,GAAGrjI,MAC7B,OAGRw8H,EAAW0G,EAEf,GAAIhiF,GAAUv9C,EAAO4B,SAASoX,EAAUA,EAAWmmH,GAC/CQ,EAAgB19G,KAAKs8G,WAAWhhF,EAAS,EAAGyhF,EAC5CW,GAAgBR,GAAiB5hF,EAAQoiF,EAAgB,GAAK,KAC9DT,EAAuBtgI,KAAKoa,EAAWnK,EAAO1S,OAC9C8lB,KAAK65G,wBAAwB9iH,EAAWnK,EAAO1S,OAAS,GAE5D6c,GAAYmmH,MAEP92H,GAAM8U,WAAW,aAAgC,IAAjB9U,EAAMhM,QAAgB,KAAK2zD,KAAK3nD,EAAM,MAC3E42H,EAASrgI,KAAKoa,GACdA,GAAYiJ,KAAKs8G,WAAWv+H,EAAQgZ,EAAU8lH,IAG9C9lH,GAAY3Q,EAAMhM,OAAS,MA5E/B,GAAG,CAEC,KADE2c,GACc3c,EACZ,KAEJsG,GAAK3C,EAAOgZ,SAjCf,KAkCQrW,GAjCR,KAiCqBA,SAVpBqW,EAoFV,IAASxc,EAAI,EAAGA,EAAI0iI,EAAuB7iI,SAAUG,EACjDylB,KAAKk6G,gBAAgBv9H,KAAKsgI,EAAuB1iI,IACjDylB,KAAKw6G,WAAU,EAGnB,KAAK,GADDmD,GACKpjI,EAAI,EAAGA,EAAIyiI,EAAS5iI,SAAUG,EAAG,CACtCqS,EAAOmK,SAAWimH,EAASziI,EAC3B,IAAIu+H,GAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,GAASoT,MAAM,GAAM,EAEzE,IAAKtC,GADKo7G,EAAO7D,YACI,WAArB,CAGA,GAAIryH,GAAak2H,EAAO7D,WACxB,IAAMryH,YAAsBO,IAA5B,CAGA,IACI,GAAIy6H,GAAWh7H,EAAWY,IAAI,OAC9B,MAAMo6H,YAAoBz6H,KACtB,QAEJ,IAAI06H,GAAYD,EAASp6H,IAAI,QAC7B,MAAMq6H,YAAqB16H,KACvB,QAEJ,IAAI26H,GAAaD,EAAUr6H,IAAI,QAC/B,QAA0B,KAAfs6H,IAA+BrjI,OAAOsE,UAAU++H,GACvD,SAGR,MAAOvI,GACH,SAEJ,GAAI3yH,EAAWS,IAAI,MACf,MAAOT,EAEX+6H,GAAc/6H,IAElB,GAAI+6H,EACA,MAAOA,EAEX,IAAI39G,KAAKm8G,eACL,MAAOn8G,MAAKm8G,cAEhB,MAAM,IAAIte,IAAc,yBAA0B,wBAEtD8b,EAAmBtkH,UAAU6mH,kBAAoB,SAAUpD,GACvD,OAAgC,KAArB94G,KAAK+9G,YAA6B,CACzC,GAAIC,GAAa,GAAIC,GACrBD,GAAWE,SAAW,EACtBF,EAAW1I,UAAYwD,EAAOpD,gBAAgB9oH,OAAOmK,SACrDinH,EAAWG,WAAarF,EAAOl6H,MAC/Bo/H,EAAWI,WAAatF,EAAOj6H,OAC/BmhB,KAAK+9G,YAAcC,EAGvB,IAAKtgH,GADKsC,KAAKq+G,eAAevF,GACT,WACjB,KAAM,IAAI/a,IAAY,wDAE1B,IACIn7G,GADA07H,EAAgBxF,EAAO7D,WAU3B,IARIqJ,IACIA,YAAyBn7H,IACzBP,EAAa07H,EAERA,YAAyBnyH,KAAkBmyH,EAAc17H,aAC9DA,EAAa07H,EAAc17H,cAG9BA,EACD,KAAM,IAAIm7G,IAAY,8DAG1B,OADA/9F,MAAK+9G,gBAAct6H,GACZb,GAEX+2H,EAAmBtkH,UAAUgpH,eAAiB,SAAUvF,GACpD,GAAIlsH,GAASksH,EAAOpD,gBAAgB9oH,MACpCA,GAAOmK,SAAWiJ,KAAK+9G,YAAYzI,UACnCwD,EAAOl6H,MAAQohB,KAAK+9G,YAAYI,WAChCrF,EAAOj6H,OAASmhB,KAAK+9G,YAAYK,UAEjC,KADA,GAAIlkG,KACS,CACT,OAA8C,KAAnCla,KAAK+9G,YAAYQ,mBAAwE,KAAhCv+G,KAAK+9G,YAAYS,WAA4B,CAE7G,GADAtkG,EAAM4+F,EAAO7D,YACTv3G,GAAWwc,EAAK,WAChB,KAEJla,MAAK+9G,YAAYQ,cAAgBrkG,EACjCla,KAAK+9G,YAAYS,WAAa1F,EAAO7D,YAEzC,GAAIr2H,GAAQohB,KAAK+9G,YAAYQ,cACzBj0H,EAAQ0V,KAAK+9G,YAAYS,UAC7B,KAAK/jI,OAAOsE,UAAUH,KAAWnE,OAAOsE,UAAUuL,GAC9C,KAAM,IAAIyzG,IAAY,4DAE1B,KAAK,GAAIxjH,GAAIylB,KAAK+9G,YAAYG,SAAU3jI,EAAI+P,EAAO/P,IAAK,CACpDylB,KAAK+9G,YAAYzI,UAAY1oH,EAAOmK,SACpCiJ,KAAK+9G,YAAYG,SAAW3jI,EAC5BylB,KAAK+9G,YAAYI,WAAarF,EAAOl6H,MACrCohB,KAAK+9G,YAAYK,WAAatF,EAAOj6H,MACrC,IAAI4G,GAAQ,GAAI43H,GAChB53H,GAAM9D,OAASm3H,EAAO7D,YACtBxvH,EAAMy4G,IAAM4a,EAAO7D,WACnB,IAAIvmH,GAAOoqH,EAAO7D,WAClB,IAAIvmH,EACA,OAAQA,EAAKiP,SACT,IAAK,IACDlY,EAAM81H,MAAO,CACb,MACJ,KAAK,IACD91H,EAAM+1H,cAAe,EAIjC,IAAK/gI,OAAOsE,UAAU0G,EAAM9D,UAAYlH,OAAOsE,UAAU0G,EAAMy4G,OAAUz4G,EAAM81H,OAAQ91H,EAAM+1H,aACzF,KAAM,IAAIzd,IAAY,gDAAkDn/G,EAAQ,KAAO0L,EAEjF,KAAN/P,GAAWkL,EAAM81H,MAAkB,IAAV38H,IACzBA,EAAQ,GAEPohB,KAAK45G,SAASr/H,EAAIqE,KACnBohB,KAAK45G,SAASr/H,EAAIqE,GAAS6G,GAGnCua,KAAK+9G,YAAYG,SAAW,EAC5Bl+G,KAAK+9G,YAAYzI,UAAY1oH,EAAOmK,SACpCiJ,KAAK+9G,YAAYI,WAAarF,EAAOl6H,MACrCohB,KAAK+9G,YAAYK,WAAatF,EAAOj6H,OACrCmhB,KAAK+9G,YAAYQ,kBAAgB96H,GACjCuc,KAAK+9G,YAAYS,eAAa/6H,GAElC,GAAIuc,KAAK45G,SAAS,KAAO55G,KAAK45G,SAAS,GAAG2B,KACtC,KAAM,IAAIxd,IAAY,8CAE1B,OAAO7jF,IAEXy/F,EAAmBtkH,UAAU+mH,mBAAqB,SAAUxvH,GACxD,OAAiC,KAAtBoT,KAAKy+G,aAA8B,CAC1C,GAAIC,GAAmB9xH,EAAOhK,WAC1B+7H,EAAc,GAAIC,IAClB1iI,EAAQwiI,EAAiBn7H,SAAS,QACjCrH,KACDA,GAAS,EAAGwiI,EAAiBl7H,IAAI,UAErCm7H,EAAYE,YAAc3iI,EAC1ByiI,EAAYG,WAAaJ,EAAiBn7H,SAAS,KACnDo7H,EAAYT,SAAW,EACvBS,EAAYrJ,UAAY1oH,EAAOmK,SAC/BiJ,KAAKy+G,aAAeE,EAIxB,MAFA3+G,MAAK++G,gBAAgBnyH,GACrBoT,KAAKy+G,iBAAeh7H,GACbmJ,EAAOhK,YAElB+2H,EAAmBtkH,UAAU0pH,gBAAkB,SAAUnyH,GACrDA,EAAOmK,SAAWiJ,KAAKy+G,aAAanJ,SAKpC,KAJA,GAAI0J,GAAiBh/G,KAAKy+G,aAAaK,WAAW,GAC9CG,EAAmBj/G,KAAKy+G,aAAaK,WAAW,GAChDI,EAAuBl/G,KAAKy+G,aAAaK,WAAW,GACpDD,EAAc7+G,KAAKy+G,aAAaI,YAC7BA,EAAYzkI,OAAS,GAAG,CAC3B,GAAIwE,GAAQigI,EAAY,GACpBj9F,EAAIi9F,EAAY,EACpB,KAAKpkI,OAAOsE,UAAUH,KAAWnE,OAAOsE,UAAU6iC,GAC9C,KAAM,IAAIm8E,IAAY,8BAAgCn/G,EAAQ,KAAOgjC,EAEzE,KAAKnnC,OAAOsE,UAAUigI,KAAoBvkI,OAAOsE,UAAUkgI,KAAsBxkI,OAAOsE,UAAUmgI,GAC9F,KAAM,IAAInhB,IAAY,qCAAuCn/G,EAAQ,KAAOgjC,EAEhF,KAAK,GAAIrnC,GAAIylB,KAAKy+G,aAAaP,SAAU3jI,EAAIqnC,IAAKrnC,EAAG,CACjDylB,KAAKy+G,aAAaP,SAAW3jI,EAC7BylB,KAAKy+G,aAAanJ,UAAY1oH,EAAOmK,QAIrC,KAAK,GAHDrI,GAAO,EACP/M,EAAS,EACTw9H,EAAa,EACR3kI,EAAI,EAAGA,EAAIwkI,IAAkBxkI,EAAG,CACrC,GAAI4kI,GAAWxyH,EAAO2zG,SACtB,KAAkB,IAAd6e,EACA,KAAM,IAAIrhB,IAAY,2CAE1BrvG,GAAQA,GAAQ,EAAK0wH,EAEF,IAAnBJ,IACAtwH,EAAO,EAEX,KAASlU,EAAI,EAAGA,EAAIykI,IAAoBzkI,EAAG,CACvC,GAAI6kI,GAAazyH,EAAO2zG,SACxB,KAAoB,IAAhB8e,EACA,KAAM,IAAIthB,IAAY,6CAE1Bp8G,GAAUA,GAAU,EAAK09H,EAE7B,IAAS7kI,EAAI,EAAGA,EAAI0kI,IAAwB1kI,EAAG,CAC3C,GAAI8kI,GAAiB1yH,EAAO2zG,SAC5B,KAAwB,IAApB+e,EACA,KAAM,IAAIvhB,IAAY,iDAE1BohB,GAAcA,GAAc,EAAKG,EAErC,GAAI75H,GAAQ,GAAI43H,GAGhB,QAFA53H,EAAM9D,OAASA,EACf8D,EAAMy4G,IAAMihB,EACJzwH,GACJ,IAAK,GACDjJ,EAAM81H,MAAO,CACb,MACJ,KAAK,GACD91H,EAAM+1H,cAAe,CACrB,MACJ,KAAK,GACD,KACJ,SACI,KAAM,IAAIzd,IAAY,4BAA8BrvG,GAEvDsR,KAAK45G,SAASh7H,EAAQrE,KACvBylB,KAAK45G,SAASh7H,EAAQrE,GAAKkL,GAGnCua,KAAKy+G,aAAaP,SAAW,EAC7Bl+G,KAAKy+G,aAAanJ,UAAY1oH,EAAOmK,SACrC8nH,EAAY/yE,OAAO,EAAG,KAG9B6tE,EAAmBtkH,UAAUmyG,eAAiB,WAC1C,MAAOxnG,MAAK01C,OAEhBikE,EAAmBtkH,UAAU2oC,MAAQ,WACjC,GAAIjgD,IAAU,GAAI,GAAI,GAAI,GAAI,GAI9B,IAHAiiB,KAAKwgB,aAAa,GAAKxgB,KAAKoS,SAAWpS,KAAKC,SAAUliB,GACtDA,EAAOpB,KAAK,GAAM,IAAM,IAAM,IAAM,KACpCqjB,KAAKwgB,aAAaxgB,KAAKC,SAAUliB,GAC5BiiB,KAAK1G,UAAU2hH,cAAcC,oBAY7B,CACDl7G,KAAKu/G,eAAiBv/G,KAAKG,QAAQ/lB,MACnC,IAAIolI,IAAY,GAAI,GAAI,GAAI,GAAI,GAChCx/G,MAAKwgB,aAAa,GAAKxgB,KAAKoS,SAAWpS,KAAKC,SAAUu/G,GACtDA,EAAS7iI,KAAK,GAAM,IAAM,IAAM,IAAM,KACtCqjB,KAAKwgB,aAAaxgB,KAAKC,SAAUu/G,GAC7Bx/G,KAAK1G,UAAU0iH,eAAeC,sBAAwBj+G,wBAAsBpR,OAC5EoT,KAAKy/G,cAAcz/G,KAAKu/G,eAAgBC,GAGxCx/G,KAAK0/G,aAAa1/G,KAAKu/G,eAAgBC,EAE3C,IAAIl/H,GAAQ,GAAI5B,YAAWshB,KAAKG,QAAQ/lB,OAASolI,EAASplI,OAG1D,OAFAkG,GAAMwB,IAAIke,KAAKG,QAAQ3hB,OACvB8B,EAAMwB,IAAI09H,EAAUx/G,KAAKG,QAAQ/lB,QAC1BkG,EA1BP0f,KAAKu/G,eAAiB,CACtB,IAAII,GAAmB,GAAIC,IAAyB5/G,KACpDA,MAAK6/G,uBAAuBF,EAAiBG,sBAAuB/hI,EACpE,IAAI6O,GAAS,GAAIsI,IAAWnX,EAM5B,OALAiiB,MAAKG,QAAUvT,EACfoT,KAAK1G,UAAU6G,QAAUvT,GACrBtM,EAAQ,GAAI5B,YAAWshB,KAAKG,QAAQ/lB,SAClC0H,IAAIke,KAAKG,QAAQ3hB,OACvB8B,EAAMwB,IAAI/D,EAAQ,GACXuC,GAoBfq5H,EAAmBtkH,UAAUoqH,cAAgB,SAAUM,EAAehiI,GAClE,GAAImqB,GAAQlI,KACRggH,EAAyB,GAAI93F,IACjCloB,MAAKwpB,YACLxpB,KAAKwpB,SAAS7sC,KAAK,EAAG,GACtBqjB,KAAKtL,UAAUrI,QAAQ,SAAU7S,EAAO0H,GACpC,GAAI0B,EAIJ,IAHIpJ,YAAiB2S,MACjBvJ,EAAapJ,EAAMoJ,YAEnBA,GAAcA,EAAWgR,YAAchR,EAAWw9G,WAAal4F,EAAM2/F,eAAgB,CACrF,GAAIlD,OAAS,EACTz8F,GAAMgpG,WACNvM,EAASz8F,EAAMgpG,SAAS/D,uBAAuBjsH,EAAI8jE,aAAc9jE,EAAI+jE,mBAEzE/8C,EAAM+3G,mBAAmBF,EAAe7+H,EAAKnD,EAAQvE,EAAOmrH,MAGpE3kG,KAAKtL,UAAUrI,QAAQ,SAAU7S,EAAO0H,GACpC,GAAI1H,YAAiB2J,KACb3J,EAAMoa,UAAcpa,EAAM4mH,YAAal4F,EAAM2/F,eAC7C3/F,EAAMg4G,qBAAqBF,EAAwB9+H,EAAK1H,OAG3D,IAAIA,YAAiB2S,IAAgB,CACtC,GAAIvJ,GAAapJ,EAAMoJ,UACnBA,IAAcA,EAAWgR,YAAchR,EAAWw9G,WAAal4F,EAAM2/F,gBACrE3/F,EAAM+3G,mBAAmBF,EAAe7+H,EAAKnD,EAAQvE,MAIjEwmB,KAAKmgH,kBAAgB18H,GACrBuc,KAAKogH,wBAA0BJ,EAC/BhgH,KAAKqgH,iBAAiBtiI,IAE1B47H,EAAmBtkH,UAAU4qH,mBAAqB,SAAUF,EAAe7+H,EAAKnD,EAAQvE,EACxFmrH,GACI3kG,KAAKwpB,SAAS7sC,KAAKuE,EAAI8jE,aAAc,GACrChlD,KAAK0d,SAAS/gC,KAAKojI,EAAgBhiI,EAAO3D,QAC1C4lB,KAAKy3C,aAAaj+D,EAAOuE,EAAQmD,EAAKyjH,GACtCnrH,EAAMoa,UAAW,GAErB+lH,EAAmBtkH,UAAUgrH,iBAAmB,SAAUtiI,GACtD,GAAImqB,GAAQlI,IACZA,MAAKogH,wBAAwB/zH,QAAQ,SAAU7S,EAAO0H,GAClD1H,EAAMwkD,MAAMjgD,EAAQmqB,EAAMq3G,eAC1B,KAAK,GAAIhlI,GAAI,EAAGA,EAAIf,EAAM8qG,YAAYlqG,OAAQG,IAC1C2tB,EAAMshB,SAAS7sC,KAAKnD,EAAM8qG,YAAY7pG,OAAOC,SAASH,EAAEI,WAAY,KAExEutB,GAAMshB,SAAS7sC,KAAKuE,EAAI8jE,aAAc,IAE1C,IAAIs7D,GAAc5mI,KAAKW,IAAIghB,GAAS2E,KAAKu/G,eAAiBxhI,EAAO3D,QAASihB,GAAS2E,KAAK06G,uBACpF6F,EAASvgH,KAAKigC,mBAClBjgC,MAAKwpB,SAAS7sC,KAAK4jI,EAAOv7D,aAAc,EACxC,IAAIw7D,GAAexgH,KAAKu/G,eAAiBxhI,EAAO3D,OAC5CqmI,EAAU,GAAIt9H,IAAe6c,KACjCygH,GAAQ3+H,IAAI,OAAQ6E,GAASnD,IAAI,SACjCi9H,EAAQ3+H,IAAI,QAASke,KAAKwpB,UAC1Bi3F,EAAQ3+H,IAAI,KAAM,EAAGw+H,EAAa,IAClCtgH,KAAK0gH,aAAaD,GACdzgH,KAAK86G,MAAQ96G,KAAK86G,KAAK1gI,OAAS,GAChCqmI,EAAQ52H,OAAO,MAAOmW,KAAK86G,KAAK,GAAI96G,KAAK2gH,sBAAsBH,IAEnE,IAAII,KAIJ,IAHA5gH,KAAK6gH,WAAW,EAAG,EAAGD,GACtB5gH,KAAK6gH,WAAW,EAAGP,EAAaM,GAChC5gH,KAAK6gH,YAAY,EAAG,EAAGD,GACnB5gH,KAAK0d,SAAStjC,OAAS,EACvB,IAAK,GAAI8B,GAAQ,EAAGA,EAAQ8jB,KAAK0d,SAAStjC,OAAQ8B,IAC9C8jB,KAAK6gH,WAAW,EAAG,EAAGD,GACtB5gH,KAAK6gH,WAAW7gH,KAAK0d,SAASxhC,GAAQokI,EAAaM,GACnD5gH,KAAK6gH,WAAW,EAAG,EAAGD,EAG1B5gH,MAAKogH,wBAAwBtkI,KAAO,GACpCkkB,KAAKogH,wBAAwB/zH,QAAQ,SAAU7S,EAAO0H,GAClD,IAAK,GAAIhF,GAAQ,EAAGA,EAAQ1C,EAAMyyB,QAAS/vB,IACvCgsB,EAAM24G,WAAW,EAAG,EAAGD,GACvB14G,EAAM24G,WAAW3/H,EAAI8jE,aAAcs7D,EAAaM,GAChD14G,EAAM24G,WAAW3kI,EAAO,EAAG0kI,EAE/B14G,GAAM24G,WAAW,EAAG,EAAGD,GACvB14G,EAAM24G,WAAWrnI,EAAMsnI,eAAgBR,EAAaM,GACpD14G,EAAM24G,WAAW,EAAG,EAAGD,KAG/B5gH,KAAK6gH,WAAW,EAAG,EAAGD,GACtB5gH,KAAK6gH,WAAWL,EAAcF,EAAaM,GAC3C5gH,KAAK6gH,WAAW,EAAG,EAAGD,GACtBH,EAAQ3+H,IAAI,SAAU8+H,EAAYxmI,OAClC,IACIuqH,GADAoc,EAAgB,GAAI7rH,IAAW0rH,EAAaH,EAAS,EAAGG,EAAYxmI,OAEpE4lB,MAAKkxG,WACLvM,EAAS3kG,KAAKkxG,SAAS/D,uBAAuBoT,EAAOv7D,aAAcu7D,EAAOt7D,mBAE9EjlD,KAAKy3C,aAAaspE,EAAehjI,EAAQwiI,EAAQ5b,GAAQ,GACzD3kG,KAAKwgB,aAAa,YAAcxgB,KAAKC,SAAWugH,EAAexgH,KAAKC,SAAW,QAAUD,KAAKC,SAAUliB,IAE5G47H,EAAmBtkH,UAAUqqH,aAAe,SAAUK,EAAehiI,GACjE,GAAImqB,GAAQlI,KACRghH,EAAa,EACjBhhH,MAAKtL,UAAUrI,QAAQ,SAAU7S,EAAO0H,GACpC,GAAI0B,EAOJ,IANIpJ,YAAiB2J,IACjBP,EAAapJ,EAERA,YAAiB2S,MACtBvJ,EAAapJ,EAAMoJ,YAEnBA,GAAcA,EAAWgR,YAAchR,EAAWw9G,WAAal4F,EAAM2/F,eAAgB,CACrF,GAAIoZ,GAAe/4G,EAAMg5G,gBAAgBnB,EAAgBhiI,EAAO3D,QAAQO,WAAY,IAChFwmI,EAAYj5G,EAAMg5G,eAAehgI,EAAI+jE,iBAAiBtqE,WAAY,EACtEqmI,IAAc9/H,EAAI8jE,aAAe,KAAO98C,EAAMjI,SAAWghH,EAAe,IAAME,EAAY,KAAOj5G,EAAMjI,SACvGiI,EAAMuvC,aAAaj+D,EAAOuE,EAAQmD,KAG1C,IAAIs/H,GAAeziI,EAAO3D,OAAS2lI,CACnC//G,MAAKwgB,aAAa,OAASxgB,KAAKC,SAAW,MAAQD,KAAKC,SAAW,qBAAuBD,KAAKC,SAAUliB,GACzGiiB,KAAKohH,WAAWrjI,EAAQijI,EAAYR,IAExC7G,EAAmBtkH,UAAU+rH,WAAa,SAAUrjI,EAAQijI,EAAYR,GACpExgH,KAAKwgB,aAAawgG,EAAYjjI,GAC9BiiB,KAAKwgB,aAAa,UAAYxgB,KAAKC,SAAUliB,EAC7C,IAAI0iI,GAAU,GAAIt9H,IAAe6c,KACjCA,MAAK0gH,aAAaD,GAClBzgH,KAAKq2C,iBAAiBoqE,EAAS1iI,EAAQiiB,KAAKC,UAC5CD,KAAKwgB,aAAa,YAAcxgB,KAAKC,SAAWugH,EAAexgH,KAAKC,SAAW,QAAUD,KAAKC,SAAUliB,IAE5G47H,EAAmBtkH,UAAUgsH,gBAAkB,SAAUtjI,GACrD,GAAImqB,GAAQlI,KACRghH,EAAa,GACbloG,EAAa9Y,KAAKshH,qBAAqBthH,KAAK85G,iBAChDhhG,GAAWzsB,QAAQ,SAAU7S,EAAO0H,GAChC,GAAI+/H,GAAe/4G,EAAMg5G,eAAe1nI,EAAMmB,WAAY,IACtDwmI,EAAYj5G,EAAMg5G,eAAehgI,EAAI+jE,iBAAmB,IAAM,GAAI,EAElE+7D,IADU,IAAVxnI,EACcynI,EAAe,IAAME,EAAY,KAAOj5G,EAAMjI,SAG9CghH,EAAe,IAAME,EAAY,KAAOj5G,EAAMjI,UAGpE,IAAIugH,GAAeziI,EAAO3D,OACtBmnI,EAAa,OAASvhH,KAAKC,SAC3Bq7G,EAAY,MAAQxiG,EAAWh9B,KAAO,GAAKkkB,KAAKC,SAChDuhH,EAAe,qBAAuBxhH,KAAKC,QAC/CD,MAAKwgB,aAAa+gG,EAAajG,EAAYkG,EAAczjI,GACzDiiB,KAAKohH,WAAWrjI,EAAQijI,EAAYR,IAExC7G,EAAmBtkH,UAAU6rH,eAAiB,SAAU1nI,EAAOY,GAC3D,KAAOZ,EAAMY,OAASA,GAClBZ,EAAQ,IAAMA,CAElB,OAAOA,IAEXmgI,EAAmBtkH,UAAUqrH,aAAe,SAAUD,GAClD,GAAIl1H,GAAYyU,KAAKigC,mBACrBwgF,GAAQ3+H,IAAI,OAAQyJ,EAAUy5D,cAC1BhlD,KAAK1G,UAAU2hH,cAAcC,qBAC7BuF,EAAQ3+H,IAAI,OAAQke,KAAKo6G,gBAE7B,IAAIxoE,GAAO5xC,KAAK26G,SAAS9tH,OAAO,YACZ,KAAT+kD,GAAiC,OAATA,GAC/B6uE,EAAQ3+H,IAAI,OAAQ8vD,EAExB,IAAI5kC,GAAOhN,KAAK26G,SAAS9tH,OAAO,YACZ,KAATmgB,GAAiC,OAATA,GAC/ByzG,EAAQ3+H,IAAI,OAAQkrB,EAExB,IAAI4tG,GAAU56G,KAAK26G,SAAS9tH,OAAO,eACZ,KAAZ+tH,GAAuC,OAAZA,GAClC6F,EAAQ3+H,IAAI,UAAW84H,IAG/BjB,EAAmBtkH,UAAUsrH,sBAAwB,SAAU7kI,GAC3D,GAAIosB,GAAQlI,KAERjiB,GADOrE,KAAK8iB,MAAM2mE,KAAKs+C,MAAQ,KAChB9mI,WAAY,GAAImB,EAAKnB,YACpCqyB,EAAOhN,KAAK26G,SAAS9tH,OAAO,QAC5B60H,EAAqB,GAAIv+H,GACzB6pB,IAAQA,YAAgB7pB,KACxB6pB,EAAK3gB,QAAQ,SAAUnL,EAAK1H,GACpBA,GAA0B,gBAAVA,IAChBkoI,EAAmB5/H,IAAIZ,EAAK3D,EAAmB/D,MAI3DkoI,EAAmBr1H,QAAQ,SAAUnL,EAAK1H,GACtCuE,EAAOpB,KAAKnD,IAEhB,IAAI8G,KAIJ,OAHAvC,GAAOsO,QAAQ,SAAUm8B,GACrBtgB,EAAMsY,aAAagI,EAAKloC,KAErBlB,GAAgB,GAAIktH,KAAOM,KAAK,GAAIluH,YAAW4B,MAE1Dq5H,EAAmBtkH,UAAU4qC,kBAAoB,WAC7C,GAAI10C,GAAY,GAAIG,IAAcsU,KAAK06G,uBAAwB,EAE/D,OADAnvH,GAAU+I,QAAS,EACZ/I,GAEXouH,EAAmBtkH,UAAUoiD,aAAe,SAAUv9B,EACtDn8B,EAAQwN,EAAWo2H,EAAWC,GAC1B,GAAI15G,GAAQlI,IACRzU,IAAaA,YAAqBG,KAClCsU,KAAKwgB,aAAaj1B,EAAUy5D,aAAe,IAAMz5D,EAAU05D,iBAAmB,OAASjlD,KAAKC,SAAUliB,GAEtGm8B,YAAe/2B,IACf6c,KAAKq2C,iBAAiBn8B,EAAKn8B,EAAQiiB,KAAKC,SAAU0hH,EAAWC,GAExD1nG,YAAe/tB,IACpB6T,KAAK6hH,aAAa3nG,EAAKn8B,EAAQ4jI,EAAWC,GAErCtgI,MAAMuB,QAAQq3B,IAAQA,EAAI9/B,OAAS,GACxC4lB,KAAKwgB,aAAa,KAAMziC,GACxBm8B,EAAI7tB,QAAQ,SAAU7S,EAAO0C,GACrB1C,YAAiBkS,IACjBwc,EAAMsY,aAAahnC,EAAMwrE,aAAe,IAAMxrE,EAAMyrE,iBAAmB,KAAMlnE,GAExEuD,MAAMuB,QAAQrJ,IACnB0uB,EAAMsY,aAAa,KAAMziC,GACzBvE,EAAM6S,QAAQ,SAAUy1H,GAChBA,YAAuBp2H,IACvBwc,EAAMsY,aAAashG,EAAY98D,aAAe,IAAM88D,EAAY78D,iBAAmB,KAAMlnE,GAEpF+jI,YAAuBn7H,IAC5BuhB,EAAMsY,aAAa,IAAMshG,EAAYt4H,KAAMzL,GAG3CmqB,EAAMsY,aAAashG,EAAc,IAAK/jI,KAG9CmqB,EAAMsY,aAAa,IAAKziC,IAEnBvE,YAAiBmN,IACtBuhB,EAAMsY,aAAa,IAAMhnC,EAAMgQ,KAAMzL,GAEhCvE,YAAiB2J,IACtB+kB,EAAMmuC,iBAAiB78D,EAAOuE,EAAQmqB,EAAMjI,SAAU0hH,EAAWC,GAGjE15G,EAAMsY,aAAahnC,EAAQ,KAAMuE,GAEjC7B,EAAQg+B,EAAI9/B,OAAS,GACrB8tB,EAAMsY,aAAa,IAAKziC,KAGhCiiB,KAAKwgB,aAAa,IAAKziC,GACvBiiB,KAAKwgB,aAAa,KAAMziC,IAEJ,gBAARm8B,IACZla,KAAKwgB,aAAatG,EAAM,KAAMn8B,GAE9BwN,GAAaA,YAAqBG,KAClCsU,KAAKwgB,aAAa,SAAWxgB,KAAKC,SAAUliB,IAGpD47H,EAAmBtkH,UAAUghD,iBAAmB,SAAUzzD,EAAY7E,EAAQgkI,EAAWJ,EAAWC,GAChG,GAAI15G,GAAQlI,IACRpd,GAAW8iC,aACX9iC,EAAW8iC,YAAYvC,aAEvBvgC,EAAWqsB,SACXjP,KAAKgiH,qBAAqBp/H,GAE9Bod,KAAKwgB,aAAa,KAAOuhG,EAAWhkI,GACpC6E,EAAWyJ,QAAQ,SAAUnL,EAAK1H,GAC9B0uB,EAAMsY,aAAa,IAAMx2B,EAAe9I,GAAO,IAAKnD,GACpDmqB,EAAM+5G,YAAYzoI,EAAOuE,EAAQ4jI,EAAWC,GAC5C15G,EAAMsY,aAAauhG,EAAWhkI,KAElCiiB,KAAKwgB,aAAa,KAAOxgB,KAAKC,SAAUliB,IAE5C47H,EAAmBtkH,UAAU2sH,qBAAuB,SAAUp/H,GAC1D,GAAIA,EAAWS,IAAI,mBAAoB,CACnC,GAAI6S,GAAQtT,EAAWY,IAAI,mBACvB+H,EAAYyU,KAAKigC,mBACrBjgC,MAAKtL,UAAU5S,IAAIyJ,EAAW2K,GAC9BtT,EAAWiH,OAAO,mBAAoB0B,IAE1C,GAAI3I,EAAWS,IAAI,aAAc,CAC7B,GAAI6S,GAAQtT,EAAWY,IAAI,aACvB+H,EAAYyU,KAAKigC,mBACrBjgC,MAAKtL,UAAU5S,IAAIyJ,EAAW2K,GAC9BtT,EAAWiH,OAAO,YAAa0B,GAEnC,GAAI3I,EAAWS,IAAI,aAAc,CAC7B,GAAI6S,GAAQtT,EAAWY,IAAI,aACvB+H,EAAYyU,KAAKigC,mBACrBjgC,MAAKtL,UAAU5S,IAAIyJ,EAAW2K,GAC9BtT,EAAWiH,OAAO,YAAa0B,GAEnC,GAAI3I,EAAWS,IAAI,kBAAmB,CAClC,GAAI6S,GAAQtT,EAAWY,IAAI,kBACvB+H,EAAYyU,KAAKigC,mBACrBjgC,MAAKtL,UAAU5S,IAAIyJ,EAAW2K,GAC9BtT,EAAWiH,OAAO,iBAAkB0B,KAG5CouH,EAAmBtkH,UAAUwsH,aAAe,SAAUj1H,EAAQ7O,EAAQ4jI,EAAWC,GAC7E,GAAIpoI,GACA0oI,IACCN,GAYDpoI,EAAQoT,EAAOiQ,aAVXrjB,EADAoT,EAAOkyD,cAAgBlyD,EAAO0zG,SACtB3jG,GAAgB/P,GAGhBA,EAAOiQ,YAEf8kH,IACAnoI,EAAQmoI,EAAUrO,cAAc95H,KAMxCwmB,KAAKwgB,aAAahnC,EAAO0oI,GACzBt1H,EAAOhK,WAAWiH,OAAO,SAAUq4H,EAAa9nI,QAChD4lB,KAAKq2C,iBAAiBzpD,EAAOhK,WAAY7E,EAAQiiB,KAAKC,SAAU0hH,EAAWC,GAC3E5hH,KAAKwgB,aAAa,SAAWxgB,KAAKC,SAAUliB,GAC5CiiB,KAAK8gB,YAAYohG,EAAcnkI,GAC/BiiB,KAAKwgB,aAAaxgB,KAAKC,SAAW,YAAcD,KAAKC,SAAUliB,IAEnE47H,EAAmBtkH,UAAU4sH,YAAc,SAAUzoI,EAAOuE,EAAQ4jI,EAAWC,GAC3E,GAAIpoI,YAAiBmN,KACgB,IAA7BnN,EAAMgQ,KAAKjI,QAAQ,OACnB/H,EAAMgQ,KAAOhQ,EAAMgQ,KAAKnI,QAAQ,KAAM,QAE1C2e,KAAKwgB,aAAa,IAAMhnC,EAAMgQ,KAAMzL,OAEnC,IAAIvE,YAAiBkS,IACtBsU,KAAKwgB,aAAahnC,EAAMmB,WAAa,KAAMoD,OAE1C,IAAIuD,MAAMuB,QAAQrJ,GAAQ,CAC3BwmB,KAAKwgB,aAAa,IAAKziC,EAEvB,KAAK,GADDa,IAAQ,EACHgD,EAAK,EAAGugI,EAAU3oI,EAAOoI,EAAKugI,EAAQ/nI,OAAQwH,IAAM,CACzD,GAAIgjG,GAAMu9B,EAAQvgI,EACbhD,GAIDA,GAAQ,EAHRohB,KAAKwgB,aAAa,IAAKziC,GAK3BiiB,KAAKiiH,YAAYr9B,EAAK7mG,EAAQ4jI,EAAWC,GAE7C5hH,KAAKwgB,aAAa,IAAKziC,OAEtB,IAAqB,gBAAVvE,GAAoB,EAC3BooI,GAAoBD,IACrBnoI,EAAQmoI,EAAUrO,cAAc95H,GAGpC,KAAK,GADD8nC,IAAY,EACP/mC,EAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAC9B,GAAIf,EAAMgE,YAAYjD,IAAM,IAAK,CAC7B+mC,GAAY,CACZ,OAGJA,EACAthB,KAAKoiH,oBAAoB5oI,EAAOuE,GAGhCiiB,KAAKwgB,aAAa,IAAMxgB,KAAKqiH,cAAc7oI,GAAS,IAAKuE,OAGvC,gBAAVvE,GACZwmB,KAAKwgB,aAAa1hC,EAAgBtF,GAAQuE,GAEpB,iBAAVvE,GACZwmB,KAAKwgB,aAAahnC,EAAMmB,WAAYoD,GAE/BvE,YAAiB2J,IACtB6c,KAAKq2C,iBAAiB78D,EAAOuE,EAAQiiB,KAAKC,SAAU0hH,EAAWC,GAE1DpoI,YAAiB2S,IACtB6T,KAAK6hH,aAAaroI,EAAOuE,EAAQ4jI,EAAWC,GAE7B,OAAVpoI,GACLwmB,KAAKwgB,aAAa,OAAQziC,IAGlC47H,EAAmBtkH,UAAU+sH,oBAAsB,SAAU5oI,EAAOuE,GAChE,GAAIukI,GAAahnH,GAAwB9hB,EACzC8oI,GAAWhyC,QAAQ,IAAK,IAExB,KAAK,GADD1tE,MACKroB,EAAI,EAAGA,EAAI+nI,EAAWloI,OAAQG,IAAK,CACxC,GAAIqF,GAAO0iI,EAAW7nI,OAAOC,SAASH,EAAEI,WAAY,IACpD,QAAQiF,GACJ,IAAK,IACL,IAAK,IACDgjB,EAAKjmB,KAAK,IACVimB,EAAKjmB,KAAKiD,EACV,MACJ,KAAK,IACDgjB,EAAKjmB,KAAK,IACVimB,EAAKjmB,KAAK,IACV,MACJ,KAAK,IACDimB,EAAKjmB,KAAK,IACVimB,EAAKjmB,KAAKiD,EACV,MACJ,SACIgjB,EAAKjmB,KAAKiD,IAItB7B,EAAOpB,KAAyB,IAApB,IAAIa,WAAW,GAC3B,KAASjD,EAAI,EAAGA,EAAIqoB,EAAKxoB,OAAQG,IAC7BwD,EAAOpB,KAA+C,IAA1CimB,EAAKnoB,OAAOC,SAASH,EAAEI,WAAY,KAEnDoD,GAAOpB,KAAyB,IAApB,IAAIa,WAAW,KAE/Bm8H,EAAmBtkH,UAAUmrB,aAAe,SAAUhnC,EAAOuE,GACzD,IAAK,GAAIxD,GAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAC9BwD,EAAOpB,KAA2B,IAAtBnD,EAAMgE,WAAWjD,KAGrCo/H,EAAmBtkH,UAAUyrB,YAAc,SAAUle,EAAM7kB,GACvD,IAAK,GAAIxD,GAAI,EAAGA,EAAIqoB,EAAKxoB,OAAQG,IAC7BwD,EAAOpB,KAAKimB,EAAKroB,KAGzBo/H,EAAmBtkH,UAAUwrH,WAAa,SAAUrnI,EAAO8Q,EAAOvM,GAC9D,IAAK,GAAIxD,GAAI+P,EAAQ,EAAG/P,GAAK,IAAKA,EAC9BwD,EAAOpB,KAAKnD,IAAUe,GAAK,GAAK,MAGxCo/H,EAAmBtkH,UAAUgtH,cAAgB,SAAU7oI,GACnD,MAAOA,GAAM6H,QAAQ,gBAAiB,SAAUd,GAC5C,MAAkB,OAAdA,EACO,MAEY,OAAdA,EACE,MAEJ,KAAOA,KAGtBo5H,EAAmBtkH,UAAUm3C,SAAW,WACpCxsC,KAAK45G,aAAWn2H,GACZuc,KAAK+5G,eACL/5G,KAAK+5G,aAAa14D,QAClBrhD,KAAK+5G,iBAAet2H,IAEpBuc,KAAKtL,WACLsL,KAAKtL,UAAU2sD,QAEfrhD,KAAK85G,kBACL95G,KAAK85G,iBAAiBz4D,QAEtBrhD,KAAKogH,yBACLpgH,KAAKogH,wBAAwB/+D,QAEjCrhD,KAAK0d,YACL1d,KAAKk6G,mBACLl6G,KAAK01C,UAAQjyD,GACbuc,KAAKk6G,oBAAkBz2H,GACvBuc,KAAKG,YAAU1c,GACfuc,KAAKy+G,iBAAeh7H,GACpBuc,KAAK+9G,gBAAct6H,GACnBuc,KAAKm8G,mBAAiB14H,GACtBuc,KAAK26G,aAAWl3H,GAChBuc,KAAKoS,aAAW3uB,GAChBuc,KAAK65G,4BAA0Bp2H,IAEnCk2H,EAAmBtkH,UAAUwqH,uBAAyB,SAAUF,EAAkB5hI,GAC9E,GAAImqB,GAAQlI,KACRggH,EAAyB,GAAI93F,IACjCloB,MAAKwpB,YACLxpB,KAAKwpB,SAAS7sC,KAAK,EAAG,GACtBgjI,EAAiBtzH,QAAQ,SAAU7S,EAAO0H,GACtCgnB,EAAMq6G,qBAAqBrhI,EAAK1H,EAAOuE,EAAQiiI,KAE/ChgH,KAAK1G,UAAU2hH,cAAcgB,sBAAwBj+G,wBAAsBpR,QAC3EoT,KAAKmgH,kBAAgB18H,GACrBuc,KAAKogH,wBAA0BJ,EAC/BhgH,KAAKqgH,iBAAiBtiI,IAGtBiiB,KAAKqhH,gBAAgBtjI,IAG7B47H,EAAmBtkH,UAAU6qH,qBAAuB,SAAUF,EAAwB9+H,EAAK1H,GACvF,OAAkC,KAAvBwmB,KAAKmgH,eAAgE,MAA/BngH,KAAKmgH,cAAcl0G,QAAiB,CACjF,GAAIu2G,GAAa,GAAIC,IAAoBziH,KACzCggH,GAAuBl+H,IAAI0gI,EAAWpiF,WAAYoiF,GAClDxiH,KAAKmgH,cAAgBqC,EAEzBxiH,KAAKmgH,cAAc1oE,aAAav2D,EAAK1H,IAEzCmgI,EAAmBtkH,UAAUktH,qBAAuB,SAAUrhI,EAAK1H,EAAOuE,EAC1EiiI,GACI,GAAIrb,EACJ,IAAInrH,YAAiB2J,KAAkB3J,EAAM4mH,UACzCpgG,KAAK0iH,eAAe3kI,EAAQmD,EAAK1H,OAEhC,IAAIA,YAAiB2J,IAAgB,CACtC,GAAIuL,GAAOlV,EAAMgK,IAAI,UACjBm/H,EAAej0H,GAAsB,aAAdA,EAAKlF,IAC5BwW,MAAK1G,UAAU2hH,cAAcgB,sBAAwBj+G,wBAAsBpR,OACtE+1H,EAID3iH,KAAK0iH,eAAe3kI,EAAQmD,EAAK1H,GAHjCwmB,KAAKkgH,qBAAqBF,EAAwB9+H,EAAK1H,IAO3DwmB,KAAK85G,iBAAiBh4H,IAAIZ,EAAKnD,EAAO3D,QACtC4lB,KAAKwpB,SAAS7sC,KAAKuE,EAAI8jE,aAAc,GACrChlD,KAAKy3C,aAAaj+D,EAAOuE,EAAQmD,QAGpC,CACD,GAAI1H,YAAiB2S,IAAgB,CACjC,GAAIvJ,GAAapJ,EAAMoJ,UACnBA,IAAcA,EAAWgR,WAAahR,EAAWw9G,YAC7CpgG,KAAKkxG,WACLvM,EAAS3kG,KAAKkxG,SAAS/D,uBAAuBjsH,EAAI8jE,aAAc9jE,EAAI+jE,mBAExEriE,EAAWgR,UAAW,OAGzB,MAAMtS,MAAMuB,QAAQrJ,IAA2B,IAAjBA,EAAMY,SAAkC,gBAAVZ,GAC7D,MAEJwmB,MAAK0iH,eAAe3kI,EAAQmD,EAAK1H,EAAOmrH,KAGhDgV,EAAmBtkH,UAAUqtH,eAAiB,SAAU3kI,EAAQmD,EAAK1H,EAAOmrH,GACxE3kG,KAAK0d,SAAS/gC,KAAKoB,EAAO3D,QAC1B4lB,KAAK85G,iBAAiBh4H,IAAIZ,EAAKnD,EAAO3D,QACtC4lB,KAAKwpB,SAAS7sC,KAAKuE,EAAI8jE,aAAc,GACrChlD,KAAKy3C,aAAaj+D,EAAOuE,EAAQmD,EAAKyjH,IAE1CgV,EAAmBtkH,UAAUisH,qBAAuB,SAAUxoG,GAC1D,GAAI8pG,KACJ9pG,GAAWzsB,QAAQ,SAAU7S,EAAO0H,GAChC0hI,EAAajmI,MAAMuE,EAAK1H,MAE5BopI,EAAatlG,KAAK,SAAUC,EAAG13B,GAC3B,MAAO03B,GAAE,GAAGynC,aAAen/D,EAAE,GAAGm/D,cAIpC,KAAK,GAFD69D,GAAmB,GAAI36F,KACvB46F,EAAmB,EACdlhI,EAAK,EAAGmhI,EAAiBH,EAAchhI,EAAKmhI,EAAe3oI,OAAQwH,IAAM,CAG9E,IAFA,GAAIwa,GAAK2mH,EAAenhI,GAAKV,EAAMkb,EAAG,GAAI5iB,EAAQ4iB,EAAG,GACjD4mH,EAAsB9hI,EAAI8jE,aACvB89D,EAAmBE,GACtBH,EAAiB/gI,KAAMkjE,aAAc89D,GAAoB,GACzDA,GAEJD,GAAiB/gI,IAAIZ,EAAK1H,GAC1BspI,EAAmBE,EAAsB,EAE7C,MAAOH,IAEJlJ,KAGP0D,GAAuC,WACvC,QAASA,MAET,MAAOA,MAEPY,GAAqC,WACrC,QAASA,MAET,MAAOA,MAEPW,GAAiC,WACjC,QAASA,MAET,MAAOA,MAEP6D,GAAqC,WACrC,QAASA,GAAoB3tH,GACzBkL,KAAKwpB,SAAW,GAChBxpB,KAAKiM,QAAU,EACfjM,KAAKjT,gBAAkB+H,EACvBkL,KAAKogC,WAAatrC,EAAemrC,oBACjCjgC,KAAKijH,aAAe,GACpBjjH,KAAKkjH,kBACLljH,KAAKskF,eAyBT,MAvBAm+B,GAAoBptH,UAAUoiD,aAAe,SAAUv2D,EAAK1H,GACxDwmB,KAAKijH,cAAgB/hI,EAAI8jE,aAAe,IAAMhlD,KAAKkjH,eAAe9oI,OAAS4lB,KAAKjT,gBAAgBkT,SAChGD,KAAKskF,YAAY3nG,KAAKuE,EAAI8jE,aAAc,GACxChlD,KAAKjT,gBAAgB0qD,aAAaj+D,EAAOwmB,KAAKkjH,gBAC9CljH,KAAKiM,WAETw2G,EAAoBptH,UAAU2oC,MAAQ,SAAUjgD,EAAQgiI,GACpD,GAAIn9G,KACJ5C,MAAKjT,gBAAgByzB,aAAaxgB,KAAKijH,aAAcrgH,GACrD5C,KAAKjT,gBAAgB+zB,YAAY9gB,KAAKkjH,eAAgBtgH,EACtD,IAAIugH,GAAU,GAAIhgI,IAAe6c,KAAKjT,gBACtCo2H,GAAQrhI,IAAI,OAAQ6E,GAASnD,IAAI,WACjC2/H,EAAQrhI,IAAI,IAAKke,KAAKiM,SACtBk3G,EAAQrhI,IAAI,QAASke,KAAKijH,aAAa7oI,QACvC+oI,EAAQrhI,IAAI,SAAU8gB,EAAKxoB,OAC3B,IAAIgpI,GAAgB,GAAIluH,IAAW0N,EAAMugH,EAAS,EAAGvgH,EAAKxoB,OAC1D4lB,MAAK8gH,eAAiBf,EAAgBhiI,EAAO3D,MAC7C,IAAIuqH,EACA3kG,MAAKjT,gBAAgBmkH,WACrBvM,EAAS3kG,KAAKjT,gBAAgBmkH,SAAS/D,uBAAuBntG,KAAKogC,WAAW4kB,aAAchlD,KAAKogC,WAAW6kB,mBAEhHjlD,KAAKjT,gBAAgB0qD,aAAa2rE,EAAerlI,EAAQiiB,KAAKogC,WAAYukE,IAEvE8d,KAEP7C,GAA0C,WAkB1C,QAASA,GAAyB9mG,GAC9B,GAAI5Q,GAAQlI,IAEZ,IADAA,KAAKqjH,SAAW,IACVvqG,EAAWpkB,oBAAqBwzB,MAClC,KAAM,IAAIhtC,OAAM,kCAEpB8kB,MAAKogC,cACLpgC,KAAKsjH,OAASxqG,EAAWpkB,UACzBsL,KAAK8/G,sBAAwB,GAAI53F,IACjC,IAAIq7F,IAAe,CACnBvjH,MAAKjT,gBAAkB+rB,EACvB9Y,KAAKsjH,OAAOj3H,QAAQ,SAAU7S,EAAO0H,IAC5BqiI,GAAgB/pI,YAAiB2J,KAAkB3J,EAAM4mH,YAC1Dl4F,EAAMs7G,2BAA2BtiI,EAAK1H,GACtC+pI,GAAe,KAGvBvjH,KAAKyjH,yBAkIT,MAhIA7D,GAAyBvqH,UAAUouH,uBAAyB,WAexD,IAdA,GAAIv7G,GAAQlI,KAaRs8C,EAASt8C,KACNA,KAAKqjH,SAAWrjH,KAAK8/G,sBAAsBhkI,OAbpC,WACV,GAAIg9B,GAAa,GAAIoP,KACjBwnC,EAAe,CACnBpT,GAAOwjE,sBAAsBzzH,QAAQ,SAAU7S,EAAO0H,GAC9CwuE,IAAiBxnD,EAAMm7G,WACvBvqG,EAAWh3B,IAAIZ,EAAK1H,GACpB0uB,EAAMmyG,OAAOn5H,EAAK1H,IAEtBk2E,MAEJpT,EAAO+mE,aAOX,OADArjH,MAAK0jH,iCACE1jH,KAAK8/G,uBAEhBF,EAAyBvqH,UAAUmuH,2BAA6B,SAAUtiI,EAAK1H,GAC3EwmB,KAAKogC,WAAWzjD,KAAKuE,GACrB8e,KAAK8/G,sBAAsBh+H,IAAIZ,EAAK1H,IAExComI,EAAyBvqH,UAAUsuH,iBAAmB,SAAUp4H,GAC5D,GAAIq4H,GAAa5jH,KAAKjT,gBAAgBwH,OAAOhJ,EAC7CyU,MAAKq6G,OAAO9uH,EAAWq4H,IAE3BhE,EAAyBvqH,UAAUglH,OAAS,SAAUn5H,EAAK1H,GACvD,GAAI0uB,GAAQlI,IACRxmB,aAAiB2J,IACjB6c,KAAK4lD,iBAAiBpsE,GAEjBA,YAAiB2S,IACtB6T,KAAKkmD,aAAahlE,EAAK1H,GAElBA,YAAiBkS,IACtBsU,KAAK2jH,iBAAiBnqI,GAEjB8H,MAAMuB,QAAQrJ,IAAUA,EAAMY,OAAS,EAClBZ,EAAMqqI,MAAM,SAAUrqI,GAAS,MAAOA,aAAiBkS,MAE7ElS,EAAM6S,QAAQ,SAAUZ,GAAO,MAAOyc,GAAMy7G,iBAAiBl4H,MAG7DjS,EAAM6S,QAAQ,SAAUE,GAChBA,YAAgBb,KAChBwc,EAAMy7G,iBAAiBp3H,MAGO,IAAlCyT,KAAKogC,WAAW7+C,QAAQL,IAAgB8e,KAAK8/G,sBAAsBz8H,IAAInC,IACvE8e,KAAKwjH,2BAA2BtiI,EAAK1H,IAIvB,gBAAVA,MAC0B,IAAlCwmB,KAAKogC,WAAW7+C,QAAQL,IAAgB8e,KAAK8/G,sBAAsBz8H,IAAInC,IACvE8e,KAAKwjH,2BAA2BtiI,EAAK1H,KAIjDomI,EAAyBvqH,UAAUquH,+BAAiC,WAChE,GAAIx7G,GAAQlI,KACR8jH,IACJ9jH,MAAKsjH,OAAOj3H,QAAQ,SAAU7S,EAAO0H,GAC5BgnB,EAAM43G,sBAAsBz8H,IAAInC,IACjC4iI,EAAennI,MAAOuE,IAAKA,EAAK1H,MAAOA,MAG/CsqI,EAAez3H,QAAQ,SAAU+P,GAC7B,GAAIlb,GAAMkb,EAAGlb,IAAK1H,EAAQ4iB,EAAG5iB,KAC7B0uB,GAAMs7G,2BAA2BtiI,EAAK1H,MAG9ComI,EAAyBvqH,UAAUuwD,iBAAmB,SAAUjiE,GAC5D,GAAIukB,GAAQlI,IACZrc,GAAQ0I,QAAQ,SAAUnL,EAAK1H,GAC3B,GAAIuqI,GAAmB,SAAUt4H,GAC7B,IAAKyc,EAAM43G,sBAAsBz8H,IAAIoI,KAA2C,IAAnCyc,EAAMk4B,WAAW7+C,QAAQkK,GAAa,CAC/E,GAAIu4H,GAAa97G,EAAMnb,gBAAgBwH,OAAO9I,EAC1Cu4H,aAAsBt4H,MACtBs4H,EAAa97G,EAAMnb,gBAAgBwH,OAAOyvH,IAE1CA,YAAsB73H,IACtB+b,EAAMg+C,aAAaz6D,EAAKu4H,GAGxB97G,EAAMs7G,2BAA2B/3H,EAAKu4H,IAI9CxqI,aAAiBkS,IACjBq4H,EAAiBvqI,GAEZ8H,MAAMuB,QAAQrJ,GACnBA,EAAM6S,QAAQ,SAAUE,GAChBA,YAAgBb,IAChBq4H,EAAiBx3H,GAEZA,YAAgBpJ,KACrB+kB,EAAM09C,iBAAiBr5D,KAI1B/S,YAAiB2J,KACtB+kB,EAAM09C,iBAAiBpsE,MAInComI,EAAyBvqH,UAAU6wD,aAAe,SAAUhlE,EAAKyC,GAE7D,GADAqc,KAAK4lD,iBAAiBjiE,EAAQf,aACQ,IAAlCod,KAAKogC,WAAW7+C,QAAQL,KAAgB8e,KAAK8/G,sBAAsBz8H,IAAInC,GAAM,CAC7E,GAAIwN,GAAO/K,EAAQf,WAAWY,IAAI,QAC9BwtD,EAAUrtD,EAAQf,WAAWY,IAAI,WAEjCygI,MAAoB,EADRtgI,GAAQf,WAAWgR,UAEjBlF,IAAuB,YAAdA,EAAKlF,MAAoC,aAAdkF,EAAKlF,QACrC,SAAjBwnD,EAAQxnD,MAAoC,QAAjBwnD,EAAQxnD,MACpCy6H,EAAoBjkH,KAAKjT,gBAAgBwH,OAAOrT,IAGhD+iI,EAAoBjkH,KAAKjT,gBAAgBwH,OAAOrT,GAAK,IACnC49D,aAAc,EAEpC9+C,KAAKwjH,2BAA2BtiI,EAAK+iI,KAGtCrE,KC97CPsE,GAAyB,WAQzB,QAASA,GAAQthI,EAAYkS,GACzBkL,KAAKmkH,sBAAuB,EAC5BnkH,KAAKokH,UAAW,EAChBpkH,KAAK0sD,gBAAiB,EACtB1sD,KAAKquC,oBAAqB,EAC1BruC,KAAKqkH,oBACLrkH,KAAKskH,UAAYhmH,iBAAezW,KAChCmY,KAAKukH,oBAAqB,EAC1BvkH,KAAKrT,YAAc/J,EACnBod,KAAKjT,gBAAkB+H,EACvBkL,KAAKwkH,cAAgB,GAAIt8F,KACzBloB,KAAK0uC,WACL1uC,KAAKykH,gBAu4BT,MAr4BArvH,QAAO4Q,eAAek+G,EAAQ7uH,UAAW,SAiBrC7R,IAAK,WACD,MAAOwc,MAAK0uC,QAAQt0D,QAExB6rB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAek+G,EAAQ7uH,UAAW,mBAiBrC7R,IAAK,WAID,MAHIwc,MAAKrT,YAAYtJ,IAAI,qBACrB2c,KAAK0kH,iBAAmB1kH,KAAKrT,YAAYnJ,IAAI,oBAE1Cwc,KAAK0kH,kBAEhBz+G,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAek+G,EAAQ7uH,UAAW,qBAkBrC7R,IAAK,WACD,MAAOwc,MAAKquC,oBAmBhBvsD,IAAK,SAAUtI,GACXwmB,KAAKquC,mBAAqB70D,GAE9BysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAek+G,EAAQ7uH,UAAW,kBACrC7R,IAAK,WACD,MAAOwc,MAAKskH,WAEhBxiI,IAAK,SAAUtI,GACPA,IAAUwmB,KAAKskH,YACftkH,KAAKskH,UAAY9qI,EACjBwmB,KAAKrT,YAAY9C,OAAO,WAAYrQ,KAG5CysB,YAAY,EACZC,cAAc,IAmBlBg+G,EAAQ7uH,UAAUi+C,QAAU,SAAUp3D,GAClC,GAAIA,EAAQ,GAAKA,GAAS8jB,KAAK0uC,QAAQt0D,OACnC,KAAMc,OAAM,sBAEhB,IAAIwa,EACJ,IAAIsK,KAAKwkH,cAAcnhI,IAAInH,GACvBwZ,EAAQsK,KAAKwkH,cAAchhI,IAAItH,GAC/B8jB,KAAKukH,oBAAqB,MAEzB,CACD,GAAI3hI,OAAa,GACb6I,EAAMuU,KAAK0uC,QAAQxyD,EACnBuP,IAAOA,YAAeC,MACtB9I,EAAaod,KAAKjT,gBAAgBwH,OAAO9I,IAEzC7I,IACA8S,EAAQsK,KAAK2kH,aAAa/hI,EAAY6I,GACtCuU,KAAKwkH,cAAc1iI,IAAI5F,EAAOwZ,GAC1BA,GAASA,YAAiB8C,MAC1B9C,EAAM21D,iBAAmBnvE,IAIrC,MAAOwZ,IAEXwuH,EAAQ7uH,UAAUsvH,aAAe,SAAU/hI,EAAY2I,GACnD,GAAImK,EACJ,IAAI9S,EAAY,CACZ,GAAI1B,GAAMyB,EAAwBC,EAAY,MAAM,GAAO,GACvDgiI,EAAa,EACbroI,EAAOoG,EAAwBC,EAAY,MAAM,GAAO,EAI5D,QAHoB,KAATrG,IACPqoI,EAAaroI,GAEb2E,EACA,OAAQA,EAAIsI,KAAK1B,eACb,IAAK,KACD4N,EAAQk7C,GAAgB4b,MAAMxsD,KAAMpd,EAAYod,KAAKjT,gBAAiBxB,EACtE,MACJ,KAAK,MAEGmK,EADyC,IAAxCkvH,EAAavmH,aAAW20D,YACjBxI,GAAegC,MAAMxsD,KAAMpd,EAAYod,KAAKjT,gBAAiBxB,GAE5B,IAAnCq5H,EAAavmH,aAAW62D,OACtBhlB,GAAwBsc,MAAMxsD,KAAMpd,EAAYod,KAAKjT,gBAAiBxB,GAGtE+kD,GAAiBkc,MAAMxsD,KAAMpd,EAAYod,KAAKjT,gBAAiBxB,EAE3E,MACJ,KAAK,KAEGmK,EADoC,IAAnCkvH,EAAavmH,aAAWm4D,OACjBzmB,GAAiByc,MAAMxsD,KAAMpd,EAAYod,KAAKjT,gBAAiBxB,GAG/DukD,GAAgB0c,MAAMxsD,KAAMpd,EAAYod,KAAKjT,gBAAiBxB,EAE1E,MACJ,KAAK,MACDmK,EAAQ6hE,GAAkB/K,MAAMxsD,KAAMpd,EAAYod,KAAKjT,gBAAiBxB,IAKxF,MAAOmK,IAmBXwuH,EAAQ7uH,UAAU/R,IAAM,SAAUoS,GAU9B,MATAsK,MAAK0uC,QAAQ/xD,KAAK+Y,EAAMmlD,MACxB76C,KAAKrT,YAAY9C,OAAO,SAAUmW,KAAK0uC,SACvC1uC,KAAKwkH,cAAc1iI,IAAIke,KAAK0uC,QAAQt0D,OAAS,EAAGsb,GAChDA,EAAMszD,MAAQhpD,KACdA,KAAKjT,gBAAgB2oD,MAAM9hD,UAAW,EAClC8B,YAAiB6hE,MACjB7hE,EAAMszD,MAAM67D,eAAiBvmH,iBAAewmH,gBAAkBxmH,iBAAeymH,YAEjF/kH,KAAKukH,oBAAqB,EAClBvkH,KAAK0uC,QAAQt0D,OAAS,GAqBlC8pI,EAAQ7uH,UAAU2vH,YAAc,SAAUtvH,GACtC,GAAIxZ,GAAQ8jB,KAAK0uC,QAAQntD,QAAQmU,EAAMmlD,KACnC3+D,IAAS,GACT8jB,KAAKilH,cAAc/oI,IAoB3BgoI,EAAQ7uH,UAAU4vH,cAAgB,SAAU/oI,GACxC,GAAIwZ,GAAQsK,KAAKszC,QAAQp3D,EACzB,IAAIwZ,EAAO,CACP,GAAIA,EAAMs+C,WAAa,EACnB,IAAK,GAAIz5D,GAAImb,EAAMs+C,WAAa,EAAGz5D,GAAK,EAAGA,IAAK,CAC5C,GAAIgS,GAAOmJ,EAAM86C,OAAOj2D,GACpBc,MAAO,EACPkR,KACAlR,EAAOkR,EAAKsgE,aAERxxE,EAAKyxE,kBAAkBvgE,EAAKsuD,UAKnCnlD,GAAM/I,YAAYtJ,IAAI,YAAwD,WAA1CqS,EAAM/I,YAAYnJ,IAAI,WAAWgG,OACtEnO,EAAOqa,EAAMra,OAEbA,EAAKyxE,kBAAkBp3D,EAAMmlD,KAGrC76C,MAAKwkH,cAAc7vH,OAAOzY,GAC1B8jB,KAAKmkF,0BAA0BjoG,GAEnC8jB,KAAK0uC,QAAQ5C,OAAO5vD,EAAO,GAC3B8jB,KAAKrT,YAAY7K,IAAI,SAAUke,KAAK0uC,SACpC1uC,KAAKrT,YAAYiH,UAAW,GAEhCswH,EAAQ7uH,UAAU8uF,0BAA4B,SAAUjoG,GACpD,GAAIiD,GAAS,GAAI+oC,IACjBloB,MAAKwkH,cAAcn4H,QAAQ,SAAU7S,EAAO0H,GACpCA,EAAMhF,EACNiD,EAAO2C,IAAIZ,EAAM,EAAG1H,GAGpB2F,EAAO2C,IAAIZ,EAAK1H,KAGxBwmB,KAAKwkH,cAAgBrlI,GAqBzB+kI,EAAQ7uH,UAAU6vH,qBAAuB,SAAU1rI,GAC/CwmB,KAAK0sD,gBAAkBlzE,EACvBwmB,KAAK0kH,iBAAmBlrI,EACxBwmB,KAAKmkH,qBAAuB3qI,GAEhC0qI,EAAQ7uH,UAAU8vH,gBAAkB,SAAUn6D,GAC1C,GAAI9iD,GAAQlI,IACZ,IAAiB,OAAbgrD,OAAyC,KAAbA,EAC5BhrD,KAAKmlH,gBAAgB,GAAIj9F,UAExB,CACD,GAAIk9F,OAAM,GACNzrH,EAAaqG,KAAKjT,gBAAgBuM,UAClC9f,MAAQ,EACZ,IAAIwxE,GAAYA,YAAoB9iC,KAAK,CACrC,GAAIm9F,IAAc,CACdr6D,GAASlvE,KAAO,EAChBkkB,KAAKslH,eAAiBt6D,GAGtBq6D,GAAc,EACdrlH,KAAKslH,eAAiBt6D,EAE1B,IAAIu6D,GAAkB,GAAIr9F,IAE1B,IADAloB,KAAKqkH,iBAAmBrkH,KAAKwlH,aACzB9oH,GAAmBsD,KAAKqkH,mBAAqBrkH,KAAKqkH,iBAAiBjqI,OAAS,GACjE4lB,KAAKqkH,iBAAiB,GAAGhpI,MACxBse,EAAY,CACpB,IAASpf,EAAI,EAAGA,EAAIylB,KAAKqkH,iBAAiBjqI,OAAQG,IAAK,CACnD,GAAImb,GAAQsK,KAAKqkH,iBAAiB5pI,OAAOC,SAASH,EAAEI,WAAY,IAChE,IAAI+a,EAAMra,KAAM,CACZ,GAAIa,GAAQH,EAAc4d,EAAYqG,KAAKylH,qBAAqB/vH,GAAO,GAAMrZ,gBAC7E,IAAIH,GAAS,EAAG,CACRqpI,EAAgBliI,IAAInH,IACpB1C,EAAQ+rI,EAAgB/hI,IAAItH,IACtBS,KAAK+Y,KAGXlc,MACMmD,KAAK+Y,GACX6vH,EAAgBzjI,IAAI5F,EAAO1C,GAE/B,IAAIkqE,GAAS/pD,EAAWvd,QAAQF,EAC3B8jB,MAAKslH,eAAejiI,IAAInH,IACzB8jB,KAAKslH,eAAexjI,IAAI5F,EAAOwnE,EAAOsH,UAEtCq6D,IACA3hE,EAAOsH,SAAWhrD,KAAKslH,eAAe9hI,IAAItH,MAK1D,GAAIwpI,GAAgB,CACpBH,GAAgBl5H,QAAQ,SAAU7S,EAAO0H,GAErC,GADAgnB,EAAMgjD,UAAYhjD,EAAMo9G,eAAe9hI,IAAItC,GACvCgnB,EAAMgjD,YAAc9sD,wBAAsBozC,UAAW,CACrD,GAAIm0E,GAASnsI,CACbmsI,GAAOroG,KAAK,SAAUsoG,EAAWC,GAC7B,MAAO39G,GAAM49G,eAAeF,EAAWC,IAE3C,KAAK,GAAIrrI,GAAI,EAAGA,EAAImrI,EAAOvrI,OAAQI,IAAK,CACpC,GAAIurI,GAAa79G,EAAMm8G,iBAAiB9iI,QAAQokI,EAAOlrI,OAAOC,SAASF,EAAEG,WAAY,KACrF,KAAoB,IAAhBorI,GAAqBA,IAAeL,EAAgBlrI,EAAG,CACvD,GAAIkb,GAAQwS,EAAMm8G,iBAAiB5pI,OAAOC,SAASqrI,EAAWprI,WAAY,IAC1EutB,GAAMm8G,iBAAiBv4E,OAAOi6E,EAAY,GAC1C79G,EAAMm8G,iBAAiBv4E,OAAO45E,EAAgBlrI,EAAG,EAAGkb,KAIhEgwH,GAAiBlsI,EAAMY,cAMnC4lB,MAAKkrD,UAAYF,EACjBo6D,EAAMplH,KAAKgmH,UAAUhmH,KAAKkrD,WAC1BlrD,KAAKqkH,iBAAmBrkH,KAAKwlH,aAC7BxlH,KAAKqkH,iBAAiB/mG,KAAK,SAAUsoG,EAAWC,GAC5C,MAAO39G,GAAM49G,eAAeF,EAAWC,IAG/C7lH,MAAKwkH,cAAcnjE,OACnB,KAAK,GAAI9mE,GAAI,EAAGA,EAAIylB,KAAKqkH,iBAAiBjqI,OAAQG,IAC9CylB,KAAKwkH,cAAc1iI,IAAIrH,OAAOC,SAASH,EAAEI,WAAY,IAAKqlB,KAAKqkH,iBAAiB5pI,OAAOC,SAASH,EAAEI,WAAY,MAC9GqlB,KAAK0uC,QAAQj0D,OAAOC,SAASH,EAAEI,WAAY,KAAOqlB,KAAKqkH,iBAAiB5pI,OAAOC,SAASH,EAAEI,WAAY,KAAKkgE,KACvGuqE,GACAplH,KAAKqkH,iBAAiB5pI,OAAOC,SAASH,EAAEI,WAAY,KAAKU,KAAKgB,gBAAgBwN,OAAO,OAAQu7H,EAGrGplH,MAAKrT,YAAY9C,OAAO,SAAUmW,KAAK0uC,WAG/Cw1E,EAAQ7uH,UAAUovH,cAAgB,WAC9B,GAAIkB,EACA3lH,MAAKrT,YAAYtJ,IAAI,YACrBsiI,EAAS3lH,KAAKrT,YAAYnJ,IAAI,UAKlC,KAHA,GAAIyiI,IAAY,EACZ37H,EAAQ,EACR47H,SACqB,KAAXP,GAAqC,OAAXA,GAAiB,CACrD,KAAOr7H,EAAQq7H,EAAOvrI,OAAQkQ,IAAS,CACnC,GAAImB,GAAMk6H,EAAOr7H,GACbyoE,MAAkB,EAClBtnE,IAAOA,YAAeC,MACtBqnE,EAAkB/yD,KAAKjT,gBAAgBwH,OAAO9I,GAElD,IAAIm5H,GAAa,EACbroI,EAAOoG,EAAwBowE,EAAiB,MAAM,GAAO,OAC7C,KAATx2E,IACPqoI,EAAaroI,EAEjB,IAAI4pI,OAAY,EAChB,IAAIpzD,GAAmBA,EAAgB1vE,IAAI,aAEd,MADzB8iI,EAAYpzD,EAAgBvvE,IAAI,UACQ2iI,EAAU/rI,OAAS,EACvD,IAAK,GAAIG,GAAI,EAAGA,EAAI4rI,EAAU/rI,OAAQG,IAAK,CACvC,GAAIgR,GAAY46H,EAAU1rI,OAAOC,SAASH,EAAEI,WAAY,IACxD,IAAI4Q,GAAaA,YAAqBG,IAAe,CACjD,GAAI06H,GAAWpmH,KAAKjT,gBAAgBwH,OAAOhJ,OACnB,KAAb66H,GAA6BA,EAAS/iI,IAAI,WACjD+iI,EAASv8H,OAAO,SAAU4B,OAGW,KAAnCm5H,EAAavmH,aAAW62D,SAC9B+wD,GAAY,GAK5B,OAAyB,KAAdE,EACHpzD,IACmC,IAA/B/yD,KAAK0uC,QAAQntD,QAAQkK,IACrBuU,KAAK0uC,QAAQ/xD,KAAK8O,OAM1B,KADesnE,EAAgB1vE,IAAI,OAAU2c,KAAKqmH,QAAQF,GAEtDD,EAAMvpI,MAAOgpI,OAAQA,EAAQr7H,MAAOA,IACpC0V,KAAKokH,UAAW,EAChB95H,GAAS,EACTq7H,EAASQ,MAER,CACD,GAAIF,GAAiD,IAAnCrB,EAAavmH,aAAW62D,OACtC,QAGAl1D,MAAK0uC,QAAQ/xD,KAAK8O,IAKlC,GAAqB,IAAjBy6H,EAAM9rI,OACN,KAEJ,IAAIqL,GAAQygI,EAAMlpF,KAClB2oF,GAASlgI,EAAMkgI,OACfr7H,EAAQ7E,EAAM6E,MAAQ,IAG9B45H,EAAQ7uH,UAAUgxH,QAAU,SAAU/0E,GAClC,GAAIg1E,IAAS,CACb,IAAI5pH,GAAmB40C,IAASA,EAAKl3D,OAAS,EAAG,CAC7C,GAAIqL,GAAQ6rD,EAAK,GACb1uD,MAAa,EASjB,IARI8Z,GAAmBjX,KACfA,YAAiBtC,IACjBP,EAAa6C,EAERA,YAAiBiG,MACtB9I,EAAaod,KAAKjT,gBAAgBwH,OAAO9O,KAG7C7C,GAAcA,EAAWS,IAAI,WAAY,CACzC,GAAI2tD,GAAUpuD,EAAWY,IAAI,UACzBwtD,IAA4B,WAAjBA,EAAQxnD,OACnB88H,GAAS,IAIrB,MAAOA,IAEXpC,EAAQ7uH,UAAUwzF,uBAAyB,WACvC,GAAI3gF,GAAQlI,IAgCZ,YA/BsC,KAA3BA,KAAKumH,mBAAqCvmH,KAAK1V,MAAQ,IAC9D0V,KAAKumH,qBACLvmH,KAAK0uC,QAAQriD,QAAQ,SAAUm6H,GAC3B,GAAI5jI,GAAaslB,EAAMnb,gBAAgBwH,OAAOiyH,EAC9C,IAAI5jI,EACA,GAAIA,EAAWS,IAAI,QAAS,CACxB,GAAI8iI,GAAYvjI,EAAWY,IAAI,OAC3B2iI,IAAaA,EAAU/rI,OAAS,GAChC+rI,EAAU95H,QAAQ,SAAUo6H,GACxB,GAAIC,EAOJ,IANID,GAAgBA,YAAwBtjI,IACxCujI,EAAgBD,EAEXA,GAAgBA,YAAwB/6H,MAC7Cg7H,EAAgBx+G,EAAMnb,gBAAgBwH,OAAOkyH,IAE7CC,GAAiBA,EAAcrjI,IAAI,WAAY,CAC/C,GAAI2tD,GAAU01E,EAAcljI,IAAI,UAC5BwtD,IAA4B,WAAjBA,EAAQxnD,MACnB0e,EAAMq+G,kBAAkB5pI,KAAK8pI,UAO7Cv+G,GAAMq+G,kBAAkB5pI,KAAK6pI,MAKtCxmH,KAAKumH,mBAEhBrC,EAAQ7uH,UAAUu8D,eAAiB,SAAUC,EAAW80D,GACpD,IAAK,GAAIpsI,GAAIylB,KAAK1V,MAAQ,EAAG/P,GAAK,EAAGA,IAAK,CACtC,GAAImb,GAAQsK,KAAKszC,QAAQ/4D,EACzB,IAAImb,IAAUA,EAAMuB,eAAwC,KAApBvB,EAAMq1D,WAA6Br1D,EAAMq1D,WAAa,EAAG,CAC7F,GAAI1vE,GAAOqa,EAAM8E,KACjB,IAAInf,GACAA,EAAKgB,gBAAgBgH,IAAI,YACxBhI,EAAK2vE,WAAa5sD,wBAAsB6sD,QAAUjrD,KAAKkrD,YAAc9sD,wBAAsB6sD,QAAS,CACrG,GAAIz/D,GAASnQ,EAAKgB,gBAAgBmH,IAAI,UAClC2nE,EAAuB,GAAIC,IAAwB5/D,EAAQwU,KAAKjT,gBAAiB1R,EACrFA,GAAK43D,aAAekY,CACpB,KAAK,GAAInqC,GAAM,EAAGA,EAAMtrB,EAAMk3D,WAAY5rC,IAAO,CAC7C,GAAIz0B,GAAOmJ,EAAM86C,OAAOxvB,EACxB,IAAIz0B,GAAQA,YAAgBggE,IAAqB,CAC7C,GAAIrwE,GAAQsP,EAAOjK,QAAQgL,EAAKsuD,KAIhC,IAHI3+D,EAAQ,IACRA,EAAQwZ,EAAM21D,kBAEdnvE,GAAS,EAAG,CACZ,GAAIy2D,GAAct3D,EAAKs3D,YAAYhoB,WAAWj1B,EAAMmlD,KAAMnlD,EAAMq1D,UAAW7uE,EAC3Eb,GAAKgB,gBAAgBwN,OAAO,SAAU8oD,GACtCt3D,EAAKgB,gBAAgBuX,UAAW,MAMhD8B,IAAWixH,GAAgBjxH,EAAMra,OAASsrI,IAAkBA,KAC5DjxH,EAAMk8D,eAAeC,GAAan8D,EAAM2mE,WACnCxK,GAAan8D,EAAM2mE,SAAYxK,GAAa80D,GAAgBjxH,EAAMra,OAASsrI,IAC5E3mH,KAAKilH,cAAc1qI,MAKnC2pI,EAAQ7uH,UAAUg+C,eAAiB,SAAU7pD,GACzC,GAAItN,IAAS,CACb,IAAI8jB,KAAK1V,MAAQ,EAAG,CACX0V,KAAK4mH,cACN5mH,KAAK4mH,gBAEJ5mH,KAAK6mH,qBACN7mH,KAAK6mH,uBAEJ7mH,KAAK8mH,oBACN9mH,KAAK8mH,sBAEJ9mH,KAAK+mH,2BACN/mH,KAAK+mH,4BAET,KAAK,GAAIxsI,GAAI,EAAGA,EAAIylB,KAAK1V,MAAO/P,IAAK,CACjC,GAAImb,GAAQsK,KAAKszC,QAAQ/4D,EACzB,IAAImb,EAAO,CACP,GAAIg6C,GAAYh6C,EAAMlM,IAClBkmD,KACA1vC,KAAK4mH,YAAYjqI,KAAK+yD,GACtB1vC,KAAK6mH,mBAAmBlqI,KAAK+yD,EAAU15C,MAAM,KAAK,IAEtD,IAAI27D,GAAaj8D,EAAMi8D,UACnBA,KACA3xD,KAAK8mH,kBAAkBnqI,KAAKg1E,GAC5B3xD,KAAK+mH,yBAAyBpqI,KAAKg1E,EAAW37D,MAAM,KAAK,MAIrE,GAAIgxH,GAAYhnH,KAAK4mH,YAAYrlI,QAAQiI,IACtB,IAAfw9H,EACA9qI,EAAQ8qI,GAIW,KADnBA,EAAYhnH,KAAK6mH,mBAAmBtlI,QAAQiI,IAExCtN,EAAQ8qI,GAIW,KADnBA,EAAYhnH,KAAK8mH,kBAAkBvlI,QAAQiI,IAEvCtN,EAAQ8qI,GAIW,KADnBA,EAAYhnH,KAAK+mH,yBAAyBxlI,QAAQiI,MAE9CtN,EAAQ8qI,GAM5B,MAAO9qI,IAEXgoI,EAAQ7uH,UAAUmwH,WAAa,WAE3B,IAAK,GADDG,MACKprI,EAAI,EAAGA,EAAIylB,KAAK0uC,QAAQt0D,OAAQG,IAAK,CAC1C,GAAImb,GAAQsK,KAAKszC,QAAQ/4D,EACrBmb,IAASA,YAAiB8C,KAC1BmtH,EAAOhpI,KAAK+Y,GAGpB,MAAOiwH,IAEXzB,EAAQ7uH,UAAU2wH,UAAY,SAAUh7D,GACpC,GAAIA,IAAa5sD,wBAAsBvW,KAAM,CACzC,GAAIshG,GAAO,EAUX,OATIn+B,KAAa5sD,wBAAsBmkF,IACnC4G,EAAO,IAEFn+B,IAAa5sD,wBAAsBgrF,OACxCD,EAAO,IAEFn+B,IAAa5sD,wBAAsBozC,YACxC23C,EAAO,KAEJxiG,GAASnD,IAAI2lG,GAExB,MAAO,OAEX+6B,EAAQ7uH,UAAUywH,eAAiB,SAAUmB,EAAQC,GACjD,GACIC,GACAjrI,EAFAiD,EAAS,EAGTioI,EAAQH,EAAO5rI,KACfgsI,EAAQH,EAAO7rI,IACnB,IAAI+rI,IAAUA,EAAM9yH,QAAU8yH,YAAiB1rF,KAAW2rF,IAAUA,EAAM/yH,QAAU+yH,YAAiB3rF,IAAS,CAC1G,GAAI4rF,GAAatnH,KAAKylH,qBAAqBwB,GAAQ,GAAOvjF,WACtD6jF,EAAavnH,KAAKylH,qBAAqByB,GAAQ,GAAOxjF,WACtD8jF,MAAa,EAEbA,GADAP,EAAOt6H,YAAYtJ,IAAI,QACV2c,KAAKynH,kBAAkBR,GAGvBjnH,KAAK0nH,cAAcT,EAAOt6H,YAE3C,IAAIg7H,OAAa,EAEbA,GADAT,EAAOv6H,YAAYtJ,IAAI,QACV2c,KAAKynH,kBAAkBP,GAGvBlnH,KAAK0nH,cAAcR,EAAOv6H,YAE3C,IAAIi7H,GAAcJ,EAAW,GAAKA,EAAW,GACzCK,EAAeF,EAAW,GAAKA,EAAW,EAC9C,IAAIH,GAAcA,EAAWptI,QAAU,GAAKutI,GAAcA,EAAWvtI,QAAU,EAAG,CAC9E,GAAI+J,GAAKqjI,EAAW,GAChBpjI,EAAKojI,EAAW,GAChBnjI,EAAKsjI,EAAW,GAChBrjI,EAAKqjI,EAAW,EACpB,IAAkB,gBAAPxjI,IAAiC,gBAAPE,IACnB,gBAAPD,IAAiC,gBAAPE,GAEjC,GADApI,EAAQorI,EAAaC,EACjBvnH,KAAKkrD,YAAc9sD,wBAAsBmkF,IAAK,CAE9C,GAAc,KADd4kC,EAAQnnH,KAAK8nH,SAASxjI,EAAIF,IACT,CACb,GAAIspD,IAAqB,IAAXy5E,GAAgB/iI,EAAKE,GAAOF,EAAKwjI,EAAc,EAAKtjI,GAClEopD,EAAUA,GAAsB,IAAVy5E,GAAe7iI,EAAKF,GAAOE,EAAKujI,EAAe,EAAKzjI,KAEtE+iI,EAAQ,GAIZhoI,EADU,IAAVjD,EACSA,EAEM,IAAVirI,EACIA,EAGAnnH,KAAK8nH,SAAS3jI,EAAIE,OAG9B,IAAI2b,KAAKkrD,YAAc9sD,wBAAsBgrF,OAC9C+9B,EAAQnnH,KAAK8nH,SAAS3jI,EAAIE,GAEtBlF,EADU,IAAVjD,EACSA,EAEM,IAAVirI,EACIA,EAGAnnH,KAAK8nH,SAASxjI,EAAIF,OAG9B,KAAI4b,KAAKkrD,YAAc9sD,wBAAsB6sD,QAC9CjrD,KAAKkrD,YAAc9sD,wBAAsBvW,MACzCmY,KAAKkrD,YAAc9sD,wBAAsBozC,WACzCxxC,KAAKkrD,YAAc9sD,wBAAsB3I,SACrCwxH,YAAkBzuH,KAAY0uH,YAAkB1uH,IAAU,CAC1D,GAAIuvH,GAAcd,EAAOpiC,SACrBmjC,EAAcd,EAAOriC,QACzBsiC,GAAQnnH,KAAK8nH,SAASC,EAAaC,GAE/B7oI,EADU,IAAVjD,EACSA,EAGAirI,IAOjC,MAAOhoI,IAEX+kI,EAAQ7uH,UAAUqyH,cAAgB,SAAU9kI,GACxC,GAAI6B,EAIJ,OAHI7B,IAAcA,EAAWS,IAAI,UAC7BoB,EAAO7B,EAAWW,SAAS,SAExBkB,GAEXy/H,EAAQ7uH,UAAUoyH,kBAAoB,SAAU/xH,GAC5C,GAAIvW,GACAyD,EAAa8S,EAAM/I,WACvB,IAAI/J,EAAWS,IAAI,QAAS,CACxB,GAAIiuD,GAAO1uD,EAAWW,SAAS,OAC3BmZ,IAAmB40C,IAASA,EAAKl3D,QAAU,IAEvC+E,EADgB,IAAhBmyD,EAAKl3D,OACI4lB,KAAK0nH,cAAcp2E,EAAK,IAG7B57C,GAASA,EAAMk3D,WAAa,EACnB5sD,KAAK0nH,cAAchyH,EAAM86C,OAAO,GAAG7jD,aAGnCqT,KAAK0nH,cAAcp2E,EAAK,KAKjD,MAAOnyD,IAEX+kI,EAAQ7uH,UAAUyyH,SAAW,SAAU/jI,EAAGC,GACtC,MAAID,GAAIC,EACG,EAEFD,EAAIC,GACD,EAGD,GAGfkgI,EAAQ7uH,UAAU4yH,oBAAsB,SAAUlkI,EAAGC,GACjD,GAII7E,GAJA4tF,EAAc/sE,KAAKjT,gBAAgBwH,OAAOxQ,GAC1CmkI,EAAcloH,KAAKjT,gBAAgBwH,OAAOvQ,GAC1CmkI,EAAQnoH,KAAK0nH,cAAc36C,GAC3Bq7C,EAAQpoH,KAAK0nH,cAAcQ,EAE/B,IAAIC,GAASA,EAAM/tI,QAAU,GAAKguI,GAASA,EAAMhuI,QAAU,EAAG,CAC1D,GAAI+J,GAAKgkI,EAAM,GACX/jI,EAAK+jI,EAAM,GACX9jI,EAAK+jI,EAAM,GACX9jI,EAAK8jI,EAAM,EACf,IAAkB,gBAAPjkI,IAAiC,gBAAPE,IACnB,gBAAPD,IAAiC,gBAAPE,GAAiB,CAClD,GAAI6iI,OAAQ,EAsBZ,OAlBQhoI,GAHJ6gB,KAAKkrD,YAAc9sD,wBAAsBmkF,IAE3B,KADd4kC,EAAQnnH,KAAK8nH,SAASxjI,EAAIF,IAEb+iI,EAGAnnH,KAAK8nH,SAAS3jI,EAAIE,GAG1B2b,KAAKkrD,YAAc9sD,wBAAsBgrF,OAEhC,KADd+9B,EAAQnnH,KAAK8nH,SAAS3jI,EAAIE,IAEb8iI,EAGAnnH,KAAK8nH,SAASxjI,EAAIF,GAItB,GAKrB,MAAOjF,IAEX+kI,EAAQ7uH,UAAUowH,qBAAuB,SAAU/vH,EAAO2yH,GACtD,GAAIhtI,GAAOqa,EAAMra,KACb2vE,EAAWhrD,KAAKkrD,SAUpB,OATAlrD,MAAKkrD,UAAYm9D,EAAkB3yH,EAAMra,KAAK2vE,SAAWA,EACzDhrD,KAAKsoH,gBAAgB5yH,GACjBA,EAAMuB,WAAavB,EAAMs+C,WAAa,IACtC34D,EAAOqa,EAAM86C,OAAO,GAAGn1D,MAE3B2kB,KAAKkrD,UAAYF,MACG,KAAT3vE,IACPA,EAAOqa,EAAMra,MAEVA,GAEX6oI,EAAQ7uH,UAAUizH,gBAAkB,SAAU5yH,GAC1C,GAAIwS,GAAQlI,IACZ,IAAItK,EAAMuB,YAAcvB,YAAiBk7C,KACrCl7C,YAAiBo6C,KACjBp6C,YAAiB46C,KACjB56C,YAAiBw6C,KAA0B,CAC3C,GAAIp3B,GAAapjB,EAAM66D,aACvBz3C,GAAWwE,KAAK,SAAUirG,EAAOC,GAC7B,MAAOtgH,GAAMugH,kBAAkBF,EAAOC,KAE1C9yH,EAAM42D,aAAajL,OACnB,KAAK,GAAI9mE,GAAI,EAAGA,EAAIu+B,EAAW1+B,OAAQG,IACnCmb,EAAM42D,aAAaxqE,IAAIvH,EAAGu+B,EAAWr+B,OAAOC,SAASH,EAAEI,WAAY,QAI/EupI,EAAQ7uH,UAAUozH,kBAAoB,SAAUF,EAAOC,GACnD,GAAIrpI,GAAS,CACb,QAAqB,KAAVopI,OAA0C,KAAVC,EAAuB,CAC9D,GAAIpB,GAAQmB,EAAMltI,KACdgsI,EAAQmB,EAAMntI,KACdqtI,EAAS1oH,KAAK0nH,cAAca,EAAM57H,aAClCg8H,EAAS3oH,KAAK0nH,cAAcc,EAAM77H,YACtC,IAAI+7H,GAAUC,EAAQ,CAClB,GAAIxkI,GAAKukI,EAAO,GACZtkI,EAAKskI,EAAO,GACZrkI,EAAKskI,EAAO,GACZrkI,EAAKqkI,EAAO,GACZxB,MAAQ,EACRnnH,MAAKkrD,YAAc9sD,wBAAsBmkF,IAGrCpjG,EADU,KADdgoI,EAAQnnH,KAAK8nH,SAASV,EAAM1jF,WAAY2jF,EAAM3jF,aAEjCyjF,EAIK,KADdA,EAAQnnH,KAAK8nH,SAASxjI,EAAIF,IAEb+iI,EAGAnnH,KAAK8nH,SAAS3jI,EAAIE,GAI9B2b,KAAKkrD,YAAc9sD,wBAAsBgrF,SAG1CjqG,EADU,KADdgoI,EAAQnnH,KAAK8nH,SAASV,EAAM1jF,WAAY2jF,EAAM3jF,aAEjCyjF,EAIK,KADdA,EAAQnnH,KAAK8nH,SAAS3jI,EAAIE,IAEb8iI,EAGAnnH,KAAK8nH,SAASxjI,EAAIF,KAM/C,MAAOjF,IAEX+kI,EAAQ7uH,UAAUsP,OAAS,WACvB3E,KAAK0uC,WACL1uC,KAAKwkH,cAAgB,GAAIt8F,MAEtBg8F,KC/6BP99G,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGzgB,GAI7B,OAHAwgB,EAAgBjR,OAAOmR,iBAChBC,uBAA2BllB,QAAS,SAAUglB,EAAGzgB,GAAKygB,EAAEE,UAAY3gB,IACvE,SAAUygB,EAAGzgB,GAAK,IAAK,GAAI4gB,KAAK5gB,GAAOA,EAAE6gB,eAAeD,KAAIH,EAAEG,GAAK5gB,EAAE4gB,MACpDH,EAAGzgB,GAE5B,OAAO,UAAUygB,EAAGzgB,GAEhB,QAAS8gB,KAAO3G,KAAK4G,YAAcN,EADnCD,EAAcC,EAAGzgB,GAEjBygB,EAAEjR,UAAkB,OAANxP,EAAauP,OAAOkI,OAAOzX,IAAM8gB,EAAGtR,UAAYxP,EAAEwP,UAAW,GAAIsR,QAcnFiiH,GAA8B,SAAU5gH,GAExC,QAAS4gH,GAAa9zE,GAClB,GAAI5sC,GAAQF,EAAO1S,KAAK0K,OAASA,IAMjC,OALAkI,GAAM2gH,mBAAqB,GAAI3gG,KAC/BhgB,EAAM4gH,mBAAqB,OACV,OAAbh0E,OAAyC,KAAbA,IAC5B5sC,EAAMimC,UAAY2G,GAEf5sC,EAyoBX,MAjpBA9B,IAAUwiH,EAAc5gH,GAUxB4gH,EAAavzH,UAAU0/C,mBAAqB,SAAUzpD,GAKlD,MAJA0U,MAAK1G,UAAYhO,EACjB0U,KAAKjT,gBAAkBzB,EAASyB,gBAChCiT,KAAKu0C,qBAAsB,EAC3Bv0C,KAAKk1C,sBAAsB5pD,EAAUA,EAASnP,WACvC6jB,KAAKg+B,SAEhB4qF,EAAavzH,UAAU2/C,kBAAoB,SAAU1pD,GAKjD,MAJA0U,MAAK1G,UAAYhO,EACjB0U,KAAKjT,gBAAkBzB,EAASyB,gBAChCiT,KAAKu0C,qBAAsB,EAC3Bv0C,KAAKuoC,KAAOz+C,IACLkW,KAAKg+B,SAEhB4qF,EAAavzH,UAAU2oC,MAAQ,WAC3B,GAAI91B,GAAQlI,KACR+oH,EAAW,EACXC,IACJ,KAAKhpH,KAAKu0C,oBAAqB,CACvBv0C,KAAKkuC,qBACLluC,KAAKqvC,WAAa,cAAgBrvC,KAAK8oH,mBAAqB,2BAC5D9oH,KAAKqvC,WAAarvC,KAAKmuC,UAAY,IACnCnuC,KAAKqvC,WAAa,YAGlBrvC,KAAKqvC,WAAa,YAEtB,IAAI75C,GAAOwK,KAAK1G,UAAU9D,IAC1B,IAAa,OAATA,OAAiC,KAATA,EAAsB,CAC9CwK,KAAKquC,mBAAqB74C,EAAK2/C,iBAE/B,KAAK,GADD7qD,GAAQ0V,KAAK1G,UAAU9D,KAAKlL,MACvB/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAImb,GAAQsK,KAAK1G,UAAU9D,KAAK89C,QAAQ/4D,GACpCf,EAAQwmB,KAAKuvC,sBAAsB75C,EAKvC,KAJIA,YAAiBk7C,KAAmBl7C,YAAiBo6C,KAAmBp6C,YAAiBq6C,KACtFr6C,YAAiBw6C,KAA2Bx6C,YAAiB46C,MAChEy4E,IAEC/oH,KAAKkuC,oBA0BN,GAAIx4C,YAAiBk7C,KAAmBl7C,YAAiBo6C,KAAmBp6C,YAAiBq6C,IAAkB,CAG3G,GAFAi5E,EAAYrsI,KAAKosI,GACjB/oH,KAAKqvC,WAAa,QAAU35C,EAAMlM,KAAO,MACpB,gBAAVhQ,IAAuB8H,MAAMuB,QAAQrJ,IAA2B,IAAjBA,EAAMY,OAC5D4lB,KAAKqvC,WAAa,KAAO/tD,MAAMuB,QAAQrJ,GAASA,EAAM,GAAKA,GAAS,QAEnE,IAAI8H,MAAMuB,QAAQrJ,GAAQ,CAC3BwmB,KAAKqvC,WAAa,GAClB,KAAS70D,EAAI,EAAGA,EAAIhB,EAAMY,OAAQI,IAC9BwlB,KAAKqvC,WAAa,IAAM71D,EAAMiB,OAAOC,SAASF,EAAEG,WAAY,KAAO,IAC/DH,IAAMhB,EAAMY,OAAS,IACrB4lB,KAAKqvC,WAAa,IAG1BrvC,MAAKqvC,WAAa,IAEtBrvC,KAAKqvC,WAAa,UAEb35C,YAAiBw6C,KAA2Bx6C,YAAiB46C,OAClE04E,EAAYrsI,KAAKosI,GACjB/oH,KAAKqvC,WAAa,QAAU35C,EAAMlM,KAAO,OAAShQ,EAAQ,UA7C9D,IAAIkc,YAAiBk7C,KAAmBl7C,YAAiBo6C,KAAmBp6C,YAAiBq6C,IAAkB,CAG3G,GAFAi5E,EAAYrsI,KAAKosI,GACjB/oH,KAAKqvC,WAAa05E,EAAW,eAAiB/oH,KAAKipH,mBAAmBvzH,EAAMlM,MAAQ,QAC/D,gBAAVhQ,IAAuB8H,MAAMuB,QAAQrJ,IAA2B,IAAjBA,EAAMY,OAC5D4lB,KAAKqvC,WAAa,IAAMrvC,KAAKipH,mBAAoB3nI,MAAMuB,QAAQrJ,GAASA,EAAM,GAAKA,GAAU,QAE5F,IAAI8H,MAAMuB,QAAQrJ,GAAQ,CAC3BwmB,KAAKqvC,WAAa,GAClB,KAAK,GAAI70D,GAAI,EAAGA,EAAIhB,EAAMY,OAAQI,IAC9BwlB,KAAKqvC,WAAa,IAAMrvC,KAAKipH,mBAAmBzvI,EAAMiB,OAAOC,SAASF,EAAEG,WAAY,MAAQ,IACxFH,IAAMhB,EAAMY,OAAS,IACrB4lB,KAAKqvC,WAAa,IAG1BrvC,MAAKqvC,WAAa,IAEtBrvC,KAAKqvC,WAAa,mBAEb35C,YAAiBw6C,KAA2Bx6C,YAAiB46C,OAClE04E,EAAYrsI,KAAKosI,GACjB/oH,KAAKqvC,WAAa05E,EAAW,eAAiB/oH,KAAKipH,mBAAmBvzH,EAAMlM,MAAQ,SACpFwW,KAAKqvC,WAAa71D,EAAQ,gBA6B1C,GAAIwmB,KAAKkuC,oBACLluC,KAAKqvC,WAAa,IAClBrvC,KAAKqvC,WAAa,YAAcrvC,KAAKmuC,UAAY,6DACjDnuC,KAAKqvC,WAAa,gBAEjB,CACDrvC,KAAKqvC,WAAcrvC,KAAKyuC,OAAO3yD,KAAO,EAAK,eAAiBkkB,KAAKipH,mBAAmBjpH,KAAKmuC,WAAa,cACtG,KAAS5zD,EAAI,EAAGA,EAAIylB,KAAKyuC,OAAO3yD,KAAMvB,IAEpB,QADVmb,EAAQsK,KAAK1G,UAAU9D,KAAK89C,QAAQ/4D,SACD,KAAVmb,GAAyBA,EAAM85C,SACxDxvC,KAAKqvC,WAAa25E,EAAYvuI,OAAOC,SAASH,EAAEI,WAAY,KAAO,QAG3EqlB,MAAKqvC,WAAa,cAClBrvC,KAAKqvC,WAAc25E,EAAY5uI,OAAS,EAAK,+BAAiC4uI,EAAY5uI,OAAS,GAAK,iBACxG4lB,KAAKqvC,WAAa,qBAAuB25E,EAAY5uI,OAAS,GAAK,UAG3E,GAAIinH,GAAc,GAAI6nB,aAAoC,EAAxBlpH,KAAKqvC,UAAUj1D,QAC7C+E,EAAS,GAAIT,YAAW2iH,EAI5B,OAHAliH,GAAOkN,QAAQ,SAAUu4F,EAAKrqG,GAC1B4E,EAAO5E,GAAK2tB,EAAMmnC,UAAU7xD,WAAWjD,KAEpC4E,GAEXypI,EAAavzH,UAAUgjD,mBAAqB,SAAU/sD,EAAUsX,GAC5D5C,KAAK1G,UAAYhO,EACjB0U,KAAKjT,gBAAkBzB,EAASyB,gBAChCiT,KAAKu0C,qBAAsB,EAC3Bv0C,KAAKmpH,UAAU/pI,EAAewjB,GAC9B,IAAIhW,GAAS,GAAIsI,IAAW0N,EAC5B5C,MAAKw0C,qBAAsB,CAC3B,IAAIskE,GAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,GAAS,MAAM,GAAM,EACzEoT,MAAKopH,aAAatQ,GACdp8G,GAAmBsD,KAAK6oH,qBAAuB7oH,KAAK6oH,mBAAmB/sI,KAAO,GAC9EkkB,KAAK6oH,mBAAmBxnE,QAExB3kD,GAAmBsD,KAAKyuC,SAAWzuC,KAAKyuC,OAAO3yD,KAAO,GACtDkkB,KAAKyuC,OAAO4S,SAGpBunE,EAAavzH,UAAUsjD,gBAAkB,SAAUrtD,EAAUsX,GACzD5C,KAAK1G,UAAYhO,EACjB0U,KAAKjT,gBAAkBzB,EAASyB,gBAChCiT,KAAKu0C,qBAAsB,EAC3Bv0C,KAAKmpH,UAAU/pI,EAAewjB,GAC9B,IAAIhW,GAAS,GAAIsI,IAAW0N,GACxBk2G,EAAS,GAAIrD,IAAW,GAAI7B,IAAoBhnH,GAAS,MAAM,GAAO,EAC1EoT,MAAKopH,aAAatQ,IAEtB8P,EAAavzH,UAAU+zH,aAAe,SAAUtQ,GAC5C,GAAI5wG,GAAQlI,KACR5Z,EAAQ0yH,EAAO7D,WACnB,IAAIj1G,KAAKw0C,oBAAqB,CAE1B,IADA,GAAItzD,GAAM,GACO,OAAVkF,OAAmC,KAAVA,GAAmC,QAAVA,GACjDA,YAAiBjD,KACjB6c,KAAKyuC,OAAO3sD,IAAIZ,EAAKkF,GACrBlF,EAAM,IAEDkF,YAAiB8O,KAAc9O,YAAiBk/G,KACrDtlG,KAAKyuC,OAAO3sD,IAAIZ,EAAKkF,GACrBlF,EAAM,IAES,OAAVkF,GAAkB3L,OAAOsE,UAAUqH,IAAoB,IAAVA,EAC9C0yH,EAAOl6H,OAAS,IAChBsC,EAAMkF,EAAMzL,WAAa,IAAMm+H,EAAOl6H,MAAMjE,YAG3CyL,YAAiBwX,KAAiC,OAAlBxX,EAAMuX,aAA6C,KAAlBvX,EAAMuX,SAC1D,YAAlBvX,EAAMuX,UACNzc,EAAMkF,EAAMuX,SAEhBvX,EAAQ0yH,EAAO7D,WAwCnB,IAtCAj1G,KAAK6oH,mBAAqB7oH,KAAKq5C,uBAC/Br5C,KAAK6oH,mBAAmBx8H,QAAQ,SAAU7S,EAAO0H,GAC7C,GAAI0B,GAAapJ,CAGjB,IAFAoJ,EAAWmK,gBAAkBmb,EAAMnb,gBACnCnK,EAAWgR,UAAW,EAClBhR,GAAcA,EAAWS,IAAI,QAAS,CACtC,GAAIqW,GAAa9W,EAAWY,IAAI,OAChC,IAAmB,OAAfkW,OAA6C,KAAfA,EAA4B,CAC1D,GAAIm8C,GAAYn8C,CAChB,IAAIm8C,EAAY3tC,EAAM5O,UAAUnd,UAAW,CACvC,GAAId,GAAO6sB,EAAM5O,UAAUld,QAAQy5D,GAC/B55D,EAAiBZ,EAAKgB,eAC1B,IAAIJ,EAAgB,CAChB,GAAI02D,GAAct3D,EAAKs3D,YACnBx/C,EAAaw/C,EAAYK,iBAAiBpwD,EAC9C,IAAmB,OAAfuQ,OAA6C,KAAfA,EAA4B,CAC1DA,EAAWynD,aAAc,CACzB,IAAIrvD,GAAY2c,EAAMnb,gBAAgBkzC,mBACtC/3B,GAAMnb,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,IAC3CA,EAAWS,IAAI,OAAST,EAAWS,IAAI,SACvC6kB,EAAMuqC,qBAAqBlnD,EAAW3I,GAE1CuQ,EAAW0nD,KAAOtvD,CAClB,IAAIrP,GAAQy2D,EAAYM,aAAa74D,MACrCu4D,GAAYM,aAAat2D,KAAK4O,GAC1BonD,EAAYmI,WAAanI,EAAYmI,UAAU1gE,OAAS,IACxDu4D,EAAYmI,cAEhB7+D,EAAe6F,IAAI,SAAU6wD,EAAYM,cACzCh3D,EAAe2X,UAAW,EAC1B++C,EAAYO,mBAAmBpxD,IAAI5F,EAAOiX,GAC1C+U,EAAMwqC,aAAaC,EAAapnD,EAAW3I,EAAY3G,UAO3E+jB,KAAKuuC,eAAiBvuC,KAAKuuC,cAAcn0D,OAAS,EAClD,IAASG,EAAI,EAAGA,EAAIylB,KAAKuuC,cAAcn0D,OAAQG,IAAK,CAChD,GAAIqI,GAAaod,KAAKuuC,cAAc9zD,OAAOC,SAASH,EAAEI,WAAY,IAClE,IAAIiI,GAAcA,EAAWS,IAAI,OAAQ,CACrC,GAAIi2D,GAAY12D,EAAWY,IAAI,MAC3B81D,KACIt5C,KAAKsuC,kBAAoBtuC,KAAKsuC,iBAAiBjrD,IAAIi2D,GACnD12D,EAAWiH,OAAO,MAAOmW,KAAKsuC,iBAAiB9qD,IAAI81D,UAG5C12D,GAAW8Q,KAAK6lD,MAM3Cv5C,KAAKuuC,iBACLvuC,KAAKsuC,iBAAmB,GAAIpmB,SAE3B,CAED,GADA9hC,EAAQ0yH,EAAO7D,YACVj1G,KAAKkuC,oBAuBN,KAAiB,OAAV9nD,OAAmC,KAAVA,GAAmC,QAAVA,GAAiB,CACtE,GAAIA,YAAiBjD,KAA4B,OAAViD,GAAqC,OAAnBA,EAAMsN,KAAK21H,SAAmC5lI,KAAnB2C,EAAMsN,KAAK21H,MAC3FjjI,EAAQA,EAAMsN,KAAK21H,cACElmI,KAAwC,OAAtBiD,EAAMsN,KAAK41H,YAAyC7lI,KAAtB2C,EAAMsN,KAAK41H,QAE9D,QADdljI,EAAQA,EAAMsN,KAAK41H,aACa7lI,KAAV2C,EAClB,IAAK,GAAI7L,GAAI,EAAGA,EAAI6L,EAAMhM,OAAQG,IAAK,CACnC,GAAImb,GAAQtP,EAAM3L,OAAOC,SAASH,EAAEI,WAAY,IAChD,IAAI+a,YAAiBvS,KAA4B,OAAVuS,OAA4BjS,KAAViS,EAAqB,CAC1E,GAAIq4B,GAAIr4B,EAAMnS,SAAS,KACnBmpF,MAAI,EAEJA,GADAh3E,EAAMhC,KAAKigE,YAAahtE,IACpB+O,EAAMnS,SAAS,KAAKiG,KAGpBkM,EAAMnS,SAAS,KAEb,OAANwqC,OAAoBtqC,KAANsqC,GAAmBA,EAAE3zC,OAAS,GAC5C4lB,KAAKyuC,OAAO3sD,IAAIisC,EAAG2+C,IAO3CtmF,EAAQ0yH,EAAO7D,gBA3CnB,MAJA7uH,EAAQ0yH,EAAO7D,sBACMr3G,KAAiC,OAAlBxX,EAAMuX,UACtCvX,EAAQA,EAAMuX,SAED,OAAVvX,OAAmC,KAAVA,GAAmC,QAAVA,GAAiB,CACtE,GAAIA,YAAiBjD,IAAgB,CACjC,GAAI4qC,GAAI3nC,EAAM7C,SAAS,KACnBmpF,MAAI,EAEJA,GADAtmF,EAAMsN,KAAKigE,YAAahtE,IACpBP,EAAM7C,SAAS,KAAKiG,KAGpBpD,EAAM7C,SAAS,KAEb,OAANwqC,OAAoBtqC,KAANsqC,GAAmBA,EAAE3zC,OAAS,GAC5C4lB,KAAKyuC,OAAO3sD,IAAIisC,EAAG2+C,GAG3BtmF,EAAQ0yH,EAAO7D,YAgCvBj1G,KAAKmzC,iBAGby1E,EAAavzH,UAAUgkD,qBAAuB,WAC1C,GAAIkwE,GAAU,GAAIrhG,KACdshG,EAAgB,GAAIthG,IAExB,IAAgB,QADhBqhG,EAAUvpH,KAAKyuC,aAC4B,KAAZ86E,GAA2BA,EAAQztI,KAAO,GAAKytI,EAAQlmI,IAAI,WAAY,CAClG,GAAIomI,GAAUF,EAAQ/lI,IAAI,UAC1B,IAAIimI,YAAmBtmI,KAA8B,OAAZsmI,OAAuC,KAAZA,GAA2BA,EAAQpmI,IAAI,QAAS,CAChH,GAAI8uD,GAASs3E,EAAQ58H,OAAO,OAC5B,IAAe,OAAXslD,OAAqC,KAAXA,EAAwB,CAClD,GAAIu3E,GAAUv3E,EAAO6S,aAAarqE,WAAa,IAAMw3D,EAAO8S,iBAAiBtqE,UAC7E,IAAI4uI,EAAQlmI,IAAIqmI,GAAU,CACtB,GAAI93E,GAAO23E,EAAQ/lI,IAAIkmI,EACvB,IAAa,OAAT93E,OAAiC,KAATA,GAAwBA,EAAKvuD,IAAI,OAAQ,CACjE,GAAIsmI,GAAM/3E,EAAKpuD,IAAI,MACnB,IAAY,OAARmmI,OAA+B,KAARA,GAAuBA,EAAItmI,IAAI,UAAW,CACjE,GAAImI,GAASm+H,EAAInmI,IAAI,SACrB,IAAe,OAAXgI,OAAqC,KAAXA,GAA0BA,EAAOpR,OAAS,EACpE,IAAK,GAAIG,GAAI,EAAGA,EAAIiR,EAAOpR,OAAQG,IAAK,CACpC,GAAI89E,GAAQ7sE,EAAO/Q,OAAOC,SAASH,EAAEI,WAAY,KAC7CuG,EAAMm3E,EAAMrT,aAAarqE,WAAa,IAAM09E,EAAMpT,iBAAiBtqE,UACnE4uI,GAAQlmI,IAAInC,KACZm3E,EAAQkxD,EAAQ/lI,IAAItC,GACpBsoI,EAAc1nI,IAAIZ,EAAKm3E,GACvBkxD,EAAQ50H,OAAOzT,OAOvCqoI,EAAQ50H,OAAO+0H,IAGvBH,EAAQ50H,OAAO,WAEnB,MAAO60H,IAEXZ,EAAavzH,UAAU89C,aAAe,WAClC,GAAIjrC,GAAQlI,KACRxK,EAAOwK,KAAK1G,UAAU9D,KACtBlL,EAAQkL,EAAKlL,KACbA,IACA0V,KAAKyuC,OAAOpiD,QAAQ,SAAU7S,EAAO0H,GACjC,GAAI4sB,EACA5F,GAAMumC,OAAO3yD,KAAO,GAAKosB,EAAMumC,OAAOprD,IAAInC,KAC1C4sB,EAAY5F,EAAMumC,OAAOjrD,IAAItC,GAEjC,IAAIhF,GAAQsZ,EAAK69C,eAAenyD,EAChC,KAAe,IAAXhF,GAAgBA,EAAQoO,EAAO,CAC/B,GAAIoL,GAAQF,EAAK89C,QAAQp3D,EACzB,IAAIwZ,EAAO,CACHoY,GAA2B,KAAdA,GACbpY,EAAM/I,YAAY9C,OAAO,KAAMikB,EAEnC,IAAI8vC,KACAt8D,OAAMuB,QAAQrJ,GACdokE,EAAQpkE,EAGRokE,EAAMjhE,KAAKnD,GAEf0uB,EAAMqrC,iBAAiB79C,EAAOkoD,QAOlDgrE,EAAavzH,UAAU6/C,sBAAwB,SAAU5pD,EAAUnP,GAC/D,GAAIytI,GAAYhgH,GAAiB1J,YAAc,IAAM0J,GAAiB1J,WAEtEF,MAAKqvC,WAAa,cAIlB,KAAK,GAHDnzD,GAAQ,EACRm8E,EAAQ,GAAI/2E,OACZ4K,EAAa8T,KAAKq0C,iBACb95D,EAAI,EAAGA,EAAI4B,EAAW5B,IAAK,CAChC,GAAIc,GAAOiQ,EAASlP,QAAQ7B,EAC5B,IAAa,OAATc,OAAiC,KAATA,GAAwBA,EAAKs3D,YAAYroD,MAAQ,EACzE,IAAK,GAAItE,GAAI,EAAGA,EAAI3K,EAAKs3D,YAAYroD,MAAOtE,IAAK,CAC7C,GAAImN,GAAa9X,EAAKs3D,YAAY34D,GAAGgM,EACrC,IAAmB,OAAfmN,OAA6C,KAAfA,KAAgCA,YAAsB2iD,KACpF3iD,YAAsB4iD,KAA4B5iD,YAAsB6iD,KACxE7iD,YAAsB8iD,KACtB,GAAI9iD,YAAsBwlF,KAA4BxlF,YAAsBw3E,IAExEzuF,GADI1C,EAAQwmB,KAAKmhD,kBAAkBhuD,EAAY6M,KAAKqvC,UAAWnzD,EAAOm8E,EAAO99E,GAAG,IAClE2B,MACdm8E,EAAQ7+E,EAAM6+E,UAEb,CACD,GAAI7+E,GAAQwmB,KAAKmhD,kBAAkBhuD,EAAY6M,KAAKqvC,UAAWnzD,EAAOm8E,EAAO99E,EAAG2R,EAChFhQ,GAAQ1C,EAAM0C,MACdm8E,EAAQ7+E,EAAM6+E,QAMlC,GAAc,IAAVn8E,EAAa,CACb,GAAI01D,GAAO,IAAMg4E,CACjB5pH,MAAKqvC,WAAauC,EAAO,yBACzB,KAASr3D,EAAI,EAAGA,EAAI89E,EAAMj+E,OAAS,EAAGG,IAClCylB,KAAKqvC,WAAagpB,EAAM59E,OAAOC,SAASH,EAAEI,WAAY,KAAOivI,EAAY,IAE7E5pH,MAAKqvC,WAAagpB,EAAMA,EAAMj+E,OAAS,GAAKwvI,EAAY,QAA8B5pH,KAAKmuC,UAAY,QACvGnuC,KAAKqvC,WAAarvC,KAAKmuC,UAAY,mCACnCnuC,KAAKqvC,WAAa,sBAAsDuC,EAAO,qBAGvFg3E,EAAavzH,UAAU8rD,kBAAoB,SAAUhuD,EAAYk8C,EAAWnzD,EAAOm8E,EAAOxiB,EAAW3pD,GACjG8T,KAAKqvC,UAAYA,CACjB,IAAIw6E,GAAS,GAAIC,IACblnI,EAAauQ,EAAWxG,YACxBo9H,EAAcngH,GAAiB1J,YAAc,IAAM0J,GAAiB1J,YAAc,SAEtFF,MAAKgqH,cAAgB9tI,EAAMvB,WAC3BqlB,KAAKqvC,WAAanzD,EAAQ6tI,EAAc,IACxC,IAAI3xF,GAAO,GAAIlQ,KACX+hG,EAAkB,GAAI3oI,MAC1B+2E,GAAM17E,KAAKqjB,KAAKgqH,eAChBpnI,EAAWd,IAAI,OAAQ+zD,EACvB,IAAIq0E,GAAalqH,KAAKmqH,YAAY/xF,EAAM6xF,EAAiB/tI,EAAO0G,EAAYod,KAAKqvC,UAAWnjD,EAC5FhQ,GAAQguI,EAAWhuI,MACnBk8C,EAAO8xF,EAAW9xF,KAClB6xF,EAAkBC,EAAWD,sBACtBrnI,GAAW8Q,KAAK02H,KACvBpqH,KAAKqvC,WAAa,kBA2ClB,KA1CA,GAyCIiN,GAASt8C,KACNo4B,EAAKt8C,KAAO,IA1CL,WACV,GAAIq1B,GAAO7vB,OACX82C,GAAK/rC,QAAQ,SAAUnL,EAAK1H,GACxB23B,EAAKx0B,KAAKnD,IAEd,KAAK,GAAIe,GAAI,EAAGA,EAAI42B,EAAK/2B,OAAQG,IAAK,CAClC,GAAI2G,GAAMiwB,EAAK12B,OAAOC,SAASH,EAAEI,WAAY,IAC7C,KAAIy9C,EAAK50C,IAAItC,YAAgBiC,KAAkBi1C,EAAK50C,IAAItC,YAAgBgU,KACpEkjC,EAAK50C,IAAItC,YAAgBokH,MAON,QALf1iH,EADAw1C,EAAK50C,IAAItC,YAAgBiC,IACZi1C,EAAK50C,IAAItC,GAGTk3C,EAAK50C,IAAItC,GAAK0B,iBAEkB,KAAfA,EAA4B,CAC1D,GAAIA,YAAsBO,KAAkBP,EAAWS,IAAI,QAAS,CAChE,GAAIqL,GAAO9L,EAAWY,IAAI,OACb,QAATkL,OAAiC,KAATA,GAAsC,UAAdA,EAAKlF,OACrD6uE,EAAM17E,KAAKuE,EAAIvG,YACfiI,EAAWd,IAAI,OAAQ+zD,IAG/ByG,EAAOjN,WAAanuD,EAAM6oI,EAAc,IACxC,IAAIvwI,GAAQ8iE,EAAO6tE,YAAY/xF,EAAM6xF,EAAiB/tI,EAAO0G,EAAY05D,EAAOjN,UAAWnjD,EAC3FksC,GAAO5+C,EAAM4+C,KACb6xF,EAAkBzwI,EAAMywI,gBACxB/tI,EAAQ1C,EAAM0C,MACV0G,YAAsBO,KAAkBP,EAAWS,IAAI,eAChDT,GAAW8Q,KAAK02H,KAE3B9tE,EAAOjN,WAAa,KACI,OAApB46E,OAAuD,KAApBA,IAAqE,IAAlCA,EAAgB1oI,QAAQL,IAC9Fo7D,EAAO+tE,cAAcjyF,EAAK50C,IAAItC,GAAMo7D,EAAOjN,WAE/CiN,EAAOjN,WAhDP,iBAmDRjX,EAAKzjC,OAAOzT,MAUpB,OAHAhF,KACA2tI,EAAO3tI,MAAQA,EACf2tI,EAAOxxD,MAAQA,EACRwxD,GAEXjB,EAAavzH,UAAUg1H,cAAgB,SAAU7wI,EAAO61D,GACpD,GAAIziD,GAASpT,CAUb,IATAwmB,KAAKqvC,UAAYA,GACb71D,YAAiB8rH,KAAmB9rH,YAAiB0b,OAEjDtI,EADApT,YAAiB8rH,IACR9rH,EAAMoT,OAGNpT,GAGbA,YAAiB8rH,KAAmB9rH,YAAiB0b,IAAY,CACjE,GAAIjV,GAAY2M,EAAOgqD,WACnB95C,EAAY,GAAIpe,YAAWuB,GAC3B8c,EAAK,GAAIC,yBACbD,GAAGE,MAAMH,EAAW,EAAGA,EAAU1iB,QACjC2iB,EAAGG,OACH,IAAIotH,GAAiBvtH,EAAGI,mBACxB6C,MAAKqvC,WAAa,aAClBrvC,KAAKqvC,WAAai7E,EAClBtqH,KAAKqvC,WAAa,kBAG1Bu5E,EAAavzH,UAAU80H,YAAc,SAAU/xF,EAC/C6xF,EAAiB/tI,EAAO0G,EAAYysD,EAAW8G,GAC3C,GAAIjuC,GAAQlI,KACRzjB,GAAO,EACPstI,EAAS,GAAIC,GACjB9pH,MAAKqvC,UAAYA,CACjB,IAAIk7E,GAAiBnyF,CAyErB,OAxEAx1C,GAAWyJ,QAAQ,SAAUnL,EAAK1H,GAC9B,GAAQ28D,GAAyB,OAARj1D,EAAgB,CACzB,MAARA,IACAgnB,EAAMmnC,WAAa,IAAMnuD,IAEjB,UAARA,GAA2B,MAARA,GAAei1D,KAClC55D,GAAO,EAEX,IAAI20D,GAAY13D,CAChB,IAAyB,gBAAd03D,GACPhpC,EAAMmnC,WAAa,IAAMnnC,EAAMsiH,oBAAoBt5E,GAAa,QAE/D,IAAIA,YAAqBvqD,IAC1BuhB,EAAMmnC,WAAa,IAAM6B,EAAU1nD,SAElC,IAAI0nD,YAAqB5vD,OAAO,CACjC4vD,EAAYA,CACZ,IAAIixE,GAAUj6G,EAAMuiH,aAAav5E,EAAWhpC,EAAMmnC,UAAWnzD,EAAOK,EAAMguI,EAAgBN,EAC1FM,GAAiBpI,EAAQ/pF,KACzB6xF,EAAkB9H,EAAQ8H,gBAC1B/tI,EAAQimI,EAAQjmI,UAEf,IAAyB,gBAAdg1D,GACZhpC,EAAMmnC,WAAa,IAAM6B,EAAUv2D,eAElC,IAAyB,iBAAdu2D,GACZhpC,EAAMmnC,WAAa,KAAO,EAAc,OAAS,aAEhD,IAAI6B,YAAqB/tD,IAAgB,CAC1C+kB,EAAMmnC,WAAa,KACnB6B,EAAYA,CACZ,IAAIw5E,GAAUxiH,EAAMiiH,YAAYI,EAAgBN,EAAiB/tI,EAAOg1D,EAAWhpC,EAAMmnC,UAAW8G,EACpGo0E,GAAiBG,EAAQtyF,KACzB6xF,EAAkBS,EAAQT,gBAC1B/tI,EAAQwuI,EAAQxuI,MAChBgsB,EAAMmnC,WAAa,SAElB,IAAI6B,YAAqBxlD,IAAe,CACzC,GAAIgO,GAAa9W,EAAWY,IAAI,OAChC,IAAY,WAARtC,EACAgnB,EAAMmnC,WAAa,IAAMnnC,EAAM8hH,cAAgB,OAC/C9hH,EAAMmnC,WAAa,SAAW31C,MAE7B,IAAY,QAARxY,GACL,GAAIgnB,EAAMnb,iBAAmBmb,EAAMnb,gBAAgBwH,QAAU28C,EAAW,CACpE,GAAIy5E,GAAsBziH,EAAMnb,gBAAgBwH,OAAO28C,EACvD,IAAIy5E,GAAuBA,EAAoBtnI,IAAI,MAAO,CACtD,GAAIzC,GAAQ+pI,EAAoBnnI,IAAI,KACtB,QAAV5C,OAAmC,KAAVA,IACzBsnB,EAAMmnC,WAAa,IAAMnnC,EAAMsiH,oBAAoB5pI,GAAS,WAKvE,IAAY,MAARM,EAAa,CAClB,GAAIixD,GAASjB,CACE,QAAXiB,OAAqC,KAAXA,IAC1Bj2D,IACAgsB,EAAMmnC,WAAa,IAAMnzD,EAAQ,OAC7BK,GACA0tI,EAAgBttI,KAAKT,GAEzBquI,EAAezoI,IAAI5F,EAAO0G,EAAWY,IAAItC,MAIrD3E,GAAO,KAGfstI,EAAOzxF,KAAOmyF,EACdV,EAAOI,gBAAkBA,EACzBJ,EAAO3tI,MAAQA,EACR2tI,GAEXjB,EAAavzH,UAAUo1H,aAAe,SAAUnqI,EAChD+uD,EAAWnzD,EAAOK,EAAM67C,EACxB6xF,GACIjqH,KAAKqvC,UAAYA,EACjBrvC,KAAKqvC,WAAa,GAClB,IAAIw6E,GAAS,GAAIC,IACbS,EAAiBnyF,CACrB,IAAI17B,GAAmBpc,IAAUA,EAAMlG,OAAS,EAE5C,IAAK,GADDkQ,GAAQhK,EAAMlG,OACTG,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIoJ,GAAUrD,EAAM7F,OAAOC,SAASH,EAAEI,WAAY,IACxC,KAANJ,IAA+B,gBAAZoJ,IAAwBA,YAAmB+H,KAAoC,iBAAZ/H,MACtFqc,KAAKqvC,WAAa,IAEtB,IAAI71D,GAAQwmB,KAAK4qH,eAAejnI,EAASqc,KAAKqvC,UAAWnzD,EAAOK,EAAMguI,EAAgBN,EACtFM,GAAiB/wI,EAAM4+C,KACvB6xF,EAAkBzwI,EAAMywI,gBACxB/tI,EAAQ1C,EAAM0C,MAOtB,MAJA8jB,MAAKqvC,WAAa,IAClBw6E,EAAOzxF,KAAOmyF,EACdV,EAAOI,gBAAkBA,EACzBJ,EAAO3tI,MAAQA,EACR2tI,GAEXjB,EAAavzH,UAAUu1H,eAAiB,SAAUjnI,EAClD0rD,EAAWnzD,EAAOK,EAAM67C,EACxB6xF,GACIjqH,KAAKqvC,UAAYA,CACjB,IAAIw6E,GAAS,GAAIC,IACbS,EAAiBnyF,CACrB,IAAuB,gBAAZz0C,GACPqc,KAAKqvC,WAAa,EAAU10D,eAE3B,IAAIgJ,YAAmBgD,IACxBqZ,KAAKqvC,WAAc1rD,EAAQ6F,KAAK7O,eAE/B,IAAIgJ,YAAmBrC,OACxBqC,EAAUA,EAEV4mI,GADI/wI,EAAQwmB,KAAKyqH,aAAa9mI,EAASqc,KAAKqvC,UAAWnzD,EAAOK,EAAMguI,EAAgBN,IAC7D7xF,KACvB6xF,EAAkBzwI,EAAMywI,gBACxB/tI,EAAQ1C,EAAM0C,UAEb,IAAIyH,YAAmBR,IAAgB,CACxC6c,KAAKqvC,WAAa,KAClB1rD,EAAUA,CACV,IAAInK,GAAQwmB,KAAKmqH,YAAYI,EAAgBN,EAAiB/tI,EAAOyH,EAASqc,KAAKqvC,UAAW9yD,EAC9FguI,GAAiB/wI,EAAM4+C,KACvB6xF,EAAkBzwI,EAAMywI,gBACxB/tI,EAAQ1C,EAAM0C,MACd8jB,KAAKqvC,WAAa,KAKtB,MAHAw6E,GAAOzxF,KAAOmyF,EACdV,EAAOI,gBAAkBA,EACzBJ,EAAO3tI,MAAQA,EACR2tI,GAEXjB,EAAavzH,UAAUm1H,oBAAsB,SAAUhxI,GAEnD,IAAK,GADD2F,GAAS,GACJ5E,EAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAAK,CACnC,GAAIuL,GAAItM,EAAMgE,WAAWjD,EACf,MAANuL,GAAkB,KAANA,IACZ3G,GAAU,KAEdA,GAAUjB,OAAOC,aAAa2H,GAElC,MAAO3G,IAGXypI,EAAavzH,UAAU8zH,UAAY,SAAUxlI,GAIzC,IAHIA,EAAQ6S,SAASwJ,KAAK8oH,qBAAuBnlI,EAAQ6S,SAAS,eAC9DwJ,KAAKkuC,qBAAsB,GAE3BvqD,EAAQuX,WAAW,MAEL,SADFvX,EAAQpD,UAAU,EAAG,GAE7B,KAAM,IAAIrF,OAAM,sBAI5B0tI,EAAavzH,UAAU4zH,mBAAqB,SAAUx6H,GAClD,GAAIpO,GAAY,EAKhB,OAJa,QAAToO,OAAiC,KAATA,GAAwBA,EAAKrU,OAAS,IAE9DiG,EAAYL,EADKnC,EAAe4Q,KAG7BpO,GAEJuoI,GACT36E,IAEE67E,GAA4B,WAC5B,QAASA,MAET,MAAOA,MChrBP1jH,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGzgB,GAI7B,OAHAwgB,EAAgBjR,OAAOmR,iBAChBC,uBAA2BllB,QAAS,SAAUglB,EAAGzgB,GAAKygB,EAAEE,UAAY3gB,IACvE,SAAUygB,EAAGzgB,GAAK,IAAK,GAAI4gB,KAAK5gB,GAAOA,EAAE6gB,eAAeD,KAAIH,EAAEG,GAAK5gB,EAAE4gB,MACpDH,EAAGzgB,GAE5B,OAAO,UAAUygB,EAAGzgB,GAEhB,QAAS8gB,KAAO3G,KAAK4G,YAAcN,EADnCD,EAAcC,EAAGzgB,GAEjBygB,EAAEjR,UAAkB,OAANxP,EAAauP,OAAOkI,OAAOzX,IAAM8gB,EAAGtR,UAAYxP,EAAEwP,UAAW,GAAIsR,QAMnFkkH,GAA8B,SAAU7iH,GAExC,QAAS6iH,GAAa/1E,GAClB,GAAI5sC,GAAQF,EAAO1S,KAAK0K,OAASA,IAIjC,OAHiB,QAAb80C,OAAyC,KAAbA,IAC5B5sC,EAAMimC,UAAY2G,GAEf5sC,EA4IX,MAlJA9B,IAAUykH,EAAc7iH,GAQxB6iH,EAAax1H,UAAU0/C,mBAAqB,WACxC,KAAM,IAAI75D,OAAM,4BAEpB2vI,EAAax1H,UAAU2/C,kBAAoB,SAAU1pD,GAMjD,MALA0U,MAAK1G,UAAYhO,EACjB0U,KAAKjT,gBAAkBzB,EAASyB,gBAChCiT,KAAKu0C,qBAAsB,EAC3Bv0C,KAAKyJ,QAAU,MACfzJ,KAAKuoC,KAAOz+C,IACLkW,KAAKg+B,SAEhB6sF,EAAax1H,UAAU2oC,MAAQ,WAC3B,GAAIze,GAAS,GAAI4qB,GACjB5qB,GAAOurB,sBACH9qC,KAAKkuC,qBACL3uB,EAAO0rB,mBAAmB,UAC1B1rB,EAAO0sB,sBAAsB,OAAQ,uCAAwC,QAAS,OAGtF1sB,EAAO0rB,mBAAmB,SAE9B,IAAIz1C,GAAOwK,KAAK1G,UAAU9D,IAC1B,IAAa,OAATA,OAAiC,KAATA,EAAsB,CAC9CwK,KAAKquC,mBAAqB74C,EAAK2/C,iBAE/B,KAAK,GADD7qD,GAAQ0V,KAAK1G,UAAU9D,KAAKlL,MACvB/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAImb,GAAQsK,KAAK1G,UAAU9D,KAAK89C,QAAQ/4D,EAC1B,QAAVmb,OAAmC,KAAVA,GAAyBA,EAAM85C,QACxDxvC,KAAK0wC,qBAAqBh7C,GAGlCsK,KAAKo1C,oBAAoB71B,EAAQvf,KAAKkuC,qBAE1C,GAAI/uD,GAASogC,EAAOye,OAEpB,OADAze,GAAOitB,WACArtD,GAEX0rI,EAAax1H,UAAU+/C,oBAAsB,SAAU71B,EAAQ81B,OACzC,KAAdA,IAAwBA,GAAY,GACpCA,EACAr1C,KAAKyuC,OAAOpiD,QAAQ,SAAU7S,EAAO0H,GACjC,GAAIA,EAAIsV,SAAS,KAAM,CACnB,GAAI/H,GAAOvN,EAAIG,QAAQ,KAAM,GAC7Bk+B,GAAO0rB,mBAAmBx8C,EAAK9T,YAC/B4kC,EAAO0sB,sBAAsB,WAAY/qD,EAAIvG,WAAY,OAAQ,UAGjE4kC,GAAO0rB,mBAAmB/pD,EAAIvG,WAElC4kC,GAAOiB,aAAahnC,EAAMmB,YAC1B4kC,EAAOmsB,qBAIX1rC,KAAKyuC,OAAOpiD,QAAQ,SAAU7S,EAAO0H,GAC7BA,EAAIsV,SAAS,OACbtV,EAAMA,EAAIG,QAAQ,KAAM,YAE5Bk+B,EAAO0rB,mBAAmB/pD,EAAIvG,YAC9B4kC,EAAOiB,aAAahnC,EAAMmB,YAC1B4kC,EAAOmsB,qBAGfnsB,EAAOmsB,oBAEXm/E,EAAax1H,UAAUsjD,gBAAkB,SAAUrtD,EAAUsX,GACzD5C,KAAK1G,UAAYhO,EACjB0U,KAAKjT,gBAAkBzB,EAASyB,gBAChCiT,KAAKu0C,qBAAsB,CAC3B,IAAI/6D,GAAQ4F,EAAewjB,EAE3BppB,IADAA,EAAQA,EAAM6H,QAAQ,iBAAkB,KAC1BA,QAAQ,gBAAiB,IACvC2e,KAAK20C,cAAe,GAAK4D,YAAaC,gBAAgBh/D,EAAO,YAC7DwmB,KAAK8qH,UAAU9qH,KAAK20C,cACpB30C,KAAKsvC,YAAa,EAClBtvC,KAAKw5C,eAAex5C,KAAK20C,aAAa+D,iBACtC14C,KAAKsvC,YAAa,GAEtBu7E,EAAax1H,UAAUmkD,eAAiB,SAAU5H,GAC9C,GAAIoH,GAAQpH,EAAKuH,UACjB,IAAc,OAAVH,OAAmC,KAAVA,GAAyBA,EAAM5+D,OAAS,EACjE,IAAK,GAAIG,GAAI,EAAGA,EAAIy+D,EAAM5+D,OAAQG,IAAK,CACnC,GAAI6+D,GAAYJ,EAAMzsD,KAAKhS,EAC3B,IAAkB,OAAd6+D,OAA2C,KAAdA,GAAoD,IAAvBA,EAAUR,SAAgB,CACpF,GAAIj1D,GAAUy1D,EACV3qD,EAAO,EACX,IAA2B,OAAvB9K,EAAQ03D,gBAAqD,KAAvB13D,EAAQ03D,YAA8B13D,EAAQ03D,WAAWjhE,OAAS,EAAG,CAC3G,GAAI69D,GAAYt0D,EAAQ03D,WAAW9uD,KAAK,EACtB,QAAd0rD,OAA2C,KAAdA,GAAgD,kBAAnBA,EAAUzuD,OACpEiF,EAAOwpD,EAAUz+D,WAIrBiV,GAAO9K,EAAQ08F,OAEnB,IAAI3T,GAAI/oF,EAAQ22D,WACH,QAAT7rD,OAA0BhL,KAATgL,GAAsBA,EAAKrU,OAAS,GACrD4lB,KAAKyuC,OAAO3sD,IAAI2M,EAAMi+E,IAKtC1sE,KAAKmzC,gBAET03E,EAAax1H,UAAU89C,aAAe,WAClC,GAAIjrC,GAAQlI,KACRxK,EAAOwK,KAAK1G,UAAU9D,KACtBlL,EAAQkL,EAAKlL,KACbA,IACA0V,KAAKyuC,OAAOpiD,QAAQ,SAAU7S,EAAO0H,GACjC,GAAI4sB,EACA5F,GAAMumC,OAAO3yD,KAAO,GAAKosB,EAAMumC,OAAOprD,IAAInC,KAC1C4sB,EAAY5F,EAAMumC,OAAOjrD,IAAItC,GAEjC,IAAIuN,GAAOvN,EAAIvG,YACkB,IAA7B8T,EAAKlN,QAAQ,aACbkN,EAAOA,EAAKpN,QAAQ,WAAY,KAEpC,IAAInF,GAAQsZ,EAAK69C,eAAe5kD,EAChC,KAAe,IAAXvS,GAAgBA,EAAQoO,EAAO,CAC/B,GAAIoL,GAAQF,EAAK89C,QAAQp3D,EACzB,IAAIwZ,GAAmB,OAAVA,OAAmC,KAAVA,EAAuB,CACrDoY,GAA2B,KAAdA,GACbpY,EAAM/I,YAAY9C,OAAO,KAAMikB,EAEnC,IAAI8vC,KACJA,GAAMjhE,KAAKnD,GACX0uB,EAAMqrC,iBAAiB79C,EAAOkoD,QAMlDitE,EAAax1H,UAAUy1H,UAAY,SAAUC,GACzC,GAAIA,EAAYhyE,qBAAqB,eAAe3+D,OAAS,EACzD,KAAM,IAAIc,OAAM,sBAGjB2vI,GACT58E,ICrJE+8E,GAAkC,WAClC,QAASA,KACLhrH,KAAKirH,oBAAqB,EA0F9B,MAxFA71H,QAAO4Q,eAAeglH,EAAiB31H,UAAW,sBAkB9C7R,IAAK,WACD,MAAOwc,MAAKi8G,qBAmBhBn6H,IAAK,SAAUtI,GACXwmB,KAAKi8G,oBAAsBziI,GAE/BysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeglH,EAAiB31H,UAAW,uBAkB9C7R,IAAK,WACD,MAAOwc,MAAKirH,oBAmBhBnpI,IAAK,SAAUtI,GACXwmB,KAAKirH,mBAAqBzxI,GAE9BysB,YAAY,EACZC,cAAc,IAEX8kH,KCrFPE,GAAsC,WACtC,QAASA,KACLlrH,KAAKmrH,oBAAqB,EAC1BnrH,KAAKorH,kBAAmB,EA6L5B,MA3LAh2H,QAAO4Q,eAAeklH,EAAqB71H,UAAW,eAkBlD7R,IAAK,WACD,MAAOwc,MAAKqrH,cAsBhBvpI,IAAK,SAAUtI,GACXwmB,KAAKqrH,aAAe7xI,GAExBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeklH,EAAqB71H,UAAW,YAkBlD7R,IAAK,WACD,MAAOwc,MAAKipF,WAsBhBnnG,IAAK,SAAUtI,GACXwmB,KAAKipF,UAAYzvG,GAErBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeklH,EAAqB71H,UAAW,qBAkBlD7R,IAAK,WACD,MAAOwc,MAAKmrH,oBAsBhBrpI,IAAK,SAAUtI,GACXwmB,KAAKmrH,mBAAqB3xI,GAE9BysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeklH,EAAqB71H,UAAW,mBAkBlD7R,IAAK,WACD,MAAOwc,MAAKorH,kBAqBhBtpI,IAAK,SAAUtI,GACXwmB,KAAKorH,iBAAmB5xI,GAE5BysB,YAAY,EACZC,cAAc,IAEXglH,KC3MPI,GAAiC,WACjC,QAASA,GAAgBx2H,EAAgBvW,EAAatE,EAAQsxI,EAAen7E,GACzEpwC,KAAKkoF,sBACLloF,KAAKwrH,cACLxrH,KAAK0uC,WACL1uC,KAAKyrH,eAAiB,GAAIvjG,KAC1BloB,KAAK0rH,4BAA8B,GAAIxjG,KACvCloB,KAAKunD,gBACLvnD,KAAK2rH,SAAW,GAAIzjG,KACpBloB,KAAK4rH,iBAAmB,GAAI1jG,KAC5BloB,KAAK6rH,kBAAmB,EACxB7rH,KAAK4mH,eACL5mH,KAAK2zC,SAAW,GAAIu3E,IACpBlrH,KAAK8rH,kBACL9rH,KAAK+rH,sBAAwB,GAAI7jG,KACjCloB,KAAKgsH,eACLhsH,KAAKsoD,kBAAmB,EACxBtoD,KAAKisH,YAAc,EACnBjsH,KAAKjT,gBAAkB+H,EACvBkL,KAAKksH,qBAAuB3tI,EAC5ByhB,KAAKmsH,gBAAkBlyI,EACvB+lB,KAAKyrH,eAAiBF,MACC,KAAZn7E,IACPpwC,KAAK2zC,SAAWvD,GAEpBpwC,KAAKosH,QAAU,GAAIC,IAAWrsH,KAAKjT,gBAAiBiT,KAAKmsH,gBAAgBp/H,iBAonC7E,MAlnCAu+H,GAAgBj2H,UAAUi3H,aAAe,SAAUjxI,EAAMa,EAAOqwI,EAAQC,EAAcp8E,EAASq8E,GAC3F,GACIjgI,GACAkgI,EAFAxkH,EAAQlI,KAGR/jB,EAAiBZ,EAAKgB,eAiB1B,IAhBA2jB,KAAKsoD,iBAAmBkkE,EAKpBxsH,KAAK2zC,SAASl4D,SAJb20D,EAIwBA,EAAQ30D,SAHRJ,EAAKI,SAM9BixI,EADiB,gBAAVxwI,GACG8jB,KAAK2sH,eAAetxI,EAAMa,GAE/B8jB,KAAKsoD,iBACAtoD,KAAK2sH,eAAetxI,EAAMA,EAAKqoD,WAAa,GAG5C1jC,KAAK2sH,eAAetxI,IAE7BmxI,GAAgBC,IAAoBzsH,KAAK2zC,SAASi5E,kBAAmB,CACtE,GAAIC,KACJ5wI,GAAeoQ,QAAQ,SAAUnL,EAAK1H,GAClC,GAAY,aAAR0H,GAA+C,IAAzB2rI,EAAczyI,OAAc,CAClD,GAAImwG,GAAW/wG,CACf,IAAI+wG,YAAoB7+F,IAAe,CACnC,GAAIohI,GAAcL,EAAkBvkH,EAAMkkH,QAAQW,MAAMxiC,GAAYA,CACpEmiC,GAAQrwI,gBAAgBwN,OAAO3I,EAAK4rI,OAEnC,IAAIviC,YAAoBjpG,OAAO,CAChC,IAAK,GAAI/G,GAAI,EAAGA,EAAIgwG,EAASnwG,OAAQG,IAAK,CACtC,GAAIyyI,GAAaP,EAAmBvkH,EAAMkkH,QAAQW,MAAMxiC,EAAS9vG,OAAOC,SAASH,EAAEI,WAAY,MAC3F4vG,EAAS9vG,OAAOC,SAASH,EAAEI,WAAY,IAC3CkyI,GAAclwI,KAAKqwI,GAEvBN,EAAQrwI,gBAAgBwN,OAAO3I,EAAK2rI,QAGvC,IAAY,cAAR3rI,GAAuB1H,EAAO,CACnC,GAAIyzI,GAAgBR,EAAkBvkH,EAAMkkH,QAAQW,MAAMvzI,GAASA,CAC/DyzI,IACAP,EAAQrwI,gBAAgBwN,OAAO3I,EAAK+rI,OAG3B,cAAR/rI,GAA+B,aAARA,GAA8B,YAARA,GAA6B,WAARA,GAA4B,WAARA,GAChF,aAARA,GAA8B,WAARA,GACzBwrI,EAAQrwI,gBAAgBwN,OAAO3I,EAAK1H,SAK5CgT,GAAWnR,EAAK6xI,iBAChBR,EAAQjyF,SAAS+D,aAAahyC,GAAYzI,EAAG,EAAGC,EAAG,EAAGC,MAAOuI,EAASgb,MAAM,GAAIlsB,OAAQkR,EAASgb,MAAM,KACvGhb,EAASW,SAASvK,WAAWiH,OAAO,YAAamW,KAAKosH,QAAQW,MAAM9wI,EAAe4Q,OAAO,eAC1FmT,KAAKyrH,eAAe3pI,IAAI7F,EAAgBywI,GACnCF,GACDxsH,KAAK0rH,4BAA4B5pI,IAAIzG,EAAKw/D,KAAM6xE,EAAQhpF,WAYhE,IATIznD,EAAeoH,IAAI,YACnB2c,KAAKmtH,kBAAkB9xI,EAAMqxI,OACA,KAAlB1sH,KAAK2zC,UAA4B3zC,KAAK2zC,SAASy5E,iBAAmBptH,KAAKmsH,gBAAgBv4C,SAASC,mBAAmBxwF,IAAI,YAC9H2c,KAAKqtH,2BAA2BrtH,KAAKmsH,gBAAgB32H,KAAMna,EAAMqxI,GAE5D1sH,KAAKmsH,gBAAgBv4C,SAASC,mBAAmBxwF,IAAI,aAC1D2c,KAAKstH,iBAAiBjyI,EAAM2kB,KAAKmsH,gBAAgB32H,KAAMk3H,EAAS1sH,KAAKmsH,gBAAgBp/H,mBAGxFy/H,EAAc,CACf,GAAIe,GAAcvtH,KAAKmsH,gBAAgBqB,2BACvC,IAAID,GAAeA,EAAYlqI,IAAIhI,GAE/B,IAAK,GADDoyI,GAAYF,EAAY/pI,IAAInI,GACvBd,EAAI,EAAGA,EAAIkzI,EAAUrzI,OAAQG,IAClCylB,KAAKwrH,WAAW7uI,KAAK8wI,EAAUhzI,OAAOC,SAASH,EAAEI,WAAY,QAInE6xI,GAAgBD,IAAYvsH,KAAK2zC,SAASi5E,oBAC5C5sH,KAAK0tH,YAAYhB,EAAQrwI,gBAAiBJ,EAAgB+jB,KAAKmsH,gBAAgBp/H,iBAEnF2/H,EAAQrwI,gBAAgBuX,UAAW,GAEvC03H,EAAgBj2H,UAAU83H,kBAAoB,SAAU9xI,EAAMqxI,GAM1D,IAAK,GAJDiB,GADArtI,KAEAstI,GAAgB,EAChBC,EAAgBxyI,EAAKs3D,YACrBroD,EAAQujI,EAAcvjI,MACjB/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIuzI,GAAsBD,EAAc56E,aAAax4D,OAAOC,SAASH,EAAEI,WAAY,IACnF,IAAImzI,EAAqB,CACrB,GAAIl7E,GAAuB5yC,KAAKmsH,gBAAgBp/H,gBAAgBwH,OAAOu5H,EACvE,IAAIl7E,EAAsB,CACtB,GAAIA,EAAqBvvD,IAAI,QAAS,CAClCsqI,IACA,IAAIt0H,GAAmBu5C,EAAqBpvD,IAAI,QAC5CjF,EAAcq0D,EAAqBgjC,KAAK,OAC5C,IAAIv8E,YAA4B/X,OAAO,CAEnC,IAAK,GADDysI,GAAY10H,EACP7e,EAAI,EAAGA,EAAIuzI,EAAU3zI,OAAQI,IAClCmzI,EAAKhxI,KAAKoxI,EAAUtzI,OAAOC,SAASF,EAAEG,WAAY,KAEtDizI,IAAgB,MAEXrvI,aAAuBmN,KAC5BiiI,EAAKhxI,KAAK4B,GAMlB,GAHIovI,GAAQA,EAAKvzI,OAAS,GACtB4lB,KAAKunD,aAAa5qE,KAAKgxI,GAEvB/6E,EAAqBvvD,IAAI,MAAO,CAChC,GAAIkI,GAAYqnD,EAAqB/lD,OAAO,KACxCtB,aAAqBG,KACrBsU,KAAK4rH,iBAAiB9pI,IAAIvH,EAAGgR,GAGrC,GAAIyiI,GAA4BhuH,KAAKosH,QAAQW,MAAMe,GAC/CG,EAA6BjuH,KAAKksH,qBAAqBn/H,gBACvDwH,OAAOy5H,EACPJ,IACAK,EAA2BpkI,OAAO,OAAQ8jI,GAE9CM,EAA2BpkI,OAAO,IAAK6iI,EAAQ7xE,MAC/C76C,KAAKjT,gBAAgB2H,UAAU5S,IAAIksI,EAA2BC,GAC9D3tI,EAAM3D,KAAKqxI,IAGnBJ,GAAgB,EAChBD,KAEArtI,EAAMlG,OAAS,GACfsyI,EAAQrwI,gBAAgBwN,OAAO,SAAUvJ,IAGjDgrI,EAAgBj2H,UAAUg4H,2BAA6B,SAAU73H,EAAM04H,EAASxB,GAC5E,GAGIyB,GAHA7tI,KACA8tI,KACA35C,KAEA45C,EAAU74H,EAAK7I,YAAYnJ,IAAI,KAUnC,IATIgS,EAAK7I,YAAYtJ,IAAI,QACrBgrI,EAAU74H,EAAK7I,YAAYnJ,IAAI,OAE/BkpI,EAAQrwI,gBAAgBgH,IAAI,YAC5B/C,EAAQosI,EAAQrwI,gBAAgBmH,IAAI,WAEpC0qI,EAAQ7xI,gBAAgBgH,IAAI,YAC5BoxF,EAAYy5C,EAAQ7xI,gBAAgBmH,IAAI,YAEvCwc,KAAKsoD,iBAAkB,CACxB6lE,EAAanuH,KAAKksH,qBAAqB12H,KACvCwK,KAAKisH,YAAckC,EAAW7jI,KAC9B,KAAK,GAAItE,GAAI,EAAGA,EAAIga,KAAKisH,YAAajmI,IAClCooI,EAAWzxI,KAAKwxI,EAAW76E,QAAQttD,GAAGwD,MAG9C,IAAK,GAAIjP,GAAI,EAAGA,EAAIib,EAAKlL,MAAO/P,IAAK,CACjC,GAAImb,GAAQF,EAAK89C,QAAQ/4D,GACrB+zI,MAAY,GACZC,KACAC,EAAa94H,EAAM/I,YAAYnJ,IAAI,OACvC,KAAwC,IAApC4qI,EAAW7sI,QAAQmU,EAAMlM,OAAgBwW,KAAKsoD,kBAY9C,GAXKtoD,KAAKsoD,kBAONgmE,EAAY54H,EACZ64H,EAAkBC,IAPlBF,EAAYH,EAAW76E,QAAQ86E,EAAW7sI,QAAQmU,EAAMlM,QAC1CmD,YAAYnJ,IAAI,UAC1B+qI,EAAkBD,EAAU3hI,YAAYnJ,IAAI,SAOpDkS,EAAM4yD,kBAAmB,EACpB5yD,YAAiB6hE,KAAqB+2D,YAAqB/2D,OAAwB7hE,YACpF6hE,KACA,OAAmB9zE,KAAf+qI,GAA4BA,EAAWp0I,OAAS,EAChD,IAAK,GAAII,GAAI,EAAGA,EAAIg0I,EAAWp0I,OAAQI,IAAK,CACxC,GAAI27E,GAAYzgE,EAAM86C,OAAOh2D,EACzB27E,GAAU96E,OAAS6yI,IACnBI,EAAU9zH,MAAQkyH,EAClBpsI,EAAQ0f,KAAKyuH,qBAAqBH,EAAW54H,EAAO++E,EAAW85C,EAAiBC,EAAY9B,EAAQ7xE,KAAMv6D,EAAO9F,EAAGD,EAAG8zI,EAASl4D,QAKxI71E,GAAQ0f,KAAKyuH,qBAAqBH,EAAW54H,EAAO++E,EAAW85C,EAAiBC,EAAY9B,EAAQ7xE,KAAMv6D,EAAO,EAAG/F,EAAG8zI,OAK/H/tI,GAAQ0f,KAAK0uH,kBAAkBn0I,EAAGib,EAAKzI,gBAAiB2I,EAAOF,EAAMk3H,EAAQ7xE,KAAMv6D,EAAOm0F,GAG9Fn0F,EAAMlG,OAAS,GACfsyI,EAAQrwI,gBAAgBwN,OAAO,SAAUvJ,IAGjDgrI,EAAgBj2H,UAAUo5H,qBAAuB,SAAUE,EAAkBj5H,EAAO++E,EAAWm6C,EAAUC,EAASpjI,EAAKnL,EAAOpE,EAAO6pI,EAAYsI,EAAS54H,GACtJ,GAAIC,EAAM/I,YAAYtJ,IAAI,SAAWsrI,EAAiBhiI,YAAYtJ,IAAI,SAClE,IAA2E,IAAvEoxF,EAAUlzF,QAAQstI,EAAQp0I,OAAOC,SAASwB,EAAMvB,WAAY,MAAc,CAC1E,GAAIm0I,GAAgBp5H,EAAM3I,gBAAgBwH,OAAOs6H,EAAQp0I,OAAOC,SAASwB,EAAMvB,WAAY,MACvFiI,EAAaod,KAAKosH,QAAQ2C,gBAAgBD,GAAgB9uH,KAAKsoD,iBACnE1lE,GAAWiH,OAAO,IAAK4B,EACnBF,GAAYyU,KAAKjT,gBAAgBkzC,mBACrCjgC,MAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,GAC9CtC,EAAM3D,KAAK4O,GACX3I,EAAWiH,OAAO,SAAU8kI,EAAiB9zE,MAC7C+zE,EAASjyI,KAAK4O,GACd3I,EAAWgR,UAAW,EACtB+6H,EAAiBhiI,YAAYiH,UAAW,EACnCoM,KAAKsoD,oBACDqmE,YAA4B/9E,KAAmB+9E,YAA4BnkE,KAAkBmkE,YAA4B5+E,MAAqBntD,EAAWS,IAAI,aACvJT,GAAW8Q,KAAKkgE,GAE3B5zD,KAAK+xD,kBAAkB48D,EAAkBj5H,EAAOo5H,EAAelsI,EAAYyrI,EAAS54H,SAI3F,IAAIC,EAAM/I,YAAYtJ,IAAI,UAAYsrI,EAAiBhiI,YAAYtJ,IAAI,SAAW2c,KAAKsoD,iBAAkB,CACtGyK,EAAkB/yD,KAAKosH,QAAQ2C,gBAAgBJ,EAAiBhiI,aAAcqT,KAAKsoD,iBACvFtoD,MAAKgvH,sBAAsBL,EAAkBj5H,EAAOq9D,EAAiB72E,EAAO6pI,EAAYt6H,EAAKojI,EAASvuI,EAAO+tI,EAASM,EAAiBhiI,iBAEtI,KAAM+I,EAAM/I,YAAYtJ,IAAI,SAAWsrI,EAAiBhiI,YAAYtJ,IAAI,QAAU,CACnF,GAAI4rI,GAAYjvH,KAAKosH,QAAQ2C,gBAAgBr5H,EAAM/I,YACnDqT,MAAKkvH,uBAAuBD,EAAWxjI,EAAKkjI,EAAiB9zE,KAC7D,IAAItvD,GAAYyU,KAAKjT,gBAAgBkzC,mBACrCjgC,MAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAW0jI,GAC9CL,EAASjyI,KAAK4O,GACdjL,EAAM3D,KAAK4O,GACXojI,EAAiBhiI,YAAYiH,UAAW,EACxCoM,KAAK+xD,kBAAkB48D,EAAkBj5H,EAAOA,EAAM/I,YAAasiI,EAAWZ,EAAS54H,OAEtF,KAAKC,EAAM/I,YAAYtJ,IAAI,UAAYsrI,EAAiBhiI,YAAYtJ,IAAI,QAAS,CAClF,GAAI0vE,GAAkB/yD,KAAKosH,QAAQ2C,gBAAgBJ,EAAiBhiI,aAChEwiI,EAAgBnvH,KAAKosH,QAAQ2C,gBAAgBr5H,EAAM/I,aAAcqT,KAAKsoD,iBAC1EtoD,MAAKovH,uBAAuBD,GAAgB,SAAU,KAAM,IAAK,OACjEA,EAActlI,OAAO,IAAK4B,GAC1BuU,KAAKgvH,sBAAsBL,EAAkBj5H,EAAOq9D,EAAiB72E,EAAO6pI,EAAYt6H,EAAKojI,EAASvuI,EAAO+tI,EAASc,GAE1H,MAAO7uI,IAEXgrI,EAAgBj2H,UAAU25H,sBAAwB,SAAUL,EAAkBj5H,EAAOq9D,EAAiB72E,EAAO6pI,EAAYt6H,EAAKojI,EAASvuI,EAAO+tI,EAASgB,GACnJ,GAAIC,GAAoBtvH,KAAKjT,gBAAgBkzC,oBACzCsvF,EAAevvH,KAAKwvH,0BAA0Bz8D,EAAiB47D,EAAiBhiI,YACpF4iI,GAAansI,MAAQksI,EAAkB30I,WACvCqlB,KAAKjT,gBAAgB2H,UAAU5S,IAAIwtI,EAAmBC,EACtD,IAAIE,GAAWzvH,KAAKksH,qBAAqB12H,KAAKmvH,aAAa4K,EAAcD,EACzEX,GAAiBhiI,YAAY9C,OAAO,SAAUylI,GAC9CG,EAAS9iI,YAAYiH,UAAW,EAChCoM,KAAKkvH,uBAAuBn8D,EAAiBtnE,EAAK6jI,GAClDtvH,KAAKksH,qBAAqB12H,KAAK7I,YAAYiH,UAAW,CACtD,IAAIk7H,EAEAA,OADYrrI,KAAZorI,GAAyBA,EAAQz0I,OAAS,EAC1Bsb,EAAM3I,gBAAgBwH,OAAOs6H,EAAQp0I,OAAOC,SAASwB,EAAMvB,WAAY,MAGvE00I,CAEpB,IAAIzsI,GAAaod,KAAKosH,QAAQ2C,gBAAgBD,GAAgB9uH,KAAKsoD,mBAC9DqmE,YAA4B/9E,KAAmB+9E,YAA4BnkE,KAAkBmkE,YAA4B5+E,MAAqBntD,EAAWS,IAAI,aACvJT,GAAW8Q,KAAKkgE,EAE3B,IAAIroE,GAAYyU,KAAKjT,gBAAgBkzC,mBACrCjgC,MAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,GAC9CA,EAAWiH,OAAO,IAAK4B,GACvBnL,EAAM3D,KAAK4O,GACX3I,EAAWiH,OAAO,SAAU4lI,EAAS50E,KACrC,IAAI60E,KACJA,GAAY/yI,KAAKgyI,EAAiB9zE,MAClC60E,EAAY/yI,KAAK4O,GACjB3I,EAAWgR,UAAW,EACtB+6H,EAAiBhiI,YAAYiH,UAAW,EACxC27H,EAAa1lI,OAAO,OAAQ6lI,GAC5BD,EAAS1mE,MAAQ2mE,EACjB1vH,KAAK+rH,sBAAsBjqI,IAAIikI,EAAYuJ,GAC3CtvH,KAAKksH,qBAAqB12H,KAAKgvH,cAAc1iI,IAAIikI,EAAY0J,GACxDzvH,KAAKsoD,kBACNtoD,KAAK+xD,kBAAkB09D,EAAU/5H,EAAOo5H,EAAelsI,EAAYyrI,GAEvEkB,EAAa37H,UAAW,GAE5B03H,EAAgBj2H,UAAU+5H,uBAAyB,SAAUxsI,EAAYuuB,GAMrE,MALAA,GAAK9kB,QAAQ,SAAUnL,GACf0B,EAAWS,IAAInC,UACR0B,GAAW8Q,KAAKxS,KAGxB0B,GAEX0oI,EAAgBj2H,UAAU65H,uBAAyB,SAAUtsI,EAAY+sI,EAASC,IAC9EhtI,EAAaod,KAAKovH,uBAAuBxsI,GAAa,SAAU,KAAM,IAAK,QAChEiH,OAAO,IAAK8lI,GACvB/sI,EAAWiH,OAAO,SAAU+lI,GAC5BhtI,EAAWgR,UAAW,GAE1B03H,EAAgBj2H,UAAUm6H,0BAA4B,SAAUz8D,EAAiB88D,GAC7E,GAAIN,GAAe,GAAIpsI,IAAe6c,KAAKjT,gBAQ3C,QAPC,SAAU,KAAM,IAAK,IAAK,KAAM,KAAM,MAAO,KAAKV,QAAQ,SAAUnL,GAC7D6xE,EAAgB1vE,IAAInC,KACpBquI,EAAa1lI,OAAO3I,EAAK6xE,EAAgBvvE,IAAItC,UACtC6xE,GAAgBr/D,KAAKxS,SACrB2uI,GAAen8H,KAAKxS,MAG5BquI,GAEXjE,EAAgBj2H,UAAUy6H,cAAgB,SAAUvjI,EAAMmJ,GACtD,GAAIi2D,GAAep/D,EAAKI,YAAYnJ,IAAI,KACpCmoE,IAAgBA,EAAatoE,IAAI,MACjCkJ,EAAKunE,WAAanI,EAAanoE,IAAI,MAAMpF,OAAO,GAGhDmO,EAAKunE,WAAcp+D,YAAiBw6C,IAA2B,IAAM,KAG7Eo7E,EAAgBj2H,UAAU08D,kBAAoB,SAAU48D,EAAkBj5H,EAAOo5H,EAAelsI,EAAYyrI,EAAS54H,GACjH,GACIxJ,GADA8jI,EAAgBpB,EAAiB36E,WAAa,CAElD,IAAI26E,YAA4Br+E,KACxB/jD,EAAOoiI,EAAiBn+E,OAAOu/E,IAC9B1nE,iBAAkB,EACvBroD,KAAK8vH,cAAcvjI,EAAMoiI,GACrBj5H,YAAiBw6C,KACjB3jD,EAAKI,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,QAC3CyI,EAAYF,EAAc+iI,IAG1BviI,EAAKulE,aAAa68D,EAAiBjiI,QAAU,MAAQ,OAEzDiiI,EAAiB96D,gBAAgBtnE,EAAMN,OAEtC,IAAI0iI,YAA4Bz+E,IAAyB,CACtD3jD,EAAOoiI,EAAiBn+E,OAAOu/E,EACnC/vH,MAAK8vH,cAAcvjI,EAAMoiI,GACrBpiI,EAAKI,YAAYtJ,IAAI,MACrBkJ,EAAKulE,aAAavlE,EAAKI,YAAYnJ,IAAI,MAAMgG,MAG7C+C,EAAKulE,aAAa,OAEtBvlE,EAAK87D,iBAAkB,EACvBsmE,EAAiBtmE,iBAAkB,EACnCsmE,EAAiB96D,gBAAgBtnE,OAEhC,IAAIoiI,YAA4B79E,IAAc,CAC/C,GAAIvkD,GAAOoiI,EAAiBn+E,OAAOu/E,EAInC,QAHsB,KAAXt6H,IACPlJ,EAAKq+D,cAAgBn1D,EAAOm1D,eAE5Br+D,IAASoiI,EAAiBxhE,gBAAgB5gE,EAAKI,aAAc,CAC7DJ,EAAK87D,iBAAkB,CACvB,IAAI77D,GAAWmiI,EAAiB58D,kBAAkBxlE,EAClDoiI,GAAiB3+D,eAAezjE,EAAKI,YAAaH,EAAU,KAC5DD,EAAKI,YAAYiH,UAAW,OAG/B,IAAI+6H,YAA4B/9E,KAAmB+9E,YAA4BnkE,KAAkBmkE,YAClGp3D,IAAmB,CACnB,GAAIh/D,GAAmBg0D,GAAoBC,MAAM5pE,EAAYod,KAAKjT,gBAClE,QAAsB,KAAX0I,GAAqC,OAAXA,GAAmBk5H,YAA4Bp3D,IAChFo3D,EAAiB58D,kBAAkBt8D,GAAQ,OAE1C,CACD8C,EAAiBk0D,eAAc,GAC/Bl0D,EAAiB8vD,iBAAkB,CACnC,IAAI+J,OAAU,EAEVA,OADkB,KAAX38D,GAAqC,OAAXA,EACvBuK,KAAKq2D,YAAY5gE,EAAO9I,YAAa0hI,GAGrCruH,KAAKq2D,YAAYzzE,EAAYyrI,GAE3C91H,EAAiBw3D,SAAWqC,EACxBu8D,YAA4Bp3D,IAC5Bo3D,EAAiB58D,kBAAkBx5D,GAAkB,GAGrDo2H,EAAiB78D,cAAa,EAAOv5D,MAKrD+yH,EAAgBj2H,UAAUghE,YAAc,SAAU9pE,EAAMyjI,GACpD,GAEI59D,GAFAt8D,EAAa,GACbH,EAAW,CAEf,IAAIpJ,IAASA,EAAKlJ,IAAI,OAASkJ,EAAKlJ,IAAI,OACpC,GAAIkJ,EAAKlJ,IAAI,MAET,IAAK,GADDy1B,GAAavsB,EAAK/I,IAAI,MAAMwS,MAAM,KAC7Bzb,EAAI,EAAGA,EAAIu+B,EAAW1+B,OAAQG,IAAK,CACxC,GAAIkL,GAAQqzB,EAAWr+B,OAAOC,SAASH,EAAEI,WAAY,KAAKqb,MAAM,IAChE,KAA8E,IAA1E8iB,EAAWr+B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,eACtDuU,EAAarQ,EAAM,OAElB,KAA6E,IAAzEqzB,EAAWr+B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,gBAA2F,IAAnEu3B,EAAWr+B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,QAAgB,CAGzJ,IAAK,GADDyU,GADSvQ,EAAM,GACAuQ,MAAM,KAChBxb,EAAI,EAAGA,EAAIwb,EAAM5b,OAAQI,IACmB,KAA7Cwb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,MAAgBqb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAKwgB,SAAS,QACtGrF,GAAcE,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAO,IAGjE,MAAsB,MAAfmb,GAAsBA,EAAWqF,SAAS,MAC7CrF,EAAaA,EAAWvV,UAAU,EAAGuV,EAAW1b,OAAS,IAE5B,IAA7B0b,EAAWvU,QAAQ,OACnBuU,EAAaA,EAAWE,MAAM,KAAK,SAK9C,CACD,GAAIxc,GAAQ+S,EAAK/I,IAAI,KACrB,IAAIhK,GAAmB,KAAVA,IAAyC,IAAzBA,EAAM+H,QAAQ,MAAc,CAErD,IAAK,GADDwU,GAAiBvc,EAAMwc,MAAM,KACxBzb,EAAI,EAAGA,EAAIwb,EAAe3b,OAAQG,IACvC,IAAyE,IAArEwb,EAAetb,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,MAAc,CAExE,IADAuU,EAAaC,EAAexb,EAAI,GACV,KAAfub,GAAqBA,EAAW1b,OAAS,GAAuB,MAAlB0b,EAAW,IAC5DA,EAAaA,EAAWvV,UAAU,EAEtCoV,GAAWlb,OAAO8J,WAAWwR,EAAexb,EAAI,IAGvC,IAAbob,IACAA,EAAW,IAK3BG,EAAaA,EAAWG,MACxB,IACIg6H,GADAr+F,EAAYl/B,eAAa4D,OAE7B,QAA6B,KAAlB05H,GAAiCA,EAAe3sI,IAAI,QAAS,CACpE,GAAIT,GAAaotI,EAAexsI,IAAI,QAAQA,IAAIsS,OACtB,KAAflT,IACPqtI,EAAertI,EAAWY,IAAI,YAAYgG,KAC1CooC,EAAY5xB,KAAKzJ,cAAc05H,IAGvC,OAAQn6H,GACJ,IAAK,OACDs8D,EAAU,GAAI17D,IAAgBC,gBAAcC,UAAWjB,EAAUi8B,EACjE,MACJ,KAAK,UACL,IAAK,OACDwgC,EAAU,GAAI17D,IAAgBC,gBAAcO,QAASvB,EAAUi8B,EAC/D,MACJ,KAAK,OACDwgC,EAAU,GAAI17D,IAAgBC,gBAAcQ,OAAQxB,EAAUi8B,EAC9D,MACJ,KAAK,OACL,IAAK,OACDwgC,EAAU,GAAI17D,IAAgBC,gBAAcS,WAAYzB,EAAUi8B,EAClE,MACJ,KAAK,OACDwgC,EAAU,GAAI17D,IAAgBC,gBAAcU,aAAc1B,EAAUi8B,EACpE,MACJ,SACIwgC,EAAU,GAAI17D,IAAgBC,gBAAcC,UAAWjB,EAAUi8B,GAGzE,MAAOwgC,IAEXk5D,EAAgBj2H,UAAUkB,cAAgB,SAAUq7B,GAChD,GAAIzrC,GAAQuM,eAAa4D,OAOzB,OANIs7B,GAAUp7B,SAAS,QACnBrQ,EAAQuM,eAAaC,KAEhBi/B,EAAUp7B,SAAS,YACxBrQ,EAAQuM,eAAaE,QAElBzM,GAEXmlI,EAAgBj2H,UAAUi4H,iBAAmB,SAAUjyI,EAAM60I,EAASxD,EAAS53H,GAC3E,GAAIU,GAAOwK,KAAKksH,qBAAqB12H,KACjClV,IACAosI,IAAWA,EAAQrwI,iBAAmBqwI,EAAQrwI,gBAAgBgH,IAAI,YAClE/C,EAAQosI,EAAQrwI,gBAAgBmH,IAAI,UAExC,IAAIixF,MACA07C,IACJ,IAAInwH,KAAKksH,qBAAqB12H,KAAK7I,YAAYtJ,IAAI,UAAW,CAC1D,GAAI8qI,GAAanuH,KAAKksH,qBAAqB12H,IAC3CwK,MAAKisH,YAAckC,EAAW7jI,KAC9B,KAAK,GAAItE,GAAI,EAAGA,EAAIga,KAAKisH,YAAajmI,IAAK,CACvC,GAAIu0D,GAAS4zE,EAAW76E,QAAQttD,GAAGwD,IACnCwW,MAAK4mH,YAAYjqI,KAAK49D,IAG1Bl/D,EAAKgB,gBAAgBgH,IAAI,YACzB8sI,EAAc90I,EAAKgB,gBAAgBmH,IAAI,UAG3C,KAAK,GADD8G,GAAQ4lI,EAAQ5lI,MACX/P,EAAI,EAAGA,EAAI+P,IAAS/P,EAAG,CAC5B,GAAI61I,GAAWF,EAAQ58E,QAAQ/4D,EAC/B,IAAI61I,EAASzjI,YAAYtJ,IAAI,QAEzB,IADAoxF,EAAY27C,EAASzjI,YAAYnJ,IAAI,SACvBpJ,OAAS,GACnB,IAAK,GAAII,GAAI,EAAGA,EAAIi6F,EAAUr6F,OAAQI,IAElC,GADgB41I,EAAS5/E,OAAOh2D,GAClBa,OAASA,EAAM,CACzBiF,EAAQ0f,KAAK0uH,kBAAkBn0I,EAAGua,EAAgBs7H,EAAU56H,EAAMk3H,EAAQ7xE,KAAMv6D,EAAO6vI,EACvF,YAIkB,KAArB17C,EAAUr6F,QACXg2I,EAAS/0I,OAASA,IAClBiF,EAAQ0f,KAAK0uH,kBAAkBn0I,EAAGua,EAAgBs7H,EAAU56H,EAAMk3H,EAAQ7xE,KAAMv6D,EAAO6vI,QAK3FC,GAAS/0I,OAASA,IAClBiF,EAAQ0f,KAAK0uH,kBAAkBn0I,EAAGua,EAAgBs7H,EAAU56H,EAAMk3H,EAAQ7xE,KAAMv6D,EAAO6vI,IAInG,GAAID,EAAQvjI,YAAYtJ,IAAI,MAAO,CAC/B,GAAIgtI,GAAKH,EAAQvjI,YAAYnJ,IAAI,MAC7B8sI,EAAetwH,KAAKosH,QAAQ2C,gBAAgBsB,GAC5Cz6H,MAAO,EAIX,IAHI06H,EAAajtI,IAAI,UACjBuS,EAAO06H,EAAa9sI,IAAI,SAExBwc,KAAKksH,qBAAqB12H,KAAK7I,YAAYtJ,IAAI,MAAO,CACtD,GAAIktI,GAAYvwH,KAAKksH,qBAAqB12H,KAAK7I,YAAYnJ,IAAI,KAC/D,IAAI+sI,EAAUltI,IAAI,QAAS,CACvB,GAAImtI,GAAgBD,EAAU/sI,IAAI,OAC9BoS,IACAA,EAAKvJ,QAAQ,SAAUnL,EAAK1H,GACxBg3I,EAAc1uI,IAAIZ,EAAK1H,KAG/Bg3I,EAAc58H,UAAW,OAI7BoM,MAAKksH,qBAAqB12H,KAAK7I,YAAY9C,OAAO,KAAMymI,GAG5DhwI,EAAMlG,OAAS,GACfsyI,EAAQrwI,gBAAgBwN,OAAO,SAAUvJ,IAGjDgrI,EAAgBj2H,UAAUq5H,kBAAoB,SAAUxyI,EAAO4Y,EAAgBs7H,EAAU56H,EAAM/J,EAAKnL,EAAOm0F,GACvG,GAAI7xF,GAAa,GAAIO,GACjBitI,GAASzjI,YAAYtJ,IAAI,QACzB+sI,EAASzjI,YAAYN,QAAQ,SAAUnL,EAAK1H,GAC5B,SAAR0H,GACA0B,EAAWiH,OAAO3I,EAAK1H,KAK/BoJ,EAAaod,KAAKosH,QAAQ2C,gBAAgBqB,EAASzjI,YAEvD,IAAI8jI,GAAezwH,KAAKjT,gBAAgBkzC,mBACxCr9C,GAAWQ,MAAQqtI,EAAa91I,UAChC,IAAI+a,GAAQF,EAAKmvH,aAAa/hI,EAAY6I,EAE1C,IADAuU,KAAKjT,gBAAgB2H,UAAU5S,IAAI2uI,EAAc/6H,EAAM/I,aACnDyjI,EAASzjI,YAAYtJ,IAAI,QAAS,CAGlC,IAAK,GAFDwrI,GAAUuB,EAASzjI,YAAYnJ,IAAI,QACnC8tD,KACK92D,EAAI,EAAGA,EAAIq0I,EAAQz0I,OAAQI,IAChC,IAAwE,IAAnEi6F,EAAUlzF,QAAQstI,EAAQp0I,OAAOC,SAASF,EAAEG,WAAY,MAAe,CACxE,GAAIm0I,GAAgBsB,EAASrjI,gBAAgBwH,OAAOs6H,EAAQp0I,OAAOC,SAASF,EAAEG,WAAY,MACtFsrE,EAAOjmD,KAAKosH,QAAQ2C,gBAAgBD,EACxC7oE,GAAKp8D,OAAO,IAAK4B,GACjBw6D,EAAKp8D,OAAO,SAAU4mI,GACtBxqE,EAAKryD,UAAW,CAChB,IAAIrI,GAAYyU,KAAKjT,gBAAgBkzC,mBACrCjgC,MAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAW06D,GAC9C3lE,EAAM3D,KAAK4O,GACX+lD,EAAK30D,KAAK4O,GAGlB3I,EAAWiH,OAAO,OAAQynD,GAC1B57C,EAAMqzD,MAAQzX,MAGd57C,GAAM/I,YAAY9C,OAAO,IAAK4B,GAC9BnL,EAAM3D,KAAK8zI,EAEf/6H,GAAM/I,YAAYiH,UAAW,CAI7B,KAHA,GAAIrZ,GAAI,EACJm1D,EAAYh6C,EAAMlM,KAClBknI,GAAW,GACiC,IAAzC1wH,KAAK4mH,YAAYrlI,QAAQmuD,IAC5BA,EAAYh6C,EAAMlM,KAAOjP,EACzBm2I,GAAW,IACTn2I,CAiBN,OAfIm2I,KACAh7H,EAAM/I,YAAY9C,OAAO,IAAK6lD,GAC9Bh6C,EAAMyc,MAAQu9B,GAElBh6C,EAAM/I,YAAYiH,UAAW,EACzBoM,KAAKisH,YAAc,GACnBjsH,KAAKksH,qBAAqB12H,KAAKgvH,cAAc1iI,IAAIke,KAAKisH,YAAav2H,GACnEA,EAAM21D,iBAAmBrrD,KAAKisH,YAC9BjsH,KAAKisH,gBAGLjsH,KAAKksH,qBAAqB12H,KAAKgvH,cAAc1iI,IAAI5F,EAAOwZ,GACxDA,EAAM21D,iBAAmBnvE,GAE7B8jB,KAAKksH,qBAAqB12H,KAAKk5C,QAAQ/xD,KAAK8zI,GACrCnwI,GAEXgrI,EAAgBj2H,UAAUs7H,6BAA+B,WACrD,GAAIC,EACA5wH,MAAK+rH,sBAAsBjwI,KAAO,GAClC80I,EAAY5wH,KAAKksH,qBAAqB12H,KAAK7I,YAAYnJ,IAAI,UAC3Dwc,KAAK+rH,sBAAsB1/H,QAAQ,SAAU7S,EAAO0H,GAChD0vI,EAAUn2I,OAAOC,SAASwG,EAAIvG,WAAY,KAAOnB,KAIrDo3I,EAAY5wH,KAAKksH,qBAAqB12H,KAAKk5C,QAE3C1uC,KAAKksH,qBAAqB12H,KAAK7I,YAAYnJ,IAAI,oBAC/Cwc,KAAKksH,qBAAqB12H,KAAK7I,YAAY7K,IAAI,mBAAmB,GAEtEke,KAAKksH,qBAAqB12H,KAAK7I,YAAY7K,IAAI,SAAU8uI,GACzD5wH,KAAKksH,qBAAqB12H,KAAKk5C,QAAUkiF,EACzC5wH,KAAKksH,qBAAqB12H,KAAK7I,YAAYiH,UAAW,GAE1D03H,EAAgBj2H,UAAUw7H,cAAgB,SAAUC,EAAcvE,GAE9D,GADAvsH,KAAK6rH,iBAAmBU,EACpBvsH,KAAK6rH,kBAAoB7rH,KAAKksH,qBAAqBt4C,SAASC,mBAAmBxwF,IAAI,gBAAiB,CACpG,GAAI0tI,GAA0B/wH,KAAKksH,qBAAqBt4C,SAASC,mBAAmBrwF,IAAI,gBACpFwtI,EAAsBF,EAAattI,IAAI,eAC3C,IAAIutI,EAAwB1tI,IAAI,QAAS,CACrC,GAAI4tI,GAAOF,EAAwBvtI,IAAI,QACnC0tI,EAAQF,EAAoBxtI,IAAI,OACpC,IAAIytI,EAAK72I,OAAS,EACd,IAASG,EAAI,EAAGA,EAAI22I,EAAM92I,OAAQG,IAC9B02I,EAAKt0I,KAAKu0I,EAAMz2I,OAAOC,SAASH,EAAEI,WAAY,MAK1D,GADAo2I,EAAwBn9H,UAAW,EAC/Bm9H,EAAwB1tI,IAAI,MAAQ2tI,EAAoB3tI,IAAI,KAAM,CAClE,GAAI8tI,GAAqBJ,EAAwBvtI,IAAI,KACjD4tI,EAAsBJ,EAAoBxtI,IAAI,IAClD,IAAI2tI,GAAsBC,EAAqB,CAC3C,GAAID,EAAmB9tI,IAAI,UAAY+tI,EAAoB/tI,IAAI,SAAU,CACrE,GAAIguI,GAAQF,EAAmB3tI,IAAI,SAC/B8tI,EAAgBF,EAAoB5tI,IAAI,QAC5C,IAAI6tI,EAAMj3I,OAAS,GAAKk3I,EAAcl3I,OAAS,EAC3C,IAASG,EAAI,EAAGA,EAAI+2I,EAAcl3I,OAAQG,IACtC82I,EAAM10I,KAAK20I,EAAc72I,OAAOC,SAASH,EAAEI,WAAY,UAI1Dy2I,GAAoB/tI,IAAI,UAC7B8tI,EAAmBrvI,IAAI,QAASsvI,EAAoB5tI,IAAI,SAE5D,IAAI2tI,EAAmB9tI,IAAI,aAAe+tI,EAAoB/tI,IAAI,YAAa,CAC3E,GAAIkuI,GAASJ,EAAmB3tI,IAAI,YAChCguI,EAAmBJ,EAAoB5tI,IAAI,WAC/C,IAAI+tI,EAAOn3I,OAAS,GAAKo3I,EAAiBp3I,OAAS,EAC/C,IAASG,EAAI,EAAGA,EAAIi3I,EAAiBp3I,OAAQG,IACzCg3I,EAAO50I,KAAK60I,EAAiB/2I,OAAOC,SAASH,EAAEI,WAAY,UAI9Dy2I,GAAoB/tI,IAAI,cAC7B8tI,EAAmBrvI,IAAI,WAAYsvI,EAAoB5tI,IAAI,aAC3D2tI,EAAmBv9H,UAAW,EAElC,IAAIu9H,EAAmB9tI,IAAI,OAAS+tI,EAAoB/tI,IAAI,MAAO,CAC/D,GAAIouI,GAAKN,EAAmB3tI,IAAI,MAC5BkuI,EAAaN,EAAoB5tI,IAAI,KACzC,IAAIiuI,EAAGr3I,OAAS,GAAKs3I,EAAWt3I,OAAS,EACrC,IAASG,EAAI,EAAGA,EAAIm3I,EAAWt3I,OAAQG,IACnCk3I,EAAG90I,KAAK+0I,EAAWj3I,OAAOC,SAASH,EAAEI,WAAY,UAIpDy2I,GAAoB/tI,IAAI,OAC7B8tI,EAAmBrvI,IAAI,KAAMsvI,EAAoB5tI,IAAI,MAEzD,IAAI2tI,EAAmB9tI,IAAI,OAAS+tI,EAAoB/tI,IAAI,MAAO,CAC/D,GAAIa,GAAWitI,EAAmB3tI,IAAI,MAClCmuI,EAAmBP,EAAoB5tI,IAAI,KAC/C,IAAIU,EAAS9J,OAAS,GAAKu3I,EAAiBv3I,OAAS,EAAG,CACpD,GAAIw3I,GAAeD,EAAiB,GAChCE,EAAsB3tI,EAAS,EAKnC,IAJI0tI,YAAwBlmI,KAAiBmmI,YAA+BnmI,MACxEkmI,EAAe5xH,KAAKjT,gBAAgBwH,OAAOq9H,GAC3CC,EAAsB7xH,KAAKjT,gBAAgBwH,OAAOs9H,IAElDD,EAAavuI,IAAI,SAAWwuI,EAAoBxuI,IAAI,QAAS,CAC7D,GAAIyuI,GAAaF,EAAapuI,IAAI,QAC9BuuI,EAAoBF,EAAoBruI,IAAI,OAChD,IAAIsuI,EAAW13I,OAAS,GAAK23I,EAAkB33I,OAAS,EACpD,IAASG,EAAI,EAAGA,EAAIu3I,EAAW13I,OAAQG,IACnCw3I,EAAkBp1I,KAAKm1I,EAAWr3I,OAAOC,SAASH,EAAEI,WAAY,MAI5E,IAASJ,EAAI,EAAGA,EAAIo3I,EAAiBv3I,OAAQG,IACzC2J,EAASvH,KAAKg1I,EAAiBl3I,OAAOC,SAASH,EAAEI,WAAY,WAIhEy2I,GAAoB/tI,IAAI,OAC7B8tI,EAAmBrvI,IAAI,KAAMsvI,EAAoB5tI,IAAI,MAEzD,IAAI2tI,EAAmB9tI,IAAI,QAAU+tI,EAAoB/tI,IAAI,OAAQ,CACjE,GAAI2uI,GAAMb,EAAmB3tI,IAAI,OAC7ByuI,EAAcb,EAAoB5tI,IAAI,MAC1C,IAAIwuI,EAAI53I,OAAS,GAAK63I,EAAY73I,OAAS,EACvC,IAASG,EAAI,EAAGA,EAAI03I,EAAY73I,OAAQG,IACpCy3I,EAAIr1I,KAAKs1I,EAAYx3I,OAAOC,SAASH,EAAEI,WAAY,UAItDy2I,GAAoB/tI,IAAI,QAC7B8tI,EAAmBrvI,IAAI,MAAOsvI,EAAoB5tI,IAAI,QAG9D,GAAI2tI,EAAmB9tI,IAAI,WAAa+tI,EAAoB/tI,IAAI,UAAW,CACvE,GAAIxG,GAASs0I,EAAmB3tI,IAAI,UAChC0uI,EAAiBd,EAAoB5tI,IAAI,SAC7C,IAAI3G,EAAOzC,OAAS,GAAK83I,EAAe93I,OAAS,EAC7C,IAAK,GAAIG,GAAI,EAAGA,EAAI23I,EAAe93I,OAAQG,IACvCsC,EAAOF,KAAKu1I,EAAez3I,OAAOC,SAASH,EAAEI,WAAY,UAI5Dy2I,GAAoB/tI,IAAI,WAC7B8tI,EAAmBrvI,IAAI,SAAUsvI,EAAoB5tI,IAAI,eAGxDwtI,GAAoB3tI,IAAI,MAC7B0tI,EAAwBjvI,IAAI,IAAKkvI,EAAoBxtI,IAAI,KAE7DutI,GAAwBn9H,UAAW,EACnCoM,KAAKksH,qBAAqBt4C,SAASC,mBAAmBjgF,UAAW,EACjEoM,KAAKjT,gBAAgB86G,eAAgB,MAEhC7nG,MAAK6rH,mBACV7rH,KAAKksH,qBAAqBt4C,SAASC,mBAAmBhqF,OAAO,eAAgBinI,EAAattI,IAAI,iBAC9Fwc,KAAKksH,qBAAqBt4C,SAASC,mBAAmBjgF,UAAW,EACjEoM,KAAKjT,gBAAgB86G,eAAgB,IAG7CyjB,EAAgBj2H,UAAUq4H,YAAc,SAAUyE,EAAmBC,EAAmBt9H,GACpF,GAGIu9H,GAHAnqH,EAAQlI,KAERsyH,EADMH,EAAkB3uI,IAAI,aACdA,IAAI,UAElB8uI,IACAA,EAAQjmI,QAAQ,SAAUnL,EAAK1H,GAC3B64I,EAAWnqH,EAAMnb,gBAAgBwH,OAAO/a,IAGhD,IAAI+kD,EACA8zF,KACA9zF,EAAW8zF,EAASzvI,WAAWY,IAAI,aAEvC,IAAI+uI,GAIAtsE,EAHAusE,EAAc,GAAItqG,KAClBuqG,EAAkBL,EAAkB5uI,IAAI,YAG5C,IAAIivI,EAAgBpvI,IAAI,cAAe,CACjBovI,EAAgBjvI,IAAI,cACtB6I,QAAQ,SAAUnL,EAAK1H,GACnCg5I,EAAY1wI,IAAIZ,EAAK1H,IAEzB,IAAIqmH,GAAe,GAAI18G,IAAe6c,KAAKjT,gBAC3CylI,GAAYnmI,QAAQ,SAAU7S,EAAO0H,GACjCgnB,EAAMyjH,SAASt/H,QAAQ,SAAUqmI,EAAYC,GACrCn5I,IAAUm5I,GACV9yB,EAAa/9G,IAAIZ,EAAKwxI,OAIlCn0F,EAASz8C,IAAI,aAAc+9G,GAC3BthE,EAAS3qC,UAAW,EACpBisG,EAAajsG,UAAW,MAEnB6+H,GAAgBpvI,IAAI,aACzBkvI,EAAUh0F,EAAS/6C,IAAI,WACLivI,EAAgBjvI,IAAI,WACtB6I,QAAQ,SAAUnL,EAAK1H,GAC/BA,YAAiBkS,MACjBu6D,EAAOnxD,EAAeP,OAAO/a,IACxBoJ,WAAWyJ,QAAQ,SAAUumI,EAAeC,GACvB,OAAlBD,GACA1qH,EAAMyjH,SAASt/H,QAAQ,SAAUqmI,EAAYI,GACzC,GAAIA,IAAaD,GACTN,EAAQlvI,IAAInC,GAAM,CAClB,GAAI6xI,GAAiBR,EAAQ/uI,IAAItC,EACjC6xI,GAAenwI,WAAWd,IAAI8wI,EAAeF,GAC7CK,EAAen/H,UAAW,SAS1D,IAAIoM,KAAK4rH,iBAAiB9vI,KAAO,EAAG,CAChC,GAAIgoE,GAAgBquE,EAAkBv8C,KAAK,SAC3C51E,MAAK4rH,iBAAiBv/H,QAAQ,SAAUd,EAAWrP,GAC/C,GAAIqnE,GAAgBO,EAAcrpE,OAAOC,SAASwB,EAAMvB,WAAY,KAChEq4I,EAAkB9qH,EAAMnb,gBAAgBwH,OAAOgvD,EACnDr7C,GAAMyjH,SAASt/H,QAAQ,SAAU7S,EAAOy5I,GAChC1nI,IAAc0nI,GACdD,EAAgBlxI,IAAI,KAAMtI,SAM9C8xI,EAAgBj2H,UAAU69H,iBAAmB,SAAU5nI,EAAUnP,GAC7D,GAAI+rB,GAAQlI,IACZ,IAAIA,KAAKwrH,WAAWpxI,OAAS,EAAG,CAC5B,GAAIurG,GAAW3lF,KAAKwrH,WAChB2H,EAAcnzH,KAAKksH,qBAAqBuB,UACxCvuI,EAAUoM,EAASmiI,UACnB2F,MAAe,EACnB,IAAIl0I,EAAS,CACT,GAAIm0I,MACAC,GAAoBp3I,MAAO,EAAG8jD,KAAMmzF,EAAa7hF,KAAMpyD,EAAQqmG,cAC/Dj6F,GAASnP,YAAcA,IACvBm3I,GAAoBp3I,MAAO,EAAG8jD,KAAMmzF,EAAa7hF,KAAMq0C,GACvDytC,KAEJ,GAAG,CA+GC,IA9GA,GA6GI92E,GAASt8C,KACNszH,EAAgBp3I,MAAQo3I,EAAgBhiF,KAAKl3D,SA9GtC,WAEV,GADA8E,EAAUo0I,EAAgBhiF,KAAKgiF,EAAgBp3I,QACZ,IAA/BypG,EAASpkG,QAAQrC,QAA2C,KAAjBk0I,IAAyE,IAAzCA,EAAa7xI,QAAQrC,EAAQ2mG,OAAe,CACvH,GAAI0tC,GAAKr0I,EACLs0I,EAAQL,EAAY7vI,IAAIiwI,EAAG1tC,OAC3B8nC,EAAO4F,EAAGh1I,WACdi1I,GAAMnuI,MAAQkuI,EAAGluI,MACjBmuI,EAAM7xE,UAAY4xE,EAAG5xE,SACrB,IAAI8xE,GAAU,KACVC,EAAY,KACZhwE,EAAS,IAEb,IADIiwE,EAAQJ,EAAGjsC,kBAEX,GAAIqsC,EAAMp1I,cACNmlE,EAASiwE,EAAMp1I,YAAYlD,KAC3BihE,EAAOovE,4BAA4Br/H,QAAQ,SAAU7S,EAAO0H,GACpDwiE,EAAO7I,OAAS35D,IAChBwyI,EAAYxrH,EAAMgkH,qBAAqB9vI,QAAQ5C,MAGnDk6I,GAAW,CACPE,EAAet3E,EAAOo3B,qBAAqBigD,EAAOD,EACtDF,GAAMlsC,iBAAmBssC,QAClBJ,GAAM7mI,YAAY+G,KAAKmgI,EAC9Bv3E,EAAO4rC,mBAAmBvrG,KAAKi3I,EAAalsC,OAC5C,IAAI9gB,GAActqB,EAAOvvD,gBAAgBkzC,mBACzCqc,GAAOvvD,gBAAgB2H,UAAU5S,IAAI8kF,EAAagtD,EAAajnI,aAC/D2vD,EAAO4rC,mBAAmBvrG,KAAKiqF,QAIlC+mD,KACLjqE,EAASiqE,EAAKtyI,KACdihE,EAAOovE,4BAA4Br/H,QAAQ,SAAU7S,EAAO0H,GACpDwiE,EAAO7I,OAAS35D,IAChBwyI,EAAYxrH,EAAMgkH,qBAAqB9vI,QAAQ5C,MAGnDk6I,KACAD,EAAU,GAAI35H,IAAe45H,EAAW/F,EAAKvlE,WACrCpgE,KAAO2lI,EAAK3lI,KACpByrI,EAAQh6H,KAAOk0H,EAAKl0H,KACpBg6H,EAAQrrE,SAAWulE,EAAKvlE,SACxBorE,EAAMj1I,YAAck1I,GAG5BN,GAAcK,EACdJ,EAAaz2I,KAAK62I,EAAM3tC,WAEvB,QAA4B,KAAjButC,OAAyD,KAAjBA,IAAyE,IAAzCA,EAAa7xI,QAAQrC,EAAQ2mG,OAAgB,CACjI,GACI8nC,IADA4F,EAAKr0I,GACKX,YACVk1I,EAAU,KACVK,EAAY,KACZC,EAAS,KACTJ,EAAQJ,EAAGjsC,gBACf,IAAIh8F,EAASnP,YAAcA,EAAW,CAC9Bq3I,EAAQL,EAAY7vI,IAAIiwI,EAAG1tC,MAM/B,IALI0tC,EAAG5mI,YAAYtJ,IAAI,MACnBmwI,EAAM7mI,YAAY9C,OAAO,IAAK0pI,EAAG5mI,YAAYnJ,IAAI,MAErDgwI,EAAM7xE,UAAY4xE,EAAG5xE,UACrB6xE,EAAMnuI,MAAQkuI,EAAGluI,MACbsuI,GACA,GAAIA,EAAMpsE,eACNwsE,EAASJ,EAAMp1I,YAAYlD,KAC3BihE,EAAOovE,4BAA4Br/H,QAAQ,SAAU7S,EAAO0H,GACpD6yI,EAAOl5E,OAAS35D,IAChB4yI,EAAY5rH,EAAMgkH,qBAAqB9vI,QAAQ5C,MAGnDs6I,GAAW,CACX,GAAIF,GAAet3E,EAAOo3B,qBAAqBigD,EAAOG,EACtDN,GAAMlsC,iBAAmBssC,QAClBJ,GAAM7mI,YAAY+G,KAAKmgI,EAC9Bv3E,EAAO4rC,mBAAmBvrG,KAAKi3I,EAAalsC,OAC5C,IAAI/d,GAAcrtB,EAAOvvD,gBAAgBkzC,mBACzCqc,GAAOvvD,gBAAgB2H,UAAU5S,IAAI6nF,EAAaiqD,EAAajnI,aAC/D2vD,EAAO4rC,mBAAmBvrG,KAAKgtF,QAIlCgkD,KACLoG,EAASpG,EAAKtyI,KACdihE,EAAOovE,4BAA4Br/H,QAAQ,SAAU7S,EAAO0H,GACpD6yI,EAAOl5E,OAAS35D,IAChB4yI,EAAY5rH,EAAMgkH,qBAAqB9vI,QAAQ5C,MAGnDs6I,KACAL,EAAU,GAAI35H,IAAeg6H,EAAWnG,EAAKvlE,WACrCpgE,KAAO2lI,EAAK3lI,KACpByrI,EAAQh6H,KAAOk0H,EAAKl0H,KACpBg6H,EAAQrrE,SAAWulE,EAAKvlE,SACxBorE,EAAMj1I,YAAck1I,GAG5BN,GAAcK,GAGtBF,EAAgBp3I,OAAS,EACrBgD,EAAQoL,MAAQ,GAChB+oI,EAAM12I,KAAK22I,GACXA,GAAoBp3I,MAAO,EAAG8jD,KAAMmzF,EAAa7hF,KAAMpyD,EAAQqmG,gBAG/D4tC,EAAcG,EAAgBtzF,OAOtC,IAAIqzF,EAAMj5I,OAAS,EAAG,CAElB,IADAk5I,EAAkBD,EAAMr2F,MAChBs2F,EAAgBp3I,QAAUo3I,EAAgBhiF,KAAKl3D,QAAYi5I,EAAMj5I,OAAS,GAC9Ek5I,EAAkBD,EAAMr2F,KAE5Bm2F,GAAcG,EAAgBtzF,YAE7BszF,EAAgBp3I,MAAQo3I,EAAgBhiF,KAAKl3D,QAE1D,GAAImR,OAAY,EAChB,IAAIyU,KAAKkoF,mBAAmB9tG,OAAS,EAAG,CACpC,GAAIwI,GAAa,GAAIO,IAAe6c,KAAKjT,gBACzCnK,GAAWiH,OAAO,QAASmW,KAAKkoF,oBAChC38F,EAAYyU,KAAKjT,gBAAgBkzC,oBACjCjgC,KAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,IAC9CA,EAAa,GAAIO,IAAe6c,KAAKjT,kBAC1BlD,OAAO,QAAS0B,GAC3BA,EAAYyU,KAAKjT,gBAAgBkzC,oBACjCjgC,KAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,GAC9Cod,KAAKksH,qBAAqBt4C,SAASC,mBAAmB/xF,IAAI,QAASyJ,GAEvEyU,KAAKksH,qBAAqBt4C,SAASC,mBAAmBjgF,UAAW,EACjEoM,KAAKksH,qBAAqBt4C,SAASC,mBAAmBusB,WAAY,EAClEpgG,KAAKjT,gBAAgB86G,eAAgB,IAG7CyjB,EAAgBj2H,UAAUq+E,qBAAuB,SAAUigD,EAAOt4I,GAC9D,GAAI24I,GAAe,GAAI7rC,IAAoBwrC,EAAM9tC,MAEjD,OADAmuC,GAAaz1I,YAAcyhB,KAAKkzE,gBAAgB73F,EAAMs4I,EAAMp1I,aACrDy1I,GAEX1I,EAAgBj2H,UAAU69E,gBAAkB,SAAU73F,EAAMsyI,GACxD,GAAI8F,GAAU,GAAI35H,IAAeze,EAAMsyI,EAAKvlE,SAK5C,OAJAqrE,GAAQjrC,UAAYmlC,EAAKnlC,UACzBirC,EAAQzrI,KAAO2lI,EAAK3lI,KACpByrI,EAAQh6H,KAAOk0H,EAAKl0H,KACpBg6H,EAAQrrE,SAAWulE,EAAKvlE,SACjBqrE,GAEXnI,EAAgBj2H,UAAUoiD,aAAe,SAAUnsD,EAAUglB,EAAO92B,EAAOoJ,EAAY1B,EAAKZ,EAAOmL,GAC/F,GAAIjS,YAAiBmN,KAA6B,gBAAVnN,IAAuC,gBAAVA,IAAuC,iBAAVA,GAC9FwmB,KAAKq2C,iBAAiB78D,EAAO82B,EAAOpvB,EAAKZ,EAAOmL,EAAK,UAEpD,IAAInK,MAAMuB,QAAQrJ,GAAQ,CAC3B,GAAI4+C,KACJp4B,MAAK43C,YAAYtsD,EAAU8sC,EAAM5+C,EAAOoJ,GACxCod,KAAKq2C,iBAAiB,KAAM/lC,EAAOpvB,EAAKZ,EAAOmL,EAAK2sC,OAEnD,IAAI5+C,YAAiB2J,IAAgB,CACtC,GAAI00B,GAAW,GAAI10B,IAAe6c,KAAKjT,gBACvCiT,MAAKi0H,2BAA2B3oI,EAAUusB,EAAUr+B,GACpDwmB,KAAKq2C,iBAAiB,KAAM/lC,EAAOpvB,EAAKZ,EAAOmL,EAAKosB,OAE/Cr+B,aAAiBkS,KAAiBsU,KAAKjT,gBAC5CiT,KAAKy3C,aAAansD,EAAUglB,EAAOhlB,EAASyB,gBAAgBwH,OAAO/a,GAAQoJ,EAAY1B,EAAKZ,EAAO9G,GAEpF,OAAVA,OAAmC,KAAVA,GAC9BwmB,KAAKq2C,iBAAiB,OAAQ/lC,EAAOpvB,EAAKZ,EAAOmL,EAAK,OAG9D6/H,EAAgBj2H,UAAUghD,iBAAmB,SAAU78D,EAAO82B,EAAOpvB,EAAKZ,EAAOmL,EAAK2sC,GAClF,GAAIl3C,GAAO1H,EACP82B,EAAMxuB,IAAIZ,EAAK1H,OAEd,IAAI0H,GAAOk3C,EACZ9nB,EAAMxuB,IAAIZ,EAAKk3C,OAEd,IAAIA,IAAS3sC,EACdnL,EAAM3D,KAAKy7C,OAEV,IAAI5+C,EACL8G,EAAM3D,KAAKnD,OAEV,IAAIiS,EAAK,CACV,GAAIu+E,EAQJ,IAPIhqE,KAAK2rH,UAAY3rH,KAAK2rH,SAAS7vI,KAAO,GACtCkkB,KAAK2rH,SAASt/H,QAAQ,SAAU7S,EAAO0H,GAC/BA,IAAQuK,IACRu+E,EAAcxwF,KAItBwwF,EACA1pF,EAAM3D,KAAKqtF,OAEV,CACD,GAAIkqD,GAAY97F,CAChB4xC,GAAchqE,KAAKjT,gBAAgBkzC,oBACnCjgC,KAAKjT,gBAAgB2H,UAAU5S,IAAIkoF,EAAakqD,GAChDA,EAAUtgI,UAAW,EACrBtT,EAAM3D,KAAKqtF,GACXhqE,KAAK2rH,SAAS7pI,IAAI2J,EAAKu+E,MAInCshD,EAAgBj2H,UAAUuiD,YAAc,SAAUtsD,EAAUhL,EAAO9G,EAAOoJ,GACtE,IAAK,GAAIrI,GAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAC9BylB,KAAKy3C,aAAansD,EAAU,KAAM9R,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAMiI,EAAY,KAAMtC,IAGtGgrI,EAAgBj2H,UAAU4+H,2BAA6B,SAAU3oI,EAAUglB,EAAO1tB,GAC9E,GAAIslB,GAAQlI,IACRpd,IAAcA,EAAW9G,KAAO,GAChC8G,EAAWyJ,QAAQ,SAAUnL,EAAK1H,GAC9B0uB,EAAMuvC,aAAansD,EAAUglB,EAAS92B,YAAiBkS,IAAiB9I,EAAWY,IAAItC,GAAO1H,EAAQoJ,EAAY1B,MAI9HoqI,EAAgBj2H,UAAU8+H,iBAAmB,SAAU7oI,GACnD,GAAI8oI,GAAoBp0H,KAAKyrH,cAC7B,IAAIzrH,KAAKunD,aAAantE,OAAS,EAC3B,IAAK,GAAIG,GAAI,EAAGA,EAAIylB,KAAKunD,aAAantE,OAAQG,IAAK,CAC/C,GAAIozI,GAAO3tH,KAAKunD,aAAa9sE,OAAOC,SAASH,EAAEI,WAAY,IAC3D,IAAIgzI,YAAgBrsI,OAAO,CACvB,GAAI/C,GAAcovI,CAClB,IAAIpvI,EAAYnE,OAAS,GAAKmE,EAAY,IAAMA,EAAY,YAAcmN,IAAe,CACrF,GAAID,GAAMH,EAASyB,gBAAgBwH,OAAOhW,EAAY,IAClDrC,EAAQk4I,EAAkB5wI,IAAIiI,EAC9BA,IAAO2oI,EAAkB/wI,IAAIoI,IAAkB,OAAVvP,IACrCqC,EAAY,GAAKrC,EAAM2+D,MAEvBpvD,GAAO2oI,EAAkB/wI,IAAIoI,IAAkB,OAAVvP,IACrCqC,EAAY,GAAK,UAOzC+sI,EAAgBj2H,UAAUs3H,eAAiB,SAAUtxI,EAAMa,GACvD,GAAIwwI,GACA2H,EAAe,GAAIC,GACvBD,GAAav4I,KAAOT,EAAKS,KACzBu4I,EAAaz5H,QAAQrf,KAAO,EAC5B84I,EAAaz5H,QAAQC,IAAM,EAC3Bw5H,EAAaz5H,QAAQpB,MAAQ,EAC7B66H,EAAaz5H,QAAQrB,OAAS,MACD,KAAlByG,KAAK2zC,cAA8D,KAA3B3zC,KAAK2zC,SAASl4D,SAC7D44I,EAAa54I,SAAWukB,KAAK2zC,SAASl4D,SAGtC44I,EAAa54I,SAAWJ,EAAKI,SAEjC44I,EAAaE,YAAel5I,EAAKS,KAAK,GAAKT,EAAKS,KAAK,GAAM0iB,qBAAmBgrF,UAAYhrF,qBAAmBirF,SAEzGijC,MADiB,KAAVxwI,EACG8jB,KAAKksH,qBAAqBvoF,QAAQznD,EAAOm4I,GAGzCr0H,KAAKksH,qBAAqBvoF,QAAQ0wF,EAEhD,IAAIp4I,GAAiBZ,EAAKgB,eAC1B,IAAIJ,EAAe25F,KAAK,YAAa,CACjC,GAAIlxF,GAAOzI,EAAe25F,KAAK,WAC/B82C,GAAQrwI,gBAAgBwN,OAAO,WAAYnF,GAE/C,GAAIzI,EAAe25F,KAAK,WAAY,CAChC,GAAImT,GAAO9sG,EAAe25F,KAAK,UAC/B82C,GAAQrwI,gBAAgBwN,OAAO,UAAWk/F,GAE9C,OAAsC,KAA3B/oF,KAAK2zC,SAASl4D,UAA4BJ,EAAKgB,gBAAgBgH,IAAI,UAAW,CACrF,GAAIumE,OAAS,EAObA,IALIA,MADkC,KAA3B5pD,KAAK2zC,SAASl4D,SACyB,GAArC/B,KAAK8iB,MAAMwD,KAAK2zC,SAASl4D,UAGG,GAA5B/B,KAAK8iB,MAAMnhB,EAAKI,YAEV,IAAMmuE,EAAS,IAAMA,EACxC8iE,EAAQrwI,gBAAgBwN,OAAO,SAAU+/D,GAE7C,MAAO8iE,IAEXpB,EAAgBj2H,UAAUm/H,eAAiB,WACvCx0H,KAAKy0H,mBAAqB,GAAIvsG,KAC9BloB,KAAKkoF,sBACLloF,KAAKwrH,cACLxrH,KAAKyrH,eAAiB,GAAIvjG,KAC1BloB,KAAK0rH,4BAA4BrqE,QACjCrhD,KAAKunD,gBACLvnD,KAAK2rH,SAAW,GAAIzjG,KACpBloB,KAAK4rH,iBAAmB,GAAI1jG,KAC5BloB,KAAK4mH,eACD5mH,KAAKksH,sBAAwBlsH,KAAKksH,qBAAqBljE,OAAShpD,KAAKksH,qBAAqBljE,MAAMu9D,oBAChGvmH,KAAKksH,qBAAqBljE,MAAMu9D,uBAGjC+E,KAGPe,GAA4B,WAC5B,QAASA,GAAWqI,EAAsBC,GACtC30H,KAAK40H,kBAAoB,GAAI1sG,KAC7BloB,KAAKihD,oBAAqB,EAC1BjhD,KAAK60H,sBAAwBH,EAC7B10H,KAAK80H,sBAAwBH,EA4HjC,MA1HAtI,GAAWh3H,UAAU03H,MAAQ,SAAUgI,GACnC,GAAIC,EAiBJ,OAhBID,aAAkB5xI,IAClB6xI,EAAeh1H,KAAK+uH,gBAAgBgG,GAE/BzzI,MAAMuB,QAAQkyI,GACnBC,EAAeh1H,KAAKi1H,WAAWF,GAE1BA,YAAkB5oI,IACvB6oI,EAAeh1H,KAAKk1H,YAAYH,GAE3BA,YAAkBrpI,IACvBspI,EAAeh1H,KAAKm1H,eAAeJ,IAE9BA,YAAkBpuI,KAA8B,gBAAXouI,IACxB,gBAAXA,IAAyC,iBAAXA,MACrCC,EAAeD,GAEZC,GAEX3I,EAAWh3H,UAAU05H,gBAAkB,SAAUprI,EAASyxI,GACtD,GAAIltH,GAAQlI,KACRq1H,EAAmB,GAAIlyI,IAAe6c,KAAK60H,sBAY/C,OAXIlxI,IAAWA,EAAQ7H,KAAO,GAC1B6H,EAAQ0I,QAAQ,SAAUnL,EAAK1H,GAC3B,GAAY,OAAR0H,GAAgB1H,YAAiB8H,QAAkB,MAARJ,GAAuB,WAARA,GAA4B,SAARA,GAA0B,OAARA,IAA0B,OAARA,IAAgBk0I,GAAc,CAChJ,GAAIE,GAAcptH,EAAM6kH,MAAMvzI,EACV,QAAhB87I,OAA+C,KAAhBA,GAC/BD,EAAiBxrI,OAAO3I,EAAKo0I,MAK7CD,EAAiBzhI,UAAW,EACrByhI,GAEXhJ,EAAWh3H,UAAU4/H,WAAa,SAAUM,GAExC,IAAK,GADDC,MACKj7I,EAAI,EAAGA,EAAIg7I,EAAcn7I,OAAQG,IACtCi7I,EAAS74I,KAAKqjB,KAAK+sH,MAAMwI,EAAc96I,OAAOC,SAASH,EAAEI,WAAY,MAEzE,OAAO66I,IAEXnJ,EAAWh3H,UAAU6/H,YAAc,SAAUO,GACzC,GAAIj3I,GACAg5H,GAAc,EACdh1D,EAAaizE,CACjB,IAAIA,EAAe7yI,WAAWS,IAAI,YAAgE,UAAlDoyI,EAAe7yI,WAAWY,IAAI,WAAWgG,KAErF,GADAguH,GAAc,EACVie,YAA0BvgI,IAC1B1W,EAAQi3I,EAAez8H,aAAay8H,EAAe9zI,OAAQ8zI,EAAet7I,SAEzE,IAAIs7I,GAAkBjzE,EAAW51D,QAAU41D,EAAW51D,iBAAkBsI,IACzE,GAAuC,iBAA5BstD,GAAWE,cAA8BF,EAAWG,QAAS,CAChEC,EAAeJ,EAAW51D,OAAOzS,IAAMqoE,EAAW51D,OAAO1S,KAC7DsoE,GAAW5L,SAASgM,GACpBpkE,EAAQgkE,EAAWzkE,OAAO4B,SAAS,EAAG6iE,EAAWK,kBAIjDrkE,IADIoO,EAAS41D,EAAW51D,QACToM,aAAapM,EAAO1S,MAAO0S,EAAOzS,SAGpD,IAAIqoE,EAAW51D,QAAU41D,EAAW51D,OAAOA,OAAQ,CACpD,GAAIk2D,GAAcN,EAAW51D,MAC7B,IAAIk2D,EAAYl2D,iBAAkBsI,KAAkD,iBAA7B4tD,GAAYJ,cAA8BI,EAAYH,QAAS,CAClH,GAAIC,GAAeE,EAAYl2D,OAAOzS,IAAM2oE,EAAYl2D,OAAO1S,KAC/D4oE,GAAYlM,SAASgM,GACrBpkE,EAAQskE,EAAY/kE,OAAO4B,SAAS,EAAGmjE,EAAYD,kBAElD,IAAIC,EAAYl2D,QAAUk2D,EAAYl2D,iBAAkBsI,IAAY,CACrE,GAAItI,GAASk2D,EAAYl2D,MACzBpO,GAAQoO,EAAOoM,aAAapM,EAAO1S,MAAO0S,EAAOzS,SAGjDqE,aAIJA,EAAQi3I,EAAe7+E,aACS,IAAjBp4D,EAAMpE,SAAiBq7I,YAA0Bj4E,MAC5Dh/D,EAAQi3I,EAAe7wH,eAK/BpmB,EAAQi3I,EAAe7+E,aACS,IAAjBp4D,EAAMpE,SAAiBq7I,YAA0Bj4E,MAC5Dh/D,EAAQi3I,EAAe7wH,OAG/B,IAAI02B,GAAU,GAAIkiB,IAAkBl8D,MAAMS,KAAKvD,GAI/C,OAHA88C,GAAQglE,SAAWkX,EACnBl8E,EAAQ14C,WAAaod,KAAK+uH,gBAAgB0G,EAAe7yI,YACzD04C,EAAQ14C,WAAWgR,UAAW,EACvB0nC,GAEX+wF,EAAWh3H,UAAU8/H,eAAiB,SAAUxxI,GAC5C,GAAIqc,KAAK40H,kBAAkBvxI,IAAIM,GAC3B,MAAOqc,MAAK40H,kBAAkBpxI,IAAIG,EAGlCqc,MAAK40H,kBAAkB9yI,IAAI6B,EAAS,KACpC,IAAI+xI,GAAoB11H,KAAK80H,sBAAsBvgI,OAAO5Q,GACtDgyI,EAAY31H,KAAK+sH,MAAM2I,EAC3B,IAAIC,YAAqBxyI,KAAkBwyI,YAAqBxpI,IAAgB,CAC5E,GAAIo0H,GAASvgH,KAAK41H,kBAAkBD,EAEpC,OADA31H,MAAK40H,kBAAkB9yI,IAAI6B,EAAS48H,GAC7BA,EAIP,MADAvgH,MAAK40H,kBAAkB9yI,IAAI6B,EAASgyI,GAC7BA,GAInBtJ,EAAWh3H,UAAUugI,kBAAoB,SAAUjyI,GAC/C,GAAI48H,GAASvgH,KAAK60H,sBAAsB50F,mBAGxC,OAFAjgC,MAAK60H,sBAAsBngI,UAAU5S,IAAIy+H,EAAQ58H,GACjDA,EAAQP,MAAQm9H,EAAOv7D,aAAe,IAAMu7D,EAAOt7D,iBAC5Cs7D,GAEJ8L,KCxvCPwJ,GAA6B,WAC7B,QAASA,GAAYjzH,EAAM8tD,GAevB,GAdA1wD,KAAK81H,iBAAmB,GAAIp3I,aAAY,GAAM,GAAM,GAAM,GAAM,KAChEshB,KAAK+1H,oBAAsB,GAAIr3I,aAAY,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,MAC3FshB,KAAKg2H,iBAAmB,GAAIt3I,aAAY,IAAM,IAAM,IAAM,IAAM,GAAM,MACtEshB,KAAKoS,SAAW,GAChBpS,KAAKi2H,aAAe13H,oBAAkBnhB,QACtC4iB,KAAK66G,cAAe,EACpB76G,KAAKwpG,iBAAkB,EACvBxpG,KAAKypG,sBAAuB,EAC5BzpG,KAAK0pG,wBAAyB,EAC9B1pG,KAAK2pG,kBAAmB,EACxB3pG,KAAKu4D,WAAY,EACjBv4D,KAAKk2H,kBAAmB,EACxBl2H,KAAKsoD,kBAAmB,EACxBtoD,KAAKm2H,kBAAmB,GACnBvzH,EACD,KAAM,IAAI1nB,OAAM,uCAEpB8kB,MAAKG,QAAU,GAAIjL,IAA2B,gBAAT0N,GAAoBphB,EAAQohB,GAAQA,GACzE5C,KAAKg8G,eAAiB,GAAIgP,IAC1BhrH,KAAKjT,gBAAkB,GAAI4sH,IAAmB35G,KAAM0wD,GACpD1wD,KAAKo2H,OAAS,GAAIluG,KAClBloB,KAAKq2H,eACLr2H,KAAKjT,gBAAgBitH,cAAch6G,KAAKs2H,WACxC,KACIt2H,KAAKq6G,QAAO,GAEhB,MAAOv8H,GACH,GAAe,uBAAXA,EAAE0L,KAIF,KAAM1L,EAHNkiB,MAAKq6G,QAAO,GAMpBr6G,KAAKjT,gBAAgBqlB,SAAWpS,KAAKoS,SAyzCzC,MAvzCAhd,QAAO4Q,eAAe6vH,EAAYxgI,UAAW,0BACzC7R,IAAK,WACD,MAAOwc,MAAKk2H,kBAEhBp0I,IAAK,SAAUtI,GACXwmB,KAAKk2H,iBAAmB18I,GAE5BysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,kBACzC7R,IAAK,WACD,IAAKwc,KAAKu2H,QAAS,CACf,GAAI/8I,OAAQ,EACZ,KACIA,EAAQ,GAAIq/H,IAAe74G,KAAKG,SAEpC,MAAOq2H,IACPx2H,KAAKu2H,QAAU/8I,EAEnB,MAAOwmB,MAAKu2H,SAEhBtwH,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,cACzC7R,IAAK,WACD,GAAIoJ,GAASoT,KAAKG,QACd85G,EAAY,CAChB,IAAIj6G,KAAKy2H,gBAAkBz2H,KAAKy2H,eAAe/oF,QAC3C9gD,EAAOq0G,QACHjhG,KAAK02H,MAAM9pI,EAAQoT,KAAKg2H,oBACxB/b,EAAYrtH,EAAOmK,SAAW,EAAInK,EAAO1S,WAG5C,CAKD,IAJA,GACIy8I,GAAkB32H,KAAK+1H,oBAAoB37I,OAC3C45F,GAAQ,EACRj9E,EAAWnK,EAAOzS,KACd65F,GAASj9E,EAAW,IACxBA,GALO,KAKY4/H,GACJ,IACX5/H,EAAW,GAEfnK,EAAOmK,SAAWA,EAClBi9E,EAAQh0E,KAAK02H,MAAM9pI,EAAQoT,KAAK+1H,oBAVzB,MAUoD,EAE/D,IAAI/hD,EAAO,CACPpnF,EAAOstD,KAAK,EACZ,IAAIx5D,OAAK,EACT,IACIA,EAAKkM,EAAO2zG,gBACP9/G,EAAcC,GAEvB,KADA,GAAI8nC,GAAM,GACH9nC,GAAM,IAAQA,GAAM,IACvB8nC,GAAOtqC,OAAOC,aAAauC,GAC3BA,EAAKkM,EAAO2zG,SAEhB0Z,GAAYv/H,SAAS8tC,EAAK,IACtB6nB,MAAM4pE,KACNA,EAAY,IAIxB,MAAOA,IAEXh0G,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,eAezC7R,IAAK,WACD,MAAOwc,MAAK66G,cAEhB50G,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,kBAezC7R,IAAK,WACD,MAAOwc,MAAKwpG,iBAEhBvjG,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,aAezC7R,IAAK,WAUD,WAT+B,KAApBwc,KAAK42H,aACZ52H,KAAK42H,WAAa,EACd52H,KAAKy2H,gBAAkBz2H,KAAKy2H,eAAe/oF,QAC3C1tC,KAAK42H,WAAa52H,KAAKy2H,eAAet6I,UAGtC6jB,KAAK42H,WAAa52H,KAAK4zE,SAASz3F,WAGjC6jB,KAAK42H,YAEhB3wH,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,QAezC7R,IAAK,WAID,WAH0B,KAAfwc,KAAKgpD,QACZhpD,KAAKgpD,MAAQ,GAAIk7D,IAAQlkH,KAAK4zE,SAASnd,SAAUz2D,KAAKjT,kBAEnDiT,KAAKgpD,OAEhB/iD,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,WAezC7R,IAAK,WACD,MAAOwc,MAAK6oD,UAgBhB/mE,IAAK,SAAUtI,GACXwmB,KAAK6oD,SAAWrvE,GAEpBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,eAezC7R,IAAK,WACD,GAAIwc,KAAKjT,gBAAiB,CACtB,GAAIxQ,GAAOyjB,KAAKjT,gBAAgBguH,qBACZ,KAATx+H,IACPyjB,KAAKi2H,aAAuB,KAAP15I,GAG7B,MAAOyjB,MAAKi2H,cAEhBhwH,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,aAezC7R,IAAK,WACD,GAAImwF,GAAU3zE,KAAK4zE,QACnB,IAAID,EACA,GAAIA,EAAQE,mBAAmBxwF,IAAI,YAAa,CACxCkI,EAAYooF,EAAQE,mBAAmB+B,KAAK,aAC5CihD,EAAWljD,EAAQE,mBAAmBrwF,IAAI,eAE1Cwc,KAAK82H,cAAgB,GAAIxxC,IAAgBuxC,EAAU72H,KAAKjT,iBACxDiT,KAAK82H,cAAc12F,WAAa70C,EAC5BsrI,EAASxzI,IAAI,UACb2c,KAAK82H,cAAcpxC,sBAI1B,CACD,GAAImxC,GAAW,GAAI1zI,IAAe6c,KAAKjT,iBACnCxB,EAAYyU,KAAKjT,gBAAgBkzC,mBACrCjgC,MAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAWsrI,GAC9CljD,EAAQE,mBAAmBhqF,OAAO,WAAY0B,GAC9CyU,KAAKjT,gBAAgB86G,eAAgB,EACrC7nG,KAAK82H,cAAgB,GAAIxxC,IAAgBuxC,EAAU72H,KAAKjT,iBACxDiT,KAAK82H,cAAc12F,WAAa70C,EAGxC,MAAOyU,MAAK82H,eAEhB7wH,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,iBAkBzC7R,IAAK,WACD,MAAOwc,MAAKg8G,gBAEhB/1G,YAAY,EACZC,cAAc,IAmBlB2vH,EAAYxgI,UAAUjZ,QAAU,SAAUy5D,GACtC,GAAIA,EAAY,GAAKA,GAAa71C,KAAK7jB,UACnC,KAAM,IAAIjB,OAAM,qBAEpB,IAAI67I,GAAa/2H,KAAKo2H,OAAO5yI,IAAIqyD,EACjC,IAAIkhF,EACA,MAAOA,EAEX,IACIC,GADA56H,EAAK4D,KAAM4zE,EAAWx3E,EAAGw3E,SAAU6iD,EAAiBr6H,EAAGq6H,cAGvDO,GADAP,GAAkBA,EAAe/oF,SAAW+oF,EAAeld,YAAc1jE,EAC/D71C,KAAKi3H,sBAAsBphF,GAG3B+9B,EAASk0B,kBAAkBjyD,EAEzC,IAAIx6D,GAAO,GAAIqgD,IAAQ17B,KAAKjT,gBAAiB8oD,EAAWmhF,EAAQp0I,WAAYo0I,EAAQzrI,UAEpF,OADAyU,MAAKo2H,OAAOt0I,IAAI+zD,EAAWx6D,GACpBA,GAEXw6I,EAAYxgI,UAAUsuC,QAAU,SAAU5+B,EAAMlE,GAC5C,GAAIq2H,GACArhF,MACgB,KAATh1C,GACPq2H,EAAWr2H,EACXg1C,EAAY9wC,EACZ/E,KAAKm3H,iBAAiBthF,QAED,KAAT9wC,GACZmyH,EAAW,GAAI5C,IACfz+E,EAAY71C,KAAK7jB,WAEZ4oB,YAAgBuvH,KACrB4C,EAAWnyH,EACX8wC,EAAY71C,KAAK7jB,YAGjB+6I,EAAW,GAAI5C,IACfz+E,EAAY9wC,EACZ/E,KAAKm3H,iBAAiBthF,GAE1B,IAAIuhF,GAAoB,GAAIj0I,IAAe6c,KAAKjT,gBAChDqqI,GAAkBvtI,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4zI,EAAkBvtI,OAAO,QAAS,GAClCmW,KAAKq3H,oBAAoBD,EAAmBF,EAC5C,IAAII,GAAmBt3H,KAAKjT,gBAAgBkzC,mBAC5CjgC,MAAKjT,gBAAgB2H,UAAU5S,IAAIw1I,EAAkBF,GACrDA,EAAkBh0I,MAAQk0I,EAAiB38I,UAC3C,IAAIsB,GAAiB,GAAIkH,IAAe6c,KAAKjT,gBAC7C9Q,GAAe4N,OAAO,OAAQlD,GAASnD,IAAI,QAC3C,IAAI+nI,GAAgBvrH,KAAKjT,gBAAgBkzC,mBAKzC,IAJAjgC,KAAKjT,gBAAgB2H,UAAU5S,IAAIypI,EAAetvI,GAClDA,EAAemH,MAAQmoI,EAAc5wI,WACrCsB,EAAe4N,OAAO,SAAUytI,GAChCF,EAAkBvtI,OAAO,QAAS0hI,IACX,IAAnBvrH,KAAK7jB,WACD2oG,EAAkB9kF,KAAK4zE,SAASC,mBAAmB+B,KAAK,WACrC51E,KAAK4zE,SAAS6zB,qBACjCznG,KAAK4zE,SAAS6zB,oBAAoB59G,OAAO,QAASytI,IAClDF,EAAkBvtI,OAAO,SAAUi7F,IAGnC9kF,KAAK4zE,SAASC,mBAAmBhqF,OAAO,QAASytI,GAErDt3H,KAAKo2H,OAAS,GAAIluG,KAClBloB,KAAK42H,WAAa,MAEjB,CACD,GAAIW,GAAav3H,KAAK5jB,QAAQy5D,IAAc71C,KAAK7jB,UAAa05D,EAAY,EAAKA,EAC/E,IAAI0hF,GAAcA,EAAWl7I,gBAAiB,CAC1C,GAAIyoG,GAAkByyC,EAAWl7I,gBAAgBu5F,KAAK,UAClD4hD,EAAmBx3H,KAAKjT,gBAAgBwH,OAAOuwF,EACnD,IAAI0yC,GAAoBA,EAAiBn0I,IAAI,QAAS,CAClD,GAAIiuD,GAAOkmF,EAAiBh0I,IAAI,OAChC,IAAI8tD,EAAM,CACN,GAAIuE,IAAc71C,KAAK7jB,UACnBm1D,EAAK30D,KAAK26I,OAET,CACD,GAAIG,KACJnmF,GAAKjlD,QAAQ,SAAU5G,GACfA,IAAU8xI,EAAW18E,MACrB48E,EAAU96I,KAAK26I,GAEnBG,EAAU96I,KAAK8I,KAEnB6rD,EAAOmmF,EACPz3H,KAAK03H,iBAAiB7hF,GAE1B2hF,EAAiB3tI,OAAO,OAAQynD,GAChC8lF,EAAkBvtI,OAAO,SAAUi7F,GACnC9kF,KAAK23H,iBAAiBH,EAAkB,GACxCx3H,KAAK42H,WAAa52H,KAAK7jB,UAAY,KAKnD,GAAIgD,GAAS,GAAIu8C,IAAQ17B,KAAKjT,gBAAiB8oD,EAAW55D,EAAgBsvI,EAI1E,OAHApsI,GAAOsb,cAAgBy8H,EACvB/3I,EAAOmV,QAAS,EAChB0L,KAAKo2H,OAAOt0I,IAAI+zD,EAAW12D,GACpBA,GAEX02I,EAAYxgI,UAAUuiI,WAAa,SAAUC,GACzC,GAAIC,GAAcD,YAAoBn8F,IAAWm8F,EAAW73H,KAAK5jB,QAAQy7I,EACzE73H,MAAK+3H,YAAYD,IAErBjC,EAAYxgI,UAAU8hI,iBAAmB,SAAUj7I,GAC/C,GAAIA,EAAQ,GAAKA,EAAQ8jB,KAAK7jB,UAC1B,KAAM,IAAIjB,OAAM,uBAGxB26I,EAAYxgI,UAAUsiI,iBAAmB,SAAU/0I,EAAYo1I,GAE3D,GADAp1I,EAAWiH,OAAO,QAASjH,EAAWY,IAAI,SAAWw0I,GACjDp1I,EAAWS,IAAI,UAAW,CAC1B,GAAIm0I,GAAmB50I,EAAWY,IAAI,SAClCg0I,IAA0D,UAAtCA,EAAiBh0I,IAAI,QAAQgG,MACjDwW,KAAK23H,iBAAiBH,EAAkBQ,KAIpDnC,EAAYxgI,UAAUgiI,oBAAsB,SAAUz0I,EAAYs0I,GAC9D,GAAI58H,IAAU,EAAG,EAAG48H,EAASp7I,KAAK,GAAIo7I,EAASp7I,KAAK,GACpD8G,GAAWiH,OAAO,WAAYyQ,GAC9B1X,EAAWiH,OAAO,UAAWyQ,EAC7B,IAAIsvD,GAAyC,GAAhClwE,KAAK8iB,MAAM06H,EAASz7I,SAC7BmuE,IAAU,MACVA,GAAkB,KAEtBhnE,EAAWiH,OAAO,SAAU+/D,IAEhCisE,EAAYxgI,UAAUqiI,iBAAmB,SAAUx7I,EAAO+7I,OAClC,KAAhBA,IAA0BA,GAAc,EAE5C,KAAK,GADDC,GAAc,GAAIhwG,KACb3tC,EAAIylB,KAAK7jB,UAAY,EAAG5B,GAAK,EAAGA,IAAK,CAC1C,GAAIc,GAAO2kB,KAAK5jB,QAAQ7B,EACpB09I,GACI19I,GAAK2B,GACLg8I,EAAYp2I,IAAIvH,EAAI,EAAGc,GACvBA,EAAKqoD,WAAanpD,EAAI,GAGtB29I,EAAYp2I,IAAIvH,EAAGc,GAInBd,EAAI2B,GACJg8I,EAAYp2I,IAAIvH,EAAI,EAAGc,GACvBA,EAAKqoD,WAAanpD,EAAI,GAEjBA,IAAM2B,GACXg8I,EAAYp2I,IAAIvH,EAAGc,GAI/B2kB,KAAKo2H,OAAS8B,EACTD,IACDj4H,KAAK42H,WAAa52H,KAAKo2H,OAAOt6I,OAGtC+5I,EAAYxgI,UAAU0iI,YAAc,SAAUI,GAC1C,GAAI5K,GAAcvtH,KAAKwtH,2BACvB,IAAID,GAAeA,EAAYlqI,IAAI80I,GAAe,CAC9C,GAAI1K,GAAYF,EAAY/pI,IAAI20I,EAChC,IAAI1K,EACA,IAASlzI,EAAI,EAAGA,EAAIkzI,EAAUrzI,OAAQG,IAAK,CACvC,GAAIorG,GAAW8nC,EAAUhzI,OAAOC,SAASH,EAAEI,WAAY,IACvD,IAAIgrG,EAAU,CACV,GAAIyyC,GAAqBzyC,EAASh5F,WAC9ByrI,KACIA,EAAmB/0I,IAAI,MACvB+0I,EAAmBvuI,OAAO,IAAK,MAEnCuuI,EAAmBvuI,OAAO,OAAQ,SAMtDmW,KAAKq4H,qBAAqBF,EAC1B,KAAK,GAAI59I,GAAIylB,KAAKxK,KAAKlL,MAAQ,EAAG/P,GAAK,IAAKA,EAAG,CAC3C,GAAImb,GAAQsK,KAAKxK,KAAK89C,QAAQ/4D,EAC1Bmb,IAASA,EAAMra,OAAS88I,GACxBn4H,KAAKxK,KAAKyvH,cAAc1qI,GAGhCylB,KAAK03H,iBAAiBS,EAAaz0F,YAAY,GAC/C1jC,KAAKs4H,cAAcH,EAAat9E,KAAMs9E,EAAa97I,iBAC/C2jB,KAAKjT,gBAAgB2H,UAAUrR,IAAI80I,EAAat9E,QAChDs9E,EAAa97I,gBAAgBuX,UAAW,IAGhDiiI,EAAYxgI,UAAUijI,cAAgB,SAAUC,EAAmB31I,GAC/D,GAAIA,EAAWS,IAAI,UAAW,CAC1B,GAAIyhG,GAAkBliG,EAAWgzF,KAAK,UAClC4hD,EAAmBx3H,KAAKjT,gBAAgBwH,OAAOuwF,EACnD,IAAI0yC,GAAoBA,EAAiBn0I,IAAI,QAAS,CAClD,GAAIiuD,GAAOkmF,EAAiBh0I,IAAI,OAC5BkZ,IAAmB40C,IAAyB,IAAhBA,EAAKl3D,QAAgBo9I,GAA0D,UAAtCA,EAAiBh0I,IAAI,QAAQgG,KAClGwW,KAAKs4H,cAAcxzC,EAAiB0yC,IAGpClmF,EAAOA,EAAKqqD,OAAO,SAAUpvG,GAAQ,MAAOA,KAASgsI,IACrDf,EAAiB3tI,OAAO,OAAQynD,GAChCtxC,KAAK23H,iBAAiBH,GAAmB,OAKzD3B,EAAYxgI,UAAUm4H,0BAA4B,WAC9C,GAAItuI,GAAU8gB,KAAKytH,SACnB,QAAuC,KAA5BztH,KAAKy0H,oBAAsCv1I,EAAS,CAC3D8gB,KAAKy0H,mBAAqB,GAAIvsG,IAC9B,IAAImrG,MACAC,GAAoBp3I,MAAO,EAAGo1D,KAAMpyD,EAAQqmG,cAChD,GAAG,CACC,KAAO+tC,EAAgBp3I,MAAQo3I,EAAgBhiF,KAAKl3D,QAAS,CAEzD,GAAIktG,IADJpoG,EAAUo0I,EAAgBhiF,KAAKgiF,EAAgBp3I,QAChBorG,gBAC/B,IAAIA,GACA,GAAIA,EAAiB/oG,YAAa,CAC1BlD,EAAOisG,EAAiB/oG,YAAYlD,MACpC+8C,EAAOp4B,KAAKy0H,mBAAmBjxI,IAAInI,MAEnC+8C,MAEJA,EAAKz7C,KAAKuC,GACV8gB,KAAKy0H,mBAAmB3yI,IAAIzG,EAAM+8C,QAGrC,CACD,GAAI75C,GAAcW,EAAQX,WAC1B,IAAIA,EAAa,CACb,GAAIlD,GAAOkD,EAAYlD,KACnB+8C,EAAOp4B,KAAKy0H,mBAAmBjxI,IAAInI,EAClC+8C,KACDA,MAEJA,EAAKz7C,KAAKuC,GACV8gB,KAAKy0H,mBAAmB3yI,IAAIzG,EAAM+8C,IAG1Ck7F,EAAgBp3I,OAAS,EACrBgD,EAAQoL,MAAQ,IAChB+oI,EAAM12I,KAAK22I,GACXA,GAAoBp3I,MAAO,EAAGo1D,KAAMpyD,EAAQqmG,gBAIpD,GAAI8tC,EAAMj5I,OAAS,EAEf,IADAk5I,EAAkBD,EAAMr2F,MACjBs2F,EAAgBp3I,QAAUo3I,EAAgBhiF,KAAKl3D,QAAUi5I,EAAMj5I,OAAS,GAC3Ek5I,EAAkBD,EAAMr2F,YAG3Bs2F,EAAgBp3I,MAAQo3I,EAAgBhiF,KAAKl3D,QAE1D,MAAO4lB,MAAKy0H,oBAEhBoB,EAAYxgI,UAAUgjI,qBAAuB,SAAUh9I,GACnD,GAAIuH,EACAod,MAAK4zE,SAASC,mBAAmBxwF,IAAI,WACrCT,EAAaod,KAAK4zE,SAASC,mBAAmBrwF,IAAI,YAE9Cwc,KAAKw4H,yBAAyB51I,EAAY,QAASvH,GACnD2kB,KAAKw4H,yBAAyB51I,EAAY,YAAavH,KAInEw6I,EAAYxgI,UAAUmjI,yBAA2B,SAAU51I,EAAY1B,EAAK7F,GACxE,GAAIuH,EAAWS,IAAInC,GAAM,CACrB,GAAIu3I,GAAc71I,EAAWY,IAAItC,EACjC,IAAIu3I,GAAeA,EAAYp1I,IAAI,SAAU,CACzC,GAAIq1I,GAAiBD,EAAYl1I,SAAS,QAC1C,IAAIm1I,GAAkBA,EAAet+I,OAAS,EAAG,CAC7C,GAAIu+I,GAAsB34H,KAAK44H,yBAAyBF,EAAgBr9I,GACpEw9I,EAAsB,GAAI11I,IAAe6c,KAAKjT,gBAClD8rI,GAAoBhvI,OAAO,QAAS8uI,EACpC,IAAIptI,GAAYyU,KAAKjT,gBAAgBkzC,mBACrCjgC,MAAKjT,gBAAgB2H,UAAU5S,IAAIyJ,EAAWstI,GAC9CA,EAAoBz1I,MAAQmI,EAAU5Q,WACtCiI,EAAWiH,OAAO3I,EAAKqK,OAKvCsqI,EAAYxgI,UAAUujI,yBAA2B,SAAUE,EAAYz9I,GACnE,GAAIy9I,EAAW1+I,OAAS,EACpB,IAAK,GAAIG,GAAI,EAAGA,GAAKu+I,EAAW1+I,OAAQG,GAAQ,EAAG,CAC/C,GAAI0B,GAAiB68I,EAAWr+I,OAAOC,SAASH,EAAEI,WAAY,IAC9D,IAAIsB,GAAkBZ,EAAKgB,kBAAoBJ,EAG3C,MAFA68I,GAAW97F,MACX87F,EAAW97F,MACJ87F,EAInB,MAAOA,IAmBXjD,EAAYxgI,UAAU0jI,aAAe,SAAUC,GAC3C,GAAI9wH,GAAQlI,IACZg5H,GAAW3sI,QAAQ,SAAUqN,GACzBwO,EAAMivH,iBAAiBz9H,IAM3B,KAAK,GAJDu/H,GAAcj5H,KAAKk5H,aAAaF,GAChCG,EAAiBH,EAAWxhG,QAAQla,KAAK,SAAUC,EAAG13B,GAAK,MAAO03B,GAAI13B,IAEtEuzI,EADa93I,MAAMS,MAAO3H,OAAQ4lB,KAAK7jB,WAAa,SAAUk9I,EAAG9+I,GAAK,MAAOA,KAClDohH,OAAO,SAAUh4G,GAAW,OAAyC,IAAlCs1I,EAAY13I,QAAQoC,KAC7EpJ,EAAI6+I,EAAch/I,OAAS,EAAGG,GAAK,EAAGA,IAC3CylB,KAAK43H,WAAWwB,EAAc3+I,OAAOC,SAASH,EAAEI,WAAY,KAgDhE,KAAK,GA9CD2+I,MACAC,EAAW,GAAIrxG,KACf48D,EAAkB9kF,KAAK4zE,SAASC,mBAAmB+B,KAAK,SA2CxDt5B,EAASt8C,KACJzlB,EAAI,EAAGA,EAAI0+I,EAAY7+I,OAAQG,KA3C1B,SAAUA,GACpB,GAAIi/I,GAAYl9E,EAAOlgE,QAAQ+8I,EAAe53I,QAAQ03I,EAAYx+I,OAAOC,SAASH,EAAEI,WAAY,MAChG6+I,GAAU91F,WAAanpD,EACvBg/I,EAASz3I,IAAIvH,EAAGi/I,EAChB,IAAIpC,GAAoB,GAAIj0I,IAAem5D,EAAOvvD,gBAClDqqI,GAAkBvtI,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4zI,EAAkBvtI,OAAO,QAAS,GAClCutI,EAAkBvtI,OAAO,SAAUi7F,EACnC,IAAIwyC,GAAmBh7E,EAAOvvD,gBAAgBkzC,mBAC9Cm3F,GAAkBh0I,MAAQk0I,EAAiB38I,WAC3Cy8I,EAAkBvtI,OAAO,QAAS2vI,EAAU3+E,OAC5Cy+E,EAAQ38I,KAAK26I,EAEb,KADA,GAAIE,GAAmBgC,EAAUn9I,gBAAgBmH,IAAI,UAC9Cg0I,GAA0D,UAAtCA,EAAiBh0I,IAAI,QAAQgG,OACpDguI,EAAiBnrI,QAAQ,SAAUnL,EAAK1H,GACpC,OAAQ0H,GACJ,IAAK,SACL,IAAK,OACL,IAAK,OACL,IAAK,QACD,KACJ,KAAK,YACDgnB,EAAMuxH,gBAAgBjC,EAAiBh0I,IAAI,aAAc4zI,EACzD,MACJ,SACSA,EAAkB/zI,IAAInC,IACvBk2I,EAAkBvtI,OAAO3I,EAAK1H,MAK1Cg+I,EAAiBn0I,IAAI,YACrBm0I,EAAmBA,EAAiBh0I,IAAI,SAMhD84D,GAAOvvD,gBAAgB2H,UAAU5S,IAAIw1I,EAAkBF,GACrC96E,EAAOvvD,gBAAgBwH,OAAOilI,EAAU3+E,MAC9ChxD,OAAO,SAAUytI,IAIrB/8I,EAGZ,IADAylB,KAAKo2H,OAASmD,EACVv5H,KAAK4zE,SAAU,CACf,GAAI4jD,GAAmBx3H,KAAK4zE,SAAS6zB,mBACrC,IAAI+vB,GAAoBA,EAAiBn0I,IAAI,QAAS,CAClD,GAAIiuD,GAAOkmF,EAAiBh0I,IAAI,OAChC8tD,GAAOgoF,EACP9B,EAAiB3tI,OAAO,OAAQynD,MAI5CukF,EAAYxgI,UAAU6jI,aAAe,SAAU7H,GAC3C,GAAI4H,KAMJ,OALA5H,GAAMhlI,QAAQ,SAAUqtI,IACc,IAA9BT,EAAY13I,QAAQm4I,IACpBT,EAAYt8I,KAAK+8I,KAGlBT,GAEXpD,EAAYxgI,UAAUokI,gBAAkB,SAAUx/I,EAAQF,GACtD,GAAImuB,GAAQlI,IACZ,IAAKjmB,EAAOsJ,IAAI,aAGX,CACD,GAAIs2I,GAAuB5/I,EAAOyJ,IAAI,YACtCvJ,GAAOoS,QAAQ,SAAUnL,EAAK1H,GACtBmgJ,EAAqBt2I,IAAInC,GACzBgnB,EAAM0xH,qBAAqB14I,EAAK1H,EAAOmgJ,GAGvCA,EAAqB9vI,OAAO3I,EAAK1H,SATzCO,GAAO8P,OAAO,YAAa5P,IAcnC47I,EAAYxgI,UAAUukI,qBAAuB,SAAU14I,EAAK1H,EAAO0tE,GAC/D,GAAI1tE,YAAiB2J,IAAgB,CACjC,GAAI02I,GAAc3yE,EAAmB1jE,IAAItC,EACzC,IAAI24I,EAAa,CACb,GAAIC,IAAW,CACfD,GAAYxtI,QAAQ,SAAU0tI,EAAUr9E,GAC/Bm9E,EAAYx2I,IAAI02I,KACjBF,EAAYhwI,OAAOkwI,EAAUr9E,GAC7Bo9E,GAAW,KAGfA,IACA5yE,EAAmBtzD,UAAW,OAIlCszD,GAAmBr9D,OAAO3I,EAAK1H,OAGlC,IAAI8H,MAAMuB,QAAQrJ,GAAQ,CAC3B,GAAIwgJ,GAAa9yE,EAAmB1jE,IAAItC,EACxC,IAAI84I,EAAY,CACZ,GAAIC,IAAW,CACfzgJ,GAAM6S,QAAQ,SAAU5G,IACe,IAA/Bu0I,EAAWz4I,QAAQkE,KACnBu0I,EAAWr9I,KAAK8I,GAChBw0I,GAAW,KAGfA,IACA/yE,EAAmBtzD,UAAW,OAIlCszD,GAAmBr9D,OAAO3I,EAAK1H,KAI3Cq8I,EAAYxgI,UAAUslC,KAAO,SAAUu/F,GAEnC,GADAl6H,KAAK4xD,eAAe5xD,KAAK6oD,UACD,gBAAbqxE,GAIP,MAAOl6H,MAAKjT,gBAAgBixC,OAH5Bm8F,QAAKx/F,KAAKu/F,EAAU,GAAIE,OAAMp6H,KAAKjT,gBAAgBixC,UAAYtvC,KAAM,sBAoB7EmnI,EAAYxgI,UAAUglI,WAAa,WAC/B,GAAInyH,GAAQlI,IACZ,OAAO,IAAIs6H,SAAQ,SAAUC,GAEzBA,GADYC,SAAU,GAAIJ,OAAMlyH,EAAMnb,gBAAgBixC,UAAYtvC,KAAM,yBAIhFmnI,EAAYxgI,UAAUolI,kBAAoB,SAAU11H,EAAMlE,GACtDb,KAAKu4D,WAAY,EACjBv4D,KAAK06H,6BACL,IAAI7Q,GACAqN,CAOJ,IANInyH,GAAQA,YAAgB41H,IACxBzD,EAAWnyH,EAENlE,GAAQA,YAAgB85H,MAC7BzD,EAAWr2H,GAEXq2H,EAAU,CACV,GAAIA,EAAS0D,aAAez8H,aAAW08H,KACnChR,EAAS,GAAIh1E,QAEZ,IAAIqiF,EAAS0D,aAAez8H,aAAW2jD,KACxC+nE,EAAS,GAAI/oE,QAEZ,CAAA,GAAIo2E,EAAS0D,aAAez8H,aAAWwrH,IAIxC,MAHAE,GAAS,GAAIjB,IAKjBiB,EAAOx1E,iBAAmB6iF,EAAS7iF,qBAGnCw1E,GAAS,GAAIh1E,GAEjB,IAAI11D,GAAS0qI,EAAO90E,mBAAmB/0C,KACvC,KAAI+E,GAAwB,gBAATA,GAIf,MAAO5lB,EAHPg7I,QAAKx/F,KAAK51B,EAAM,GAAIq1H,OAAMj7I,IAAWuP,KAAM,iBAMnDmnI,EAAYxgI,UAAUylI,eAAiB,SAAU/1H,EAAMlE,GACnDb,KAAK+6H,4BACL,IAAIlR,GACAqN,CAOJ,IANInyH,GAAQA,YAAgBi2H,IACxB9D,EAAWnyH,EAENlE,GAAQA,YAAgBm6H,MAC7B9D,EAAWr2H,GAEXq2H,EAAU,CACV,GAAIA,EAAS0D,aAAez8H,aAAW08H,KACnChR,EAAS,GAAIh1E,IAAcqiF,EAAS+D,gBAEnC,IAAI/D,EAAS0D,aAAez8H,aAAW2jD,KACxC+nE,EAAS,GAAI/oE,IAAco2E,EAAS+D,gBAEnC,IAAI/D,EAAS0D,aAAez8H,aAAWwrH,IACxCE,EAAS,GAAIjB,IAAasO,EAAS+D,gBAElC,CAAA,GAAI/D,EAAS0D,aAAez8H,aAAWm6C,IAIxC,MAHAuxE,GAAS,GAAIgB,IAAaqM,EAAS+D,YAKvCpR,EAAO37E,oBAAsBgpF,EAASgE,wBAGtCrR,EAAS,GAAIh1E,KACN3G,qBAAsB,CAEjC,KAAInpC,GAAwB,gBAATA,GAIf,MAAO8kH,GAAO70E,kBAAkBh1C,KAHhCm6H,QAAKx/F,KAAK51B,EAAM,GAAIq1H,OAAMvQ,EAAO70E,kBAAkBh1C,QAAUtR,KAAM,iBAM3EmnI,EAAYxgI,UAAU8lI,kBAAoB,SAAUv4H,EAAMg4H,GAClDA,IAAez8H,aAAW08H,MACf,GAAIhmF,KACVwD,mBAAmBr4C,KAAuB,gBAAT4C,GAAqBphB,EAAQohB,GAAQA,GAEtEg4H,IAAez8H,aAAW2jD,MACpB,GAAIhB,KACVzI,mBAAmBr4C,KAAuB,gBAAT4C,GAAqBphB,EAAQohB,GAAQA,GAEtEg4H,IAAez8H,aAAWwrH,MACrB,GAAIf,KACVvwE,mBAAmBr4C,KAAuB,gBAAT4C,GAAqBphB,EAAQohB,GAAQA,IAGlFizH,EAAYxgI,UAAU+lI,eAAiB,SAAUx4H,EAAMg4H,GAC/C56H,KAAKxK,KAAKlL,MAAQ,IACdswI,IAAez8H,aAAW08H,MACf,GAAIhmF,KACV8D,gBAAgB34C,KAAuB,gBAAT4C,GAAqBphB,EAAQohB,GAAQA,GAEnEg4H,IAAez8H,aAAW2jD,MACpB,GAAIhB,KACVnI,gBAAgB34C,KAAuB,gBAAT4C,GAAqBphB,EAAQohB,GAAQA,GAEnEg4H,IAAez8H,aAAWwrH,KACrB,GAAIf,KACVjwE,gBAAgB34C,KAAuB,gBAAT4C,GAAqBphB,EAAQohB,GAAQA,GAElEg4H,IAAez8H,aAAWm6C,MACrB,GAAIuyE,KACVlyE,gBAAgB34C,KAAuB,gBAAT4C,GAAqBphB,EAAQohB,GAAQA,KAgBnFizH,EAAYxgI,UAAUgmI,QAAU,WACxBr7H,KAAKjT,kBACLiT,KAAKjT,gBAAgBy/C,WACrBxsC,KAAKjT,oBAAkBtJ,IAEvBuc,KAAK4zE,WACL5zE,KAAK4zE,SAASpnC,WACdxsC,KAAK4zE,aAAWnwF,IAEpBuc,KAAKg2H,qBAAmBvyI,GACxBuc,KAAK81H,qBAAmBryI,GACpBuc,KAAKo2H,QAAUp2H,KAAKo2H,OAAOt6I,KAAO,GAClCkkB,KAAKo2H,OAAO/pI,QAAQ,SAAU7S,GAC1BA,EAAMgzD,aAGVxsC,KAAKo2H,SACLp2H,KAAKo2H,OAAO/0E,QACZrhD,KAAKo2H,WAAS3yI,IAElBuc,KAAK+1H,wBAAsBtyI,GAC3Buc,KAAKG,YAAU1c,GACfuc,KAAKgpD,UAAQvlE,GACb2Z,KACI4C,KAAKs7H,oBACDt7H,KAAKs7H,kBAAkBx/I,KAAO,GAC9BkkB,KAAKs7H,kBAAkBjvI,QAAQ,SAAU7S,GACjCA,GACAA,EAAMg7I,mBAIlBx0H,KAAKs7H,kBAAkBj6E,QACvBrhD,KAAKs7H,sBAAoB73I,KAGjC2R,OAAO4Q,eAAe6vH,EAAYxgI,UAAW,0BACzC7R,IAAK,WACD,GAAyC,OAArCwc,KAAKu7H,iCAAoF,KAArCv7H,KAAKu7H,4BACzD,GAAIv7H,KAAK4zE,SAASC,mBAAmBxwF,IAAI,SAAU,CAC/C,GAAI4lE,GAAQjpD,KAAK4zE,SAASC,mBAAmBrwF,IAAI,QACjDwc,MAAKu7H,4BAA8B,GAAInzC,IAA+Bn/B,EAAOjpD,KAAKjT,qBAGlFiT,MAAKu7H,4BAA8B,GAAInzC,GAG/C,OAAOpoF,MAAKu7H,6BAEhBt1H,YAAY,EACZC,cAAc,IAElB2vH,EAAYxgI,UAAU4hI,sBAAwB,SAAUphF,GACpD,GAAIz5C,GAAK4D,KAAM4zE,EAAWx3E,EAAGw3E,SAAU6iD,EAAiBr6H,EAAGq6H,eAAgB1pI,EAAkBqP,EAAGrP,gBAC5FtB,EAAMC,GAAclI,IAAIizI,EAAerd,kBAAmB,EAC9D,KACI,GAAIl/F,GAAMntB,EAAgBwH,OAAO9I,EACjC,IAAIyuB,YAAe/2B,MAEXsa,GADOyc,EAAI12B,IAAI,QACD,UAAa02B,EAAI72B,IAAI,UAAY62B,EAAI72B,IAAI,SAOvD,MANKuwF,GAAS8zB,mBAAmBrkH,IAAIoI,IACjCmoF,EAAS8zB,mBAAmBtJ,IAAI3yG,EAAK,GAEpCmoF,EAAS+zB,eAAetkH,IAAIoI,IAC7BmoF,EAAS+zB,eAAevJ,IAAI3yG,EAAK,IAE5B7I,WAAYs3B,EAAK3uB,UAAWE,EAG7C,MAAM,IAAIsyG,IAAY,2EAE1B,MAAOy9B,GACH,MAAO5nD,GAASk0B,kBAAkBjyD,KAG1CggF,EAAYxgI,UAAUghI,aAAe,WACjC,GAAIzpI,GAASoT,KAAKG,OAElB,IADAvT,EAAOq0G,QACFjhG,KAAK02H,MAAM9pI,EAAQoT,KAAK81H,kBAA7B,CAGAlpI,EAAOs0G,WAGP,KAFA,GAAI5vF,GAAU,GACV5wB,EAAKkM,EAAO2zG,UACT7/G,EAAK,MACJ4wB,EAAQl3B,QAAU,KAGtBk3B,GAAWpzB,OAAOC,aAAauC,GAC/BA,EAAKkM,EAAO2zG,SAEXvgG,MAAKoS,WACNpS,KAAKoS,SAAWd,EAAQ/wB,UAAU,MAG1Cs1I,EAAYxgI,UAAUglH,OAAS,SAAUzE,GACrC51G,KAAKjT,gBAAgBstH,OAAOzE,GAC5B51G,KAAK4zE,SAAW,GAAI2zB,IAAYvnG,KAAKjT,iBACjCiT,KAAK4zE,SAAStiE,UACdtR,KAAKoS,SAAWpS,KAAK4zE,SAAStiE,UAGtCukH,EAAYxgI,UAAUqhI,MAAQ,SAAU9pI,EAAQ82E,EAAW0jC,EAAOq0B,OAChD,KAAVr0B,IAAoBA,EAAQ,UACd,KAAdq0B,IAAwBA,GAAY,EACxC,IAAIljB,GAAkB70C,EAAUtpF,OAC5Bo+H,EAAY5rH,EAAO8zG,UAAU0G,GAC7BqR,EAAaD,EAAUp+H,OAASm+H,CACpC,IAAIE,GAAc,EACd,OAAO,CAEX,IAAIgjB,EAGA,IAFA,GAAIC,GAAenjB,EAAkB,EACjCxhH,EAAWyhH,EAAUp+H,OAAS,EAC3B2c,GAAY2kI,GAAc,CAE7B,IADIlhJ,EAAI,EACDA,EAAI+9H,GAAmBC,EAAUzhH,EAAWvc,KAAOkpF,EAAUg4D,EAAelhJ,IAC/EA,GAEJ,IAAIA,GAAK+9H,EAEL,MADA3rH,GAAOmK,UAAYA,EAAW2kI,GACvB,CAEX3kI,SAKJ,KADIA,EAAW,EACRA,GAAY0hH,GAAY,CAE3B,IADA,GAAIj+H,GAAI,EACDA,EAAI+9H,GAAmBC,EAAUzhH,EAAWvc,KAAOkpF,EAAUlpF,IAChEA,GAEJ,IAAIA,GAAK+9H,EAEL,MADA3rH,GAAOmK,UAAYA,GACZ,CAEXA,KAGR,OAAO,GAEX8+H,EAAYxgI,UAAUu8D,eAAiB,SAAUC,OAC3B,KAAdA,IAAwBA,GAAY,GACxC7xD,KAAK+6H,2BAA2BlpE,GAChC7xD,KAAK06H,4BAA4B7oE,IAErCgkE,EAAYxgI,UAAU0lI,2BAA6B,SAAUlpE,GAEzD,OADkB,KAAdA,IAAwBA,GAAY,GACpC7xD,KAAK4zE,SAASC,mBAAmBxwF,IAAI,YAAa,CAElD,GADA2c,KAAKxK,KAAKo8D,eAAeC,GACrBA,EAAW,CACX,GAAI8pE,GAAa37H,KAAK4zE,SAASC,mBAAmBhnF,OAAO,YACrDjK,EAAa,GAAIO,IAAe6c,KAAKjT,gBACzCnK,GAAWgR,UAAW,EAClB+nI,YAAsBjwI,IACtBsU,KAAKjT,gBAAgB2H,UAAU5S,IAAI65I,EAAY/4I,IAG/Cod,KAAKxK,KAAK7I,YAAc/J,EACxBod,KAAKjT,gBAAgB86G,eAAgB,GAEzC7nG,KAAKxK,KAAKmP,SAEV3E,KAAKxK,KAAK2uH,qBACVnkH,KAAKxK,KAAK7I,YAAY9C,OAAO,kBAAmBmW,KAAKxK,KAAK2uH,uBAEpDnkH,KAAKxK,KAAK2uH,sBAAwBnkH,KAAKxK,KAAK7I,YAAYtJ,IAAI,oBAAsB2c,KAAKxK,KAAK+uH,mBAClGvkH,KAAKxK,KAAK7I,YAAY9C,OAAO,mBAAmB,IAE1CmW,KAAKxK,KAAK2uH,sBAAwBnkH,KAAKxK,KAAK7I,YAAYtJ,IAAI,oBAClE2c,KAAKxK,KAAK7I,YAAY9C,OAAO,kBAAmBmW,KAAKxK,KAAKomI,mBAItE/F,EAAYxgI,UAAUqlI,4BAA8B,SAAU7oE,OACxC,KAAdA,IAAwBA,GAAY,EACxC,KAAK,GAAIt3E,GAAI,EAAGA,EAAIylB,KAAK7jB,UAAW5B,IAAK,CACrC,GAAIc,GAAO2kB,KAAK5jB,QAAQ7B,EACxBc,GAAKs3D,YAAY4lB,UAAYv4D,KAAKu4D,UAClCl9E,EAAKs3D,YAAYif,eAAeC,GAC5BA,IACIx2E,EAAKgB,gBAAgBgH,IAAI,kBAClBhI,GAAKgB,gBAAgBqX,KAAKk2F,OACjCvuG,EAAKgB,gBAAgBuX,UAAW,GAEpCvY,EAAKs3D,YAAYhuC,YAI7BkxH,EAAYxgI,UAAUwmI,kBAAoB,WACtC,GAAI77H,KAAK7jB,UAAY,EACjB,IAAK,GAAID,GAAQ,EAAGA,EAAQ8jB,KAAK42H,WAAY16I,IAAS,CAClD,GAAIb,GAAO2kB,KAAK5jB,QAAQF,EACxB,IAAIb,EACA,IACI,GAAIo/C,GAAWp/C,EAAKo/C,QACpBA,GAASE,OACTF,EAASyN,gBAAgB,IACzBzN,EAASyC,cAAc,EAAG,EAAG7hD,EAAKS,KAAK,GAAI,MAAO,GAAI6mD,KAAU,IAAK,IAAK,OAC1ElI,EAASK,UACTL,EAASE,OACTF,EAASyN,gBAAgB,GACzB,IAAItyC,GAAO,GAAIc,IAAgBC,gBAAcC,UAAW,GAAIlE,eAAa4D,SACrE0Q,EAAS,GAAIlC,IAAgB7G,mBAAiB+nC,OAAQxgC,uBAAqBw9B,OAC/EvI,GAASmH,WAAW,2DAA4DhsC,GAAO,EAAG,EAAGva,EAAKS,KAAK,GAAI,OAAQ,KAAM,GAAI6mD,KAAU,EAAG,EAAG,IAAK37B,GAClJyzB,EAASK,UAEb,MAAOh9C,OAKvB+3I,EAAYxgI,UAAUymI,gBAAkB,SAAUC,EAAgBjkG,EAAYC,EAAUqY,GACpF,GAAItY,EAAaC,GAAYD,GAAcikG,EAAe5/I,UACtD,KAAM,IAAIjB,OAAM,gGAEpB8kB,MAAKssH,aAAayP,EAAgBjkG,EAAYC,EAAUqY,IAE5DylF,EAAYxgI,UAAUi3H,aAAe,SAAUyP,EAAgBjkG,EAAYC,EAAUqY,GACjF,GAAI4rF,GAEAlL,EADAmL,EAA0B,CAE9B,QAAuB,KAAZ7rF,GAA0D,gBAAxBA,GAAQ8rF,YAA0B,CAC3E,GAAI9rF,EAAQ8rF,YAAcl8H,KAAK7jB,UAC3B,KAAM,IAAIjB,OAAM,oCAEpB8kB,MAAKqrH,aAAej7E,EAAQ8rF,YAEhC,GAAI3Q,GAAgB,GAAIrjG,IACxB,KAAKloB,KAAKsoD,iBACN,IAAK,GAAIpsE,GAAQ,EAAGA,EAAQ6/I,EAAe5/I,UAAWD,IAAS,CAC3D,GAAIigJ,GAAaJ,EAAe3/I,QAAQF,EACxCqvI,GAAczpI,IAAIq6I,EAAW9/I,gBAAiB,MAGtD,GAAIwtI,EACC7pH,MAAKs7H,oBACNt7H,KAAKs7H,kBAAoB,GAAIpzG,MAE5B6zG,EAAeK,YAChBL,EAAeK,UAAYtyI,KAE3BkW,KAAKs7H,kBAAkBj4I,IAAI04I,EAAeK,WAC1CvS,EAAS7pH,KAAKs7H,kBAAkB93I,IAAIu4I,EAAeK,YAGnDvS,EAAS,GAAIyB,IAAgBtrH,KAAKjT,gBAAiBiT,KAAM+7H,EAAgBxQ,EAAen7E,GACxFpwC,KAAKs7H,kBAAkBx5I,IAAIi6I,EAAeK,UAAWvS,GAEzD,IAAIwS,IAAkB,IAChBr8H,KAAKsoD,kBAAoByzE,EAAenoD,SAASC,mBAAmBxwF,IAAI,qBAAwC,KAAZ+sD,IAA4BA,EAAQw8E,qBAC1IyP,GAAkB,EAClBL,EAAqBD,EAAenoD,SAASC,mBAAmBrwF,IAAI,gBACpEstI,EAAe,GAAI3tI,IAAe6c,KAAKjT,iBACvC88H,EAAOpyE,aAAaskF,EAAgBjL,EAAckL,EAAoBA,EAAoB,eAAgB,KAAM,MAChHlL,EAAal9H,UAAW,EAE5B,KAAK,GAAIrZ,GAAIu9C,EAAYv9C,GAAKw9C,EAAUx9C,IAAK,CACzC,GAAIc,GAAO0gJ,EAAe3/I,QAAQ7B,EAClCwhJ,GAAevmI,KAAKo8D,eAAemqE,EAAe1/D,QAAShhF,GACvDA,EAAKs3D,YAAYroD,MAAQ,IACzBjP,EAAKs3D,YAAYif,eAAemqE,EAAe1/D,SAC3C0/D,EAAe1/D,UACXhhF,EAAKgB,gBAAgBgH,IAAI,kBAClBhI,GAAKgB,gBAAgBqX,KAAKk2F,OACjCvuG,EAAKgB,gBAAgBuX,UAAW,GAEpCvY,EAAKs3D,YAAYhuC,WAGrBo3H,EAAe5F,iBACftM,EAAOyC,aAAajxI,EAAM2kB,KAAKqrH,aAAcgR,EAAiBr8H,KAAKsoD,iBAAkBlY,EAAS2rF,EAAe5F,kBAG7GtM,EAAOyC,aAAajxI,EAAM2kB,KAAKqrH,aAAcgR,EAAiBr8H,KAAKsoD,iBAAkBlY,GAEzF6rF,IACiC,gBAAtBj8H,MAAKqrH,gBACVrrH,KAAKqrH,aAGVrrH,KAAKsoD,kBACNuhE,EAAOsK,iBAAiB4H,GAE5BlS,EAAOqJ,iBAAiB6I,EAAgBE,GACxCpS,EAAO8G,gCACF0L,IAAoBr8H,KAAKsoD,sBAAyC,KAAZlY,IAA4BA,EAAQw8E,oBAC3F/C,EAAOgH,cAAcC,GAAc,GAEvCjH,EAAO2K,iBACPx0H,KAAKsoD,kBAAmB,GAE5ButE,EAAYxgI,UAAUinI,WAAa,SAAUv3H,EAAMlE,EAAMuvC,GACrD,GAAoB,gBAATrrC,GACP/E,KAAKsoD,kBAAmB,EACpBznD,YAAgBqqH,IAChBlrH,KAAKssH,aAAatsH,KAAM+E,EAAMA,EAAMlE,GAGpCb,KAAKssH,aAAatsH,KAAM+E,EAAMA,OAGjC,IAAIA,YAAgB22B,KAAW76B,YAAgBg1H,GAAa,CAC7D,GAAI35I,GAAQ6oB,EAAK2+B,UACjB1jC,MAAK87H,gBAAgBj7H,EAAM3kB,EAAOA,EAAOk0D,KAoBjDylF,EAAYxgI,UAAUW,MAAQ,WAC1BgK,KAAKu8H,mBAAmB,IAoB5B1G,EAAYxgI,UAAUknI,mBAAqB,SAAUC,GACjD,GAAIrgJ,GAAY6jB,KAAK7jB,SACrB,MAAI6jB,KAAKy8H,YAActgJ,GAAaqgJ,GAAeA,EAAc,GAU7D,KAAM,IAAIthJ,OAAM,uGARhB,KAAK,GADDwhJ,GAAa,EACRC,EAAY,EAAGA,EAAYxgJ,EAAWwgJ,GAAaH,EAAa,CACrE,GAAIzkG,GAAWr+C,KAAKY,IAAIqiJ,EAAYH,EAAc,EAAGrgJ,EAAY,GAC7DygJ,EAAU58H,KAAK68H,qBAAqBF,EAAW5kG,EACnD/3B,MAAK88H,kBAAkBJ,EAAYE,GACnCF,MA0BZ7G,EAAYxgI,UAAU0nI,kBAAoB,SAAUC,GAChD,GAAI7gJ,GAAY6jB,KAAK7jB,SACrB,IAAI6jB,KAAKy8H,WAEL,IAAK,GADDC,GAAa,EACRniJ,EAAI,EAAGA,EAAIyiJ,EAAO5iJ,OAAQG,IAAK,CACpC,GAAI0iJ,GAAQD,EAAOviJ,OAAOC,SAASH,EAAEI,WAAY,IACjD,IAAI2G,MAAMuB,QAAQo6I,IAAUA,EAAM7iJ,OAAS,EACvC,KAAM,IAAIc,OAAM,sEAEpB,IAAIhB,GAAQ+iJ,EAAM,GACd9iJ,EAAM8iJ,EAAM,EAChB,IAAI/iJ,EAAQ,GAAKC,EAAM,GAAKD,GAASiC,GAAahC,GAAOgC,GAAajC,EAAQC,EAC1E,KAAM,IAAIe,OAAM,yDAEpB,IAAI0hJ,GAAU58H,KAAK68H,qBAAqB3iJ,EAAOC,EAC/C6lB,MAAK88H,kBAAkBJ,EAAYE,GACnCF,MAIZ7G,EAAYxgI,UAAUwnI,qBAAuB,SAAU/kG,EAAYC,GAC/D/3B,KAAKm2H,kBAAmB,CAExB,KAAK,GADD7qI,GAAW,GAAIuqI,GAAY53B,IACtB1jH,EAAIu9C,EAAYv9C,GAAKw9C,EAAUx9C,IAAK,CACzC,GAAIc,GAAO2kB,KAAK5jB,QAAQ7B,EACxB+Q,GAASgxI,WAAWjhJ,EAAM2kB,MAE9B1U,EAASssI,WAAW,EACpB,IAAIz4I,GAASmM,EAASqvC,MAEtB,OADArvC,GAAS+vI,UACFl8I,GAEX02I,EAAYxgI,UAAUynI,kBAAoB,SAAUJ,EAAYE,GAC5D,GAAIM,GAAO,GAAIC,IAA0BT,EAAYE,EACrD58H,MAAKy8H,WAAWz8H,KAAMk9H,IAEnBrH,KAoBP8E,GAA6C,WAC7C,QAASA,KACL36H,KAAKyJ,QAAUtL,aAAW08H,KAC1B76H,KAAKo9H,mBAAoB,EAkG7B,MAhGAhoI,QAAO4Q,eAAe20H,EAA4BtlI,UAAW,cAoBzD7R,IAAK,WACD,MAAOwc,MAAKyJ,SAqBhB3nB,IAAK,SAAUklB,GACXhH,KAAKyJ,QAAUzC,GAEnBf,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe20H,EAA4BtlI,UAAW,oBAoBzD7R,IAAK,WACD,MAAOwc,MAAKo9H,mBAqBhBt7I,IAAK,SAAUtI,GACXwmB,KAAKo9H,kBAAoB5jJ,GAE7BysB,YAAY,EACZC,cAAc,IAEXy0H,KAoBPK,GAA4C,WAC5C,QAASA,KACLh7H,KAAKyJ,QAAUtL,aAAW08H,KAC1B76H,KAAKq9H,YAAc,GACnBr9H,KAAKkuC,qBAAsB,EAkJ/B,MAhJA94C,QAAO4Q,eAAeg1H,EAA2B3lI,UAAW,cAoBxD7R,IAAK,WACD,MAAOwc,MAAKyJ,SAqBhB3nB,IAAK,SAAUklB,GACXhH,KAAKyJ,QAAUzC,GAEnBf,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeg1H,EAA2B3lI,UAAW,cAoBxD7R,IAAK,WACD,MAAOwc,MAAKq9H,aAqBhBv7I,IAAK,SAAU0H,GACXwW,KAAKq9H,YAAc7zI,GAEvByc,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeg1H,EAA2B3lI,UAAW,sBAoBxD7R,IAAK,WACD,MAAOwc,MAAKkuC,qBAqBhBpsD,IAAK,SAAUtI,GACXwmB,KAAKkuC,oBAAsB10D,GAE/BysB,YAAY,EACZC,cAAc,IAEX80H,KAwBP1G,GAAiC,WAsBjC,QAASA,KACLt0H,KAAKwH,OAAS,IAAK,KACnBxH,KAAKs9H,gBAAiB,EACtBt9H,KAAKupF,aAAe/qF,qBAAmBirF,SACvCzpF,KAAKwH,OAAS,IAAK,KACnBxH,KAAKu9H,SAAW,GAAIC,IACpBx9H,KAAKipF,UAAYvtG,mBAAiBme,OAmOtC,MAjOAzE,QAAO4Q,eAAesuH,EAAgBj/H,UAAW,eAsB7C7R,IAAK,WACD,MAAOwc,MAAKupF,cAqBhBznG,IAAK,SAAUtI,GACXwmB,KAAKs9H,gBAAiB,EAClBt9H,KAAKupF,eAAiB/vG,IACtBwmB,KAAKupF,aAAe/vG,EACpBwmB,KAAKy9H,YAAYjkJ,KAGzBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAesuH,EAAgBj/H,UAAW,QAkB7C7R,IAAK,WACD,MAAOwc,MAAKwH,OAuBhB1lB,IAAK,SAAUtI,GACPwmB,KAAKs9H,eACLt9H,KAAKy9H,YAAYjkJ,IAGjBwmB,KAAKwH,MAAQhuB,EACbwmB,KAAK09H,uBAGbz3H,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAesuH,EAAgBj/H,UAAW,WAgB7C7R,IAAK,WACD,MAAOwc,MAAKu9H,UAqBhBz7I,IAAK,SAAUtI,GACXwmB,KAAKu9H,SAAW/jJ,GAEpBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAesuH,EAAgBj/H,UAAW,YAgB7C7R,IAAK,WACD,MAAOwc,MAAKipF,WAqBhBnnG,IAAK,SAAUtI,GACXwmB,KAAKipF,UAAYzvG,EACbA,GAAS,IACTwmB,KAAKipF,UAAazvG,EAAQ,IAGlCysB,YAAY,EACZC,cAAc,IAElBouH,EAAgBj/H,UAAUooI,YAAc,SAAUjkJ,GAC9C,GAAImkJ,GACAhyD,CACArqF,OAAMuB,QAAQrJ,IACdmkJ,EAAkB39H,KAAKu0H,YACvB5oD,EAAWnyF,IAGXmkJ,EAAkBnkJ,EAClBmyF,EAAW3rE,KAAKwH,OAEhBm2H,IAAoBn/H,qBAAmBirF,SACvCzpF,KAAKwH,OAAS9tB,KAAKY,IAAIqxF,EAAS,GAAIA,EAAS,IAAKjyF,KAAKW,IAAIsxF,EAAS,GAAIA,EAAS,KAGjF3rE,KAAKwH,OAAS9tB,KAAKW,IAAIsxF,EAAS,GAAIA,EAAS,IAAKjyF,KAAKY,IAAIqxF,EAAS,GAAIA,EAAS,MAGzF2oD,EAAgBj/H,UAAUqoI,mBAAqB,WAC3C19H,KAAKupF,aAAgBvpF,KAAKwH,MAAM,IAAMxH,KAAKwH,MAAM,GAAMhJ,qBAAmBirF,SAAWjrF,qBAAmBgrF,WAE5G8qC,EAAgBj/H,UAAUi2F,eAAiB,WAGvC,OAFYtrF,KAAKwH,MAAM,IAAMxH,KAAKu9H,SAAS9/C,MAAQz9E,KAAKu9H,SAAS3/C,QACpD59E,KAAKwH,MAAM,IAAMxH,KAAKu9H,SAAS5/C,KAAO39E,KAAKu9H,SAAS1/C,WAG9Dy2C,KAwBPkJ,GAA4B,WAC5B,QAASA,GAAWI,GAEZ59H,KAAKy9E,MAAQz9E,KAAK49E,OAAS59E,KAAK29E,KAAO39E,KAAK69E,YAD7B,KAAR+/C,EAC+C,GAGAA,EAuN9D,MApNAxoI,QAAO4Q,eAAew3H,EAAWnoI,UAAW,QAgBxC7R,IAAK,WACD,MAAOwc,MAAKy9E,OA8BhB37F,IAAK,SAAUtI,GACXwmB,KAAKy9E,MAAQjkG,GAEjBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAew3H,EAAWnoI,UAAW,SAgBxC7R,IAAK,WACD,MAAOwc,MAAK49E,QA8BhB97F,IAAK,SAAUtI,GACXwmB,KAAK49E,OAASpkG,GAElBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAew3H,EAAWnoI,UAAW,OAgBxC7R,IAAK,WACD,MAAOwc,MAAK29E,MA8BhB77F,IAAK,SAAUtI,GACXwmB,KAAK29E,KAAOnkG,GAEhBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAew3H,EAAWnoI,UAAW,UAgBxC7R,IAAK,WACD,MAAOwc,MAAK69E,SA8BhB/7F,IAAK,SAAUtI,GACXwmB,KAAK69E,QAAUrkG,GAEnBysB,YAAY,EACZC,cAAc,IAEXs3H,KAmBPL,GAA2C,WAoB3C,QAASA,GAA0BT,EAAYE,GAC3C58H,KAAKjG,OAAS2iI,EACd18H,KAAK69H,SAAWjB,EAoDpB,MAlDAxnI,QAAO4Q,eAAem3H,EAA0B9nI,UAAW,WAmBvD7R,IAAK,WACD,MAAOwc,MAAK69H,UAEhB53H,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAem3H,EAA0B9nI,UAAW,SAmBvD7R,IAAK,WACD,MAAOwc,MAAKjG,QAEhBkM,YAAY,EACZC,cAAc,IAEXi3H,KC7wEPW,GAA8B,WAC9B,QAASA,GAAaviJ,EAAMsf,EAAKrB,EAAOD,GACpCyG,KAAKy9E,MAAQ,EACbz9E,KAAK49E,OAAS,EACd59E,KAAK29E,KAAO,EACZ39E,KAAK69E,QAAU,MACK,KAATtiG,GACPykB,KAAKy9E,MAAQ,GACbz9E,KAAK49E,OAAS,GACd59E,KAAK29E,KAAO,GACZ39E,KAAK69E,QAAU,KAGf79E,KAAKy9E,MAAQliG,EACbykB,KAAK49E,OAASpkF,EACdwG,KAAK29E,KAAO9iF,EACZmF,KAAK69E,QAAUtkF,GAGvB,MAAOukI,MCKPC,GAAiC,WA0BjC,QAASA,GAAgB/2H,GACrBhH,KAAKg+H,WAAY,EACjBh+H,KAAKi+H,mBACDj3H,GACAhH,KAAKk+H,MAAQl3H,EAAOk3H,MACpBl+H,KAAKm+H,OAASn3H,EAAOm3H,OACrBn+H,KAAKo+H,eAAiBp3H,EAAOo3H,eAC7Bp+H,KAAKg+H,UAAYh3H,EAAOg3H,YAGxBh+H,KAAKm+H,OAASv+H,gBAAcy+H,SAC5Br+H,KAAKk+H,MAAQr+H,qBAAmBy+H,SA2NxC,MAxNAlpI,QAAO4Q,eAAe+3H,EAAgB1oI,UAAW,UA0B7C7R,IAAK,WACD,MAAOwc,MAAKqJ,SA4BhBvnB,IAAK,SAAUtI,GACXwmB,KAAKqJ,QAAU7vB,GAEnBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe+3H,EAAgB1oI,UAAW,SA4B7C7R,IAAK,WACD,MAAOwc,MAAKu+H,QA2BhBz8I,IAAK,SAAUtI,GACXwmB,KAAKu+H,OAAS/kJ,GAElBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe+3H,EAAgB1oI,UAAW,kBA0B7C7R,IAAK,WACD,MAAOwc,MAAKi+H,iBA2BhBn8I,IAAK,SAAUtI,GACXwmB,KAAKi+H,gBAAkBzkJ,EACvBwmB,KAAKg+H,WAAY,GAErB/3H,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe+3H,EAAgB1oI,UAAW,qBA0B7C7R,IAAK,WACD,MAAOwc,MAAKg+H,WAEhB/3H,YAAY,EACZC,cAAc,IAEX63H,KAsBPS,GAAiC,WAwBjC,QAASA,GAAgBnjJ,EAAMif,GAC3B0F,KAAKxF,MAAQnf,EACb2kB,KAAKzF,QAAUD,EA8DnB,MA5DAlF,QAAO4Q,eAAew4H,EAAgBnpI,UAAW,QAwB7C7R,IAAK,WACD,MAAOwc,MAAKxF,OAEhByL,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAew4H,EAAgBnpI,UAAW,UAwB7C7R,IAAK,WACD,MAAOwc,MAAKzF,SAEhB0L,YAAY,EACZC,cAAc,IAEXs4H,KAGPC,GAAmC,WACnC,QAASA,KACLz+H,KAAK0+H,aAAc,EACnB1+H,KAAK2+H,YAAc,EACnB3+H,KAAK4+H,QAAU,EAEnB,MAAOH,MAGPI,GAAsC,WACtC,QAASA,MAET,MAAOA,MCrZPz4H,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGzgB,GAI7B,OAHAwgB,EAAgBjR,OAAOmR,iBAChBC,uBAA2BllB,QAAS,SAAUglB,EAAGzgB,GAAKygB,EAAEE,UAAY3gB,IACvE,SAAUygB,EAAGzgB,GAAK,IAAK,GAAI4gB,KAAK5gB,GAAOA,EAAE6gB,eAAeD,KAAIH,EAAEG,GAAK5gB,EAAE4gB,MACpDH,EAAGzgB,GAE5B,OAAO,UAAUygB,EAAGzgB,GAEhB,QAAS8gB,KAAO3G,KAAK4G,YAAcN,EADnCD,EAAcC,EAAGzgB,GAEjBygB,EAAEjR,UAAkB,OAANxP,EAAauP,OAAOkI,OAAOzX,IAAM8gB,EAAGtR,UAAYxP,EAAEwP,UAAW,GAAIsR,QA2BnFm4H,GAA2B,SAAU92H,GAErC,QAAS82H,GAAUC,GACf,GAAI72H,GAAQF,EAAO1S,KAAK0K,OAASA,IAQjC,OAPAkI,GAAM82H,cAAe,EAEjB92H,EAAM+2H,iBAAiBF,GAKpB72H,EAuEX,MAjFA9B,IAAU04H,EAAW92H,GAYrB82H,EAAUzpI,UAAU4pI,iBAAmB,SAAUF,GAC7C,GAAI9+I,GAAY,GAAIvB,YAAWqgJ,EAAc3kJ,OACvB,QAAlB2kJ,OAAmD,KAAlBA,GAA0D,gBAAlBA,GACzE9+I,EAAYuB,EAAQu9I,GAAe,GAE9BA,YAAyBrgJ,cAC9BuB,EAAY8+I,GAEhB/+H,KAAKk/H,SAAWnkJ,EAAYkF,GAC5B+f,KAAK1kB,OAAS0kB,KAAKk/H,SAAS36G,QAC5BvkB,KAAK/b,MAAQ+b,KAAKk/H,SAASj2H,OAC3BjJ,KAAKisF,kBAAoBjsF,KAAKk/H,SAASjzC,mBAE3C6yC,EAAUzpI,UAAU2oC,MAAQ,WAGxB,GAFAh+B,KAAKg/H,cAAe,EACpBh/H,KAAKugC,aAAevgC,KAAKk/H,SAASlyC,sBAC9BhtF,KAAKk/H,UAAYl/H,KAAKk/H,mBAAoB/jJ,IAAa,CACvD,GAAIH,GAAUglB,KAAKk/H,QACnBl/H,MAAKwgC,YAAcxlD,EAAQwlD,YACvBxlD,EAAQ47G,UACJ57G,EAAQu+G,aACRv5F,KAAKY,iBAITZ,KAAKY,qBAITZ,MAAKY,kBAGbk+H,EAAUzpI,UAAUuL,eAAiB,WACjC,GAGIu+H,GAFAv8I,EADSod,KAAKugC,aACM39C,WACpByC,EAAQzC,EAAWY,IAAI,aAQ3B,IANmB,eAAf6B,EAAMmE,KACN21I,EAAaz/H,iBAAeuB,KAER,eAAf5b,EAAMmE,OACX21I,EAAaz/H,iBAAewB,WAE5BlB,KAAKk/H,mBAAoB/jJ,IAAa,CACtC,GAAIopD,GAAKvkC,KAAKk/H,SAAS3lC,gBACL,KAAPh1D,GAA6B,OAAPA,IAC7B46F,EAAaz/H,iBAAe0/H,SAGpC,OAAQD,GACJ,IAAKz/H,kBAAeuB,KAChBre,EAAWiH,OAAO,UAAW,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAChEjH,EAAWiH,OAAO,aAAclD,GAASnD,IAAI,cAC7C,MACJ,KAAKkc,kBAAewB,UAChBte,EAAWiH,OAAO,UAAW,EAAK,IAClCjH,EAAWiH,OAAO,aAAclD,GAASnD,IAAI,cAC7C,MACJ,KAAKkc,kBAAesB,IAChBpe,EAAWiH,OAAO,UAAW,EAAK,EAAK,EAAK,EAAK,EAAK,IACtDjH,EAAWiH,OAAO,aAAclD,GAASnD,IAAI,aAC7C,MACJ,KAAKkc,kBAAe0/H,QAChBx8I,EAAWiH,OAAO,aAAcmW,KAAKk/H,SAAS3lC,eAMnDulC,GACT5kG,ICnGEmlG,GAA6B,WA+B7B,QAASA,GAAY5wI,EAAMyoI,GAEvB,GADAl3H,KAAKs/H,YAAc,EACN,OAAT7wI,OAAiC,KAATA,EACxB,KAAM,IAAIvT,OAAM,oCAEpB8kB,MAAKkN,MAAQze,EACTyoI,IACIA,EAASthI,OACToK,KAAKwJ,MAAQ0tH,EAASthI,MAEtBshI,EAASlwH,SACThH,KAAKswD,cAAgB4mE,EAASlwH,QAE9BkwH,EAAS75F,MACTr9B,KAAKo3B,KAAO8/F,EAAS75F,KAErB65F,EAAS55F,QACTt9B,KAAKm3B,OAAS+/F,EAAS55F,QAocnC,MAhcAloC,QAAO4Q,eAAeq5H,EAAYhqI,UAAW,SA4BzC7R,IAAK,WACD,MAAOwc,MAAKm3B,QA6BhBr1C,IAAK,SAAUtI,GACXwmB,KAAKm3B,OAAS39C,GAElBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeq5H,EAAYhqI,UAAW,OA4BzC7R,IAAK,WACD,MAAOwc,MAAKo3B,MA6BhBt1C,IAAK,SAAUtI,GACXwmB,KAAKo3B,KAAO59C,GAEhBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeq5H,EAAYhqI,UAAW,QA4BzC7R,IAAK,WACD,MAAOwc,MAAKwJ,OA6BhB1nB,IAAK,SAAUtI,GACXwmB,KAAKwJ,MAAQhwB,GAEjBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeq5H,EAAYhqI,UAAW,gBA4BzC7R,IAAK,WACD,MAAOwc,MAAKswD,eA6BhBxuE,IAAK,SAAUtI,GACXwmB,KAAKswD,cAAgB92E,GAEzBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeq5H,EAAYhqI,UAAW,QA0BzC7R,IAAK,WACD,MAAOwc,MAAKkN,OA6BhBprB,IAAK,SAAUtI,GACXwmB,KAAKkN,MAAQ1zB,GAEjBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeq5H,EAAYhqI,UAAW,cA0BzC7R,IAAK,WACD,MAAOwc,MAAKs/H,aA0BhBx9I,IAAK,SAAUtI,GACXwmB,KAAKs/H,YAAc9lJ,GAEvBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAeq5H,EAAYhqI,UAAW,WAgCzC7R,IAAK,WACD,MAAOwc,MAAKu/H,UAgChBz9I,IAAK,SAAUtI,GACXwmB,KAAKu/H,SAAW/lJ,GAEpBysB,YAAY,EACZC,cAAc,IAEXm5H,KAsBPG,GAAuC,WACvC,QAASA,GAAsBC,GAC3B,GAAIv3H,GAAQlI,IACPA,MAAK0/H,aACN1/H,KAAK0/H,eAELD,GACAA,EAAMpzI,QAAQ,SAAUE,GACpB2b,EAAM5kB,IAAI,GAAI+7I,IAAY9yI,MAiStC,MA7RA6I,QAAO4Q,eAAew5H,EAAsBnqI,UAAW,SA0BnD7R,IAAK,WACD,MAAOwc,MAAK0/H,WAAWtlJ,QAE3B6rB,YAAY,EACZC,cAAc,IAElBs5H,EAAsBnqI,UAAU/R,IAAM,SAAUiJ,EAAMozI,GAClD,IAAIpzI,EAOA,KAAM,IAAIrR,OAAM,0BANhB8kB,MAAK0/H,WAAW/iJ,KAAK4P,GACjBozI,IACApzI,EAAKqzI,WAAaD,IAiC9BH,EAAsBnqI,UAAUrb,GAAK,SAAUkC,GAC3C,GAAc,OAAVA,EACA,KAAM,IAAIhB,OAAM,2BAGpB,OADW8kB,MAAK0/H,WAAWjlJ,OAAOC,SAASwB,EAAMvB,WAAY,MAoCjE6kJ,EAAsBnqI,UAAU2mE,OAAS,SAAUzvE,GAC/C,IAAKA,EACD,KAAM,IAAIrR,OAAM,0BAGpB,KAAK,GADD84F,IAAQ,EACHz5F,EAAI,EAAGA,EAAIylB,KAAK0/H,WAAWtlJ,OAAQG,IACxC,GAAIylB,KAAK0/H,WAAWjlJ,OAAOC,SAASH,EAAEI,WAAY,OAAS4R,EAAM,CAC7DynF,GAAQ,EACRh0E,KAAK0/H,WAAW5zF,OAAOrxD,OAAOC,SAASH,EAAEI,WAAY,IAAK,EAC1D,OAGR,IAAKq5F,EACD,KAAM,IAAI94F,OAAM,uDAmCxBskJ,EAAsBnqI,UAAU65E,SAAW,SAAUhzF,GACjD,GAAIA,EAAQ,GAAKA,GAAS8jB,KAAK0/H,WAAWtlJ,OACtC,KAAM,IAAIc,OAAM,0DAEpB8kB,MAAK0/H,WAAW5zF,OAAO5vD,EAAO,IAiClCsjJ,EAAsBnqI,UAAUgsD,MAAQ,WACpCrhD,KAAK0/H,eAsCTF,EAAsBnqI,UAAUxE,OAAS,SAAU3U,EAAOqQ,EAAMozI,GAC5D,GAAIzjJ,EAAQ,GAAKA,EAAQ8jB,KAAK0/H,WAAWtlJ,OACrC,KAAM,IAAIc,OAAM,+DAEpB,KAAKqR,EACD,KAAM,IAAIrR,OAAM,uBAEhBykJ,KACApzI,EAAKqzI,WAAaD,GAEtB3/H,KAAK0/H,WAAW5zF,OAAO5vD,EAAO,EAAGqQ,IAoCrCizI,EAAsBnqI,UAAU9T,QAAU,SAAUgL,GAChD,IAAKA,EACD,KAAM,IAAIrR,OAAM,0BAEpB,OAAO8kB,MAAK0/H,WAAWn+I,QAAQgL,IAE5BizI,KCx0BPp5H,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGzgB,GAI7B,OAHAwgB,EAAgBjR,OAAOmR,iBAChBC,uBAA2BllB,QAAS,SAAUglB,EAAGzgB,GAAKygB,EAAEE,UAAY3gB,IACvE,SAAUygB,EAAGzgB,GAAK,IAAK,GAAI4gB,KAAK5gB,GAAOA,EAAE6gB,eAAeD,KAAIH,EAAEG,GAAK5gB,EAAE4gB,MACpDH,EAAGzgB,GAE5B,OAAO,UAAUygB,EAAGzgB,GAEhB,QAAS8gB,KAAO3G,KAAK4G,YAAcN,EADnCD,EAAcC,EAAGzgB,GAEjBygB,EAAEjR,UAAkB,OAANxP,EAAauP,OAAOkI,OAAOzX,IAAM8gB,EAAGtR,UAAYxP,EAAEwP,UAAW,GAAIsR,QAoCnFk5H,GAAyB,WACzB,QAASA,KACL7/H,KAAKs/H,YAAc,EACnBt/H,KAAK8/H,QAAU,GACf9/H,KAAK+/H,WAAajgI,yBAAuBvkB,KACzCykB,KAAKggI,WAAa,IAClBhgI,KAAKigI,QAAU,IACfjgI,KAAKkgI,kBAAmB,EACxBlgI,KAAKmgI,cAAgB,EACrBngI,KAAKwH,OAAS,EAAG,GACjBxH,KAAK0oD,aAAe,GAAIhyD,IAAgBC,gBAAcC,UAAW,GAkpBrE,MAhpBAxB,QAAO4Q,eAAe65H,EAAQxqI,UAAW,SA4BrC7R,IAAK,WACD,MAAOwc,MAAKm3B,QA2BhBr1C,IAAK,SAAUtI,GACXwmB,KAAKm3B,OAAS39C,GAElBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,OAyBrC7R,IAAK,WACD,MAAOwc,MAAKo3B,MA4BhBt1C,IAAK,SAAUtI,GACXwmB,KAAKo3B,KAAO59C,GAEhBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,QA0BrC7R,IAAK,WACD,MAAOwc,MAAKwJ,OA4BhB1nB,IAAK,SAAUtI,GACXwmB,KAAKwJ,MAAQhwB,GAEjBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,gBA0BrC7R,IAAK,WACD,MAAOwc,MAAKswD,eA+BhBxuE,IAAK,SAAUtI,GACXwmB,KAAKswD,cAAgB92E,GAEzBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,UA0BrC7R,IAAK,WACD,MAAOwc,MAAK8/H,SA2BhBh+I,IAAK,SAAUtI,GACXwmB,KAAK8/H,QAAUtmJ,GAEnBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,cA0BrC7R,IAAK,WACD,MAAOwc,MAAKs/H,aA2BhBx9I,IAAK,SAAUtI,GACXwmB,KAAKs/H,YAAc9lJ,GAEvBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,aA0BrC7R,IAAK,WACD,MAAOwc,MAAKggI,YA2BhBl+I,IAAK,SAAUtI,GACXwmB,KAAKggI,WAAaxmJ,GAEtBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,UACrC7R,IAAK,WACD,MAAOwc,MAAKigI,SAEhBn+I,IAAK,SAAUtI,GACXwmB,KAAKigI,QAAUzmJ,GAEnBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,mBAyBrC7R,IAAK,WACD,MAAOwc,MAAKkgI,kBA2BhBp+I,IAAK,SAAUtI,GACXwmB,KAAKkgI,iBAAmB1mJ,GAE5BysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,aAyBrC7R,IAAK,WACD,MAAOwc,MAAK+/H,YA2BhBj+I,IAAK,SAAUtI,GACXwmB,KAAK+/H,WAAavmJ,GAEtBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,SA0BrC7R,IAAK,WACD,MAAOwc,MAAKogI,iBAuBhBt+I,IAAK,SAAUtI,GACXwmB,KAAKogI,gBAAkB5mJ,GAE3BysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAe65H,EAAQxqI,UAAW,sBACrC7R,IAAK,WACD,MAAOwc,MAAK+/H,aAAejgI,yBAAuBtG,OAEtDyM,YAAY,EACZC,cAAc,IAElB25H,EAAQxqI,UAAUmlC,KAAO,SAAUz1B,EAAMlE,EAAMC,EAAMqvB,EAAMC,EAAMkZ,GAC7D,GAAIvkC,YAAgB22B,IAAS,CACzB,GAAI32B,EAAKzQ,OACL,MAAO0L,MAAKqgI,cAAct7H,EAAMlE,EAAMC,EAAMqvB,EAAMC,EAAMkZ,EAGxD,IAAKg3F,IAAiBtgI,MAAOm+H,OAAOp5H,EAAK01B,UAAW55B,EAAMC,EAAM,EAAG,QAIvE,IAAKw/H,IAAiBtgI,MAAOm+H,OAAOp5H,GAAOlE,EAAMC,EAAM,EAAG,KAGlE++H,EAAQxqI,UAAUgrI,cAAgB,SAAUt7H,EAAMlE,EAAMC,EAAMqvB,EAAMC,EAAMkZ,GACtE,GAAIikB,GAAY,GAAIsxE,GAmBpB,OAlBAtxE,GAAU/yD,MAAQuK,EACL,OAATorB,OAAiC,KAATA,GACxBo9B,EAAUhzD,SAAWsG,EAAMC,EAAM,EAAG,GACpCysD,EAAU9jD,QAAU,GAAIs0H,KAEH,gBAAT5tG,IACZo9B,EAAUhzD,SAAWsG,EAAMC,EAAMqvB,EAAMC,GAEnCm9B,EAAU9jD,QADV6/B,GAIoB,GAAIy0F,KAGvB5tG,YAAgB4tG,MACrBxwE,EAAUhzD,SAAWsG,EAAMC,EAAM,EAAG,GACpCysD,EAAU9jD,QAAU0mB,GAEjBnwB,KAAKqJ,QAAQkkD,IAExBsyE,EAAQxqI,UAAUgU,QAAU,SAAUkkD,GAClC,MAAO,IAAK+yE,IAAiBtgI,MAAOugI,eAAehzE,IAEhDsyE,KAwBPW,GAAgC,SAAUx4H,GAE1C,QAASw4H,GAAef,EAAOvI,GAC3B,GAAIhvH,GAAQF,EAAO1S,KAAK0K,OAASA,IA8CjC,OA7CAkI,GAAMu4H,aAAe,EAEjBv4H,EAAMk4H,gBADNX,GAIwB,GAAID,IAE5BtI,GACIA,EAASthI,OACTsS,EAAMsB,MAAQ0tH,EAASthI,MAEvBshI,EAASlwH,SACTkB,EAAMooD,cAAgB4mE,EAASlwH,QAE/BkwH,EAAS75F,MACTn1B,EAAMkvB,KAAO8/F,EAAS75F,KAEtB65F,EAAS55F,QACTp1B,EAAMivB,OAAS+/F,EAAS55F,OAExB45F,EAAS/wI,MACT+hB,EAAMunB,OAASynG,EAAS/wI,MAGxB+hB,EAAMunB,OAAS/zB,iBAAeC,QAE9Bu7H,EAASwJ,SACTx4H,EAAM43H,QAAU5I,EAASwJ,QAEzBxJ,EAAS0I,aACT13H,EAAMo3H,YAAcpI,EAAS0I,YAE7B1I,EAAS5xH,YACT4C,EAAM63H,WAAa7I,EAAS5xH,WAE5B4xH,EAASyJ,YACTz4H,EAAM83H,WAAa9I,EAASyJ,WAE5BzJ,EAAS0J,SACT14H,EAAM+3H,QAAU/I,EAAS0J,SAI7B14H,EAAMunB,OAAS/zB,iBAAeC,QAE3BuM,EAkIX,MAlLA9B,IAAUo6H,EAAgBx4H,GAkD1B5S,OAAO4Q,eAAew6H,EAAenrI,UAAW,SA0B5C7R,IAAK,WACD,MAAOwc,MAAKyvB,QA6BhB3tC,IAAK,SAAUtI,GACXwmB,KAAKyvB,OAASj2C,GAElBysB,YAAY,EACZC,cAAc,IAElB9Q,OAAO4Q,eAAew6H,EAAenrI,UAAW,eA0B5C7R,IAAK,WACD,MAAOwc,MAAKygI,cA2BhB3+I,IAAK,SAAUtI,GACX,GAAIA,GAAS,EACT,KAAM,IAAI0B,OAAM,yCAEpB8kB,MAAKygI,aAAejnJ,GAExBysB,YAAY,EACZC,cAAc,IAElBs6H,EAAenrI,UAAU+tG,WAAa,WAClC,MAAO7nG,IAAeyE,KAAKygI,aAAezgI,KAAKmgI,cAAengI,KAAKyvB,SAEhE+wG,GACTX,IAuBEgB,GAAkC,SAAU74H,GAE5C,QAAS64H,GAAiBpB,EAAOvI,GAC7B,GAAIhvH,GAAQF,EAAO1S,KAAK0K,OAASA,IA6CjC,OA3CIkI,GAAMk4H,gBADNX,GAIwB,GAAID,IAE5BtI,GACIA,EAASthI,OACTsS,EAAMsB,MAAQ0tH,EAASthI,MAEvBshI,EAASlwH,SACTkB,EAAMooD,cAAgB4mE,EAASlwH,QAE/BkwH,EAAS75F,MACTn1B,EAAMkvB,KAAO8/F,EAAS75F,KAEtB65F,EAAS55F,QACTp1B,EAAMivB,OAAS+/F,EAAS55F,OAExB45F,EAAS/wI,MACT+hB,EAAMunB,OAASynG,EAAS/wI,MAGxB+hB,EAAMunB,OAAS9vB,wBAAsBmhI,KAErC5J,EAASwJ,SACTx4H,EAAM43H,QAAU5I,EAASwJ,QAEzBxJ,EAAS0I,aACT13H,EAAMo3H,YAAcpI,EAAS0I,YAE7B1I,EAAS5xH,YACT4C,EAAM63H,WAAa7I,EAAS5xH,WAE5B4xH,EAASyJ,YACTz4H,EAAM83H,WAAa9I,EAASyJ,WAE5BzJ,EAAS0J,SACT14H,EAAM+3H,QAAU/I,EAAS0J,SAI7B14H,EAAMunB,OAAS9vB,wBAAsBmhI,KAElC54H,EAwFX,MAvIA9B,IAAUy6H,EAAkB74H,GAiD5B5S,OAAO4Q,eAAe66H,EAAiBxrI,UAAW,SA0B9C7R,IAAK,WACD,MAAOwc,MAAKyvB,QA6BhB3tC,IAAK,SAAUtI,GACXwmB,KAAKyvB,OAASj2C,GAElBysB,YAAY,EACZC,cAAc,IAElB26H,EAAiBxrI,UAAU0rI,eAAiB,WACxC,OAAQ/gI,KAAKyvB,QACT,IAAK9vB,yBAAsBmhI,KACvB,MAAO,GACX,KAAKnhI,yBAAsBlY,OACvB,MAAO,GACX,KAAKkY,yBAAsBqhI,SACvB,MAAO,GACX,KAAKrhI,yBAAsBnY,OACvB,MAAO,GACX,SACI,MAAO,KAGnBq5I,EAAiBxrI,UAAU4rI,MAAQ,SAAUxmG,EAAU12C,EAAGC,EAAGs5C,EAAOD,GAChE,GAAI7wC,GAAW,GAAIM,KAAa,EAAG,EAAGkT,KAAKwH,MAAM,GAAIxH,KAAKwH,MAAM,IAAKizB,EAAS1tC,iBAC1EuN,GAAU,EAAG,EAAG,EAAG,EACnB+iC,KACA/iC,EAAO,GAAKA,EAAO,GAAK+iC,EAAIp0B,OAC5B3O,EAAO,GAAKA,EAAO,GAAK+iC,EAAIp0B,QAEhCzc,EAASiuC,SAASmH,WAAW5hC,KAAK+gI,iBAAkB/gI,KAAKkhI,aAAc5mI,EAAQ+iC,EAAKC,GACpF7C,EAAS+D,aAAahyC,GAAYzI,EAAGA,EAAGC,EAAGA,EAAGC,MAAOuI,EAAS1Q,KAAK,GAAIR,OAAQkR,EAAS1Q,KAAK,MAE1F+kJ,GACThB,IAEEsB,GAA8B,WAC9B,QAASA,GAAa/oG,EAAMl8C,EAAOimH,GAC/BniG,KAAKohI,MAAQhpG,EACbp4B,KAAKjG,OAAS7d,EACd8jB,KAAKqhI,QAAUl/B,EAEnB,MAAOg/B,MAGPb,GAAkC,WAClC,QAASA,GAAiB38I,GACtBqc,KAAK8/H,QAAU,EACf9/H,KAAKshI,gBACLthI,KAAKuhI,gBAAkB,EACvBvhI,KAAKwhI,SAAU,EACfxhI,KAAKyhI,oBAAqB,EAC1BzhI,KAAK0hI,cAAgB,EACrB1hI,KAAKwH,OAAS,EAAG,GACjBxH,KAAKjG,OAAS,EACdiG,KAAK2hI,SAAWh+I,EA0epB,MAxeA28I,GAAiBjrI,UAAU8oI,OAAS,SAAU1jG,EAAUngC,GACpD0F,KAAK4hI,UAAYnnG,CACjB,IAAI8yB,GAAY,GAAIsxE,GACpBtxE,GAAUhzD,QAAUD,EACpBizD,EAAU9jD,QAAU,GAAIs0H,IACxBxwE,EAAU9jD,QAAQ00H,OAASv+H,gBAAciiI,QACzC7hI,KAAKugI,eAAehzE,IAExB+yE,EAAiBjrI,UAAUkrI,eAAiB,SAAUhzE,GAGlD,GAFAvtD,KAAK8hI,aAAev0E,EAAU/yD,MAC9BwF,KAAKzF,QAAUgzD,EAAUhzD,QAAQi9B,QAC7Bx3B,KAAK8hI,aAAc,CACnB,GAA6B,IAAzBv0E,EAAUhzD,QAAQ,IAAqC,IAAzBgzD,EAAUhzD,QAAQ,GAAU,CACtDoxE,EAAW3rE,KAAK8hI,aAAarnG,SAASunC,UAC1ChiE,MAAKzF,QAAQ,GAAKoxE,EAAS,GAAK3rE,KAAKzF,QAAQ,GAC7CyF,KAAKzF,QAAQ,GAAKoxE,EAAS,GAAK3rE,KAAKzF,QAAQ,GAEjDyF,KAAK4hI,UAAY5hI,KAAK8hI,aAAarnG,SAEvC,GAAIsnG,GAAa,GAAItD,GACrBsD,GAAWC,QAAS,EACpBD,EAAW/9I,EAAIgc,KAAKzF,QAAQ,GAC5ByF,KAAKiiI,SAAWjiI,KAAK2hI,SACrB3hI,KAAK8/H,QAAU9/H,KAAKiiI,SAASvB,OAC7B1gI,KAAKkiI,sBAAsBliI,KAAKiiI,UAC3BjiI,KAAKiiI,SAAS3kG,QACft9B,KAAK28B,cAAgB,GAAIgG,KAAU,EAAG,EAAG,KAExC3iC,KAAKiiI,SAASrsI,OACfoK,KAAK68B,aAAe78B,KAAKiiI,SAASv5E,cAElC1oD,KAAKiiI,mBAAoBzB,MACzBxgI,KAAKuhI,gBAAkBvhI,KAAKmiI,mBAAmBniI,KAAKiiI,SAAUjiI,KAAKshI,cAGvE,KADA,GAAIc,GAAY70E,EAAU9jD,QAAQ00H,SAAWv+H,gBAAciiI,SACnD7hI,KAAKwhI,UACTO,EAAW/9I,EAAIgc,KAAKzF,QAAQ,GAC5BwnI,EAAa/hI,KAAKqiI,cAAcN,IAC5BK,IAHc,CAUlB,GAJIpiI,KAAK8hI,eAAiB9hI,KAAKwhI,UAC3BxhI,KAAK8hI,aAAe9hI,KAAKyjC,aAAazjC,KAAK8hI,eAE/C9hI,KAAK4hI,UAAY5hI,KAAK8hI,aAAarnG,SACN,IAAzB8yB,EAAUhzD,QAAQ,IAAqC,IAAzBgzD,EAAUhzD,QAAQ,GAAU,CAC1D,GAAIoxE,GAAW3rE,KAAK8hI,aAAarnG,SAASunC,UAC1ChiE,MAAKzF,QAAQ,GAAKoxE,EAAS,GAAK3rE,KAAKzF,QAAQ,GAC7CyF,KAAKzF,QAAQ,GAAKoxE,EAAS,GAAK3rE,KAAKzF,QAAQ,GAE7CgzD,EAAU9jD,SAAW8jD,EAAU9jD,QAAQ64H,mBAAqBtiI,KAAKyhI,qBACjEzhI,KAAKzF,QAAUgzD,EAAU9jD,QAAQw0H,iBAGzCj+H,KAAKshI,eACL,IAAIiB,IAAeviI,KAAKzF,QAAQ,GAAIwnI,EAAW/9I,EAAGgc,KAAKzF,QAAQ,GAAIyF,KAAK0hI,eACpEviJ,EAAS,GAAIq/I,IAAgBx+H,KAAK8hI,aAAcS,EAIpD,OAHIviI,MAAKwiI,iBACLxiI,KAAKwiI,eAAep9H,SAAU,GAE3BjmB,GAEXmhJ,EAAiBjrI,UAAUgtI,cAAgB,SAAUN,GACjD,GAAIzmJ,GAAS,EACTmnJ,EAAkB,EAClBz+I,EAAIgc,KAAKzF,QAAQ,GACjBxW,EAAIic,KAAKzF,QAAQ,EAErB,KADAyF,KAAKwH,OAASxH,KAAKzF,QAAQ,GAAKyF,KAAK8/H,QAAS9/H,KAAKzF,QAAQ,MAC9C,CACT,KAAOyF,KAAKjG,OAASiG,KAAKiiI,SAASxC,MAAMn1I,QAAS0V,KAAKjG,OAAQ,CAC3D,GAAIxN,GAAOyT,KAAKiiI,SAASxC,MAAMzlJ,GAAGgmB,KAAKjG,QACnC5a,EAAS6gB,KAAK0iI,UAAUX,EAAYh+I,EAAGic,KAAKiiI,SAAUjiI,KAAKjG,OAAQiG,KAAK8/H,QAAS9/H,KAAKshI,aAAc/0I,EAAMjR,EAAQ0I,EAKtH,IAJA+9I,EAAa5iJ,EAAO4iJ,WACpBzmJ,EAAS6D,EAAO7D,OAChB0I,EAAI7E,EAAO6E,EACXy+I,GAAmBnnJ,EACfymJ,EAAWC,OACX,MAAOD,EAGX,IADAA,EAAWrD,aAAc,EACrBnyI,EAAKqkF,SAAWrkF,EAAKqkF,QAAQ6uD,MAAMn1I,MAAQ,EAAG,CAC9C,GAAI0V,KAAKiiI,mBAAoBzB,IAAgB,CACzC,GAAImC,GAAQ3iI,KAAKiiI,QACjBU,GAAMxC,cAAgBngI,KAAKjG,QACvBiT,EAAO,GAAIm0H,IAAanhI,KAAKiiI,SAAUjiI,KAAKjG,OAAQ4oI,EAAMv/B,eACzDjsE,OAASn3B,KAAK28B,cACnB3vB,EAAKxD,MAAQxJ,KAAK68B,aAClB7vB,EAAKvD,QAAUzJ,KAAKwiI,eACpBx1H,EAAKoqB,KAAOp3B,KAAK48B,YACjB5vB,EAAK41H,aAAe5iI,KAAKuhI,gBACzBvhI,KAAKshI,aAAa3kJ,KAAKqwB,OAEtB,CACD,GAAIA,GAAO,GAAIm0H,IAAanhI,KAAKiiI,SAAUjiI,KAAKjG,OAChDiT,GAAKmqB,OAASn3B,KAAK28B,cACnB3vB,EAAKxD,MAAQxJ,KAAK68B,aAClB7vB,EAAKvD,QAAUzJ,KAAKwiI,eACpBx1H,EAAKoqB,KAAOp3B,KAAK48B,YACjB58B,KAAKshI,aAAa3kJ,KAAKqwB,GAE3BhN,KAAKiiI,SAAW11I,EAAKqkF,QACjB5wE,KAAKiiI,mBAAoBzB,MACzBxgI,KAAKuhI,gBAAkBvhI,KAAKmiI,mBAAmBniI,KAAKiiI,SAAUjiI,KAAKshI,eAEvEthI,KAAKjG,QAAU,EACfiG,KAAK8/H,SAAW9/H,KAAKiiI,SAASvB,OAC9B1gI,KAAKwH,MAAM,GAAKxH,KAAKwH,MAAM,GAAKxH,KAAKiiI,SAASvB,OAC9C1gI,KAAKkiI,sBAAsB31I,GAC3ByT,KAAKkiI,sBAAsBliI,KAAKiiI,WAGxC,GAAiC,IAA7BjiI,KAAKshI,aAAalnJ,OAAc,CAChC4lB,KAAK0hI,cAAgBe,EACrBziI,KAAKwhI,SAAU,CACf,OAEJ,GAAIqB,GAAW7iI,KAAKshI,aAAatkG,KACjCh9B,MAAKjG,OAAS8oI,EAAS9oI,OAAS,EAChCiG,KAAK8/H,SAAW9/H,KAAKiiI,SAASvB,OAC9B1gI,KAAKwH,MAAM,GAAKxH,KAAKwH,MAAM,GAAKxH,KAAKiiI,SAASvB,OAC9C1gI,KAAKuhI,gBAAkBsB,EAASD,aAChC5iI,KAAK28B,cAAgBkmG,EAAS1rG,OAC9Bn3B,KAAK48B,YAAcimG,EAASzrG,KAC5Bp3B,KAAK68B,aAAegmG,EAASr5H,MAC7BxJ,KAAKwiI,eAAiBK,EAASp5H,QAC/BzJ,KAAKiiI,SAAWY,EAASzB,MAE7B,MAAOW,IAEXzB,EAAiBjrI,UAAUqtI,UAAY,SAAUX,EAAYh+I,EAAG++I,EAAS5mJ,EAAOwkJ,EAAQ1zH,EAAMzgB,EAAMjR,EAAQ0I,GACxG,GACI7E,GAOA4jJ,EARAlhG,EAAW,GAAIz4B,IAEfw2H,EAAakD,EAAQlD,WACrBoD,EAAO1nJ,EAAS0I,EAChBi/I,EAAOvC,EAAS38I,EAChBm/I,EAAa,EACbC,EAAWnjI,KAAKwH,MAChB/Y,EAAOlC,EAAKkC,KAEZ20I,EAAYpjI,KAAK28B,cACjB0mG,EAAe,CACf92I,GAAK+wC,QACL8lG,EAAY72I,EAAK+wC,MAErB,IAAIgmG,GAAUtjI,KAAK48B,WACfrwC,GAAK8wC,MACLimG,EAAU/2I,EAAK8wC,IAEnB,IAAI45B,GAAWj3D,KAAK68B,YAChBtwC,GAAKqJ,OACLqhE,EAAW1qE,EAAKqJ,KAEpB,IAAI2tI,GAAavjI,KAAKwiI,cAItB,IAHIj2I,EAAK8lE,eACLkxE,EAAah3I,EAAK8lE,eAEjBryD,KAAKwH,MAAM,IAAM,GAAKxH,KAAKwH,MAAM,GAAKyvD,EAASn7E,OAASkkB,KAAK8hI,aAC9D,KAAM,IAAI5mJ,OAAM,4CAEpB8kB,MAAKwH,MAAM,GAAKxH,KAAKwH,MAAM,GAAKlsB,EAC5BymJ,EAAWC,SACXvzI,EAAOszI,EAAWyB,SAClBT,EAAahB,EAAWgB,WAE5B,IAAIU,IAAgB,EAChBC,EAAe1jI,KAAK2jI,oBAAoBznJ,EAAO4mJ,EAAS91H,EAAMzgB,EA6BlE,IA5BIm3I,GACIZ,YAAmBtC,KACnByC,GAAQjjI,KAAKuhI,gBACbQ,EAAWpD,YAAc3+H,KAAKuhI,kBAG9B0B,GAAQS,EAAat2H,YAAY,GACjC20H,EAAWpD,YAAc+E,EAAat2H,YAAY,IAEtDi2H,EAAeK,EAAat2H,YAAY,GACpCpN,KAAK8hI,eACL2B,EAAiBJ,EAAerjI,KAAKwH,MAAM,IAE3Ck8H,EAAa71H,SACb41H,GAAgB,KAIpBR,GAAQH,EAAQt7H,MAAM,GACtBu6H,EAAWpD,YAAcmE,EAAQt7H,MAAM,GACvC67H,EAAeP,EAAQt7H,MAAM,GACzBxH,KAAK8hI,eACL2B,EAAiBJ,EAAerjI,KAAKwH,MAAM,KAG9Cu7H,GAA6B,KAAfA,IACfU,GAAgB,GAEhBh1I,GAAQg1I,EAAe,CASvB,GARAN,EAAWnjI,KAAKwH,MAChB27H,EAAS,GAAKA,EAAS,GAAKpB,EAAWpD,YACf,IAApBpyI,EAAKqzI,WACLuD,EAAS,GAAKA,EAAS,GAAKvD,EAG5BuD,EAAS,GAAKA,EAAS,GAAK52I,EAAKqzI,YAEhCuD,EAAS,IAAM,GAAKA,EAAS,GAAKlsE,EAASn7E,OAASkkB,KAAK8hI,aAC1D,KAAM,IAAI5mJ,OAAM,uGAEpB,IAAI0oJ,GAAQX,CACPH,GAAQe,oBASTD,GAAS7B,EAAWpD,aAChB4E,GAAeA,EAAWj+H,YAAcrH,mBAAiBzE,OAAS+pI,EAAWj+H,YAAcrH,mBAAiB+nC,SAC5G49F,GAASlD,IAVW,IAApBn0I,EAAKqzI,WACLgE,GAAShE,EAGTgE,GAASr3I,EAAKqzI,YASjB5/H,KAAK8hI,cAAgByB,KACtBA,EAAanuI,OAAOo6G,UAAW+zB,IACpBj+H,UAAYrH,mBAAiB1iB,MAE5C4D,EAAS0iD,EAASx4B,QAAQ5a,EAAMwoE,EAAUssE,EAAYJ,EACtD,IAAI1+I,IAAQm/I,EAAOZ,EAAMG,EAAS,GAAIA,EAAS,GAC/CnjI,MAAK4hI,UAAU7/F,wBAAwB5iD,EAAQ83E,EAAUqsE,EAASF,EAAW3+I,EAAM8+I,GACnFv/I,EAAIg/I,EACJE,EAAa/jJ,EAAOiuB,YAAY,GAmCpC,GAjCA9xB,EAAU4nJ,EAAaG,EAAgBA,EAAeH,EACjD/jJ,GAAUA,EAAOmtB,YAAoC,KAAtBntB,EAAOmtB,YACtCo3H,GAAgBA,EAAap3H,YAA0C,KAA5Bo3H,EAAap3H,aACxDm3H,GACDz/I,EAAI,EACJ1I,EAAS,EACL6D,GACA4iJ,EAAWyB,SAAWrkJ,EAAOmtB,WACzBntB,EAAOmtB,aAAe/f,EAAKkC,OAC3Bg1I,GAAgB,IAKhB1B,EAAWyB,SADXC,MACsBhgJ,GAGA8I,EAAKkC,KAI/BszI,EAAWgB,WADXW,EACwBA,EAAap3H,eAGb7oB,GAE5Bs+I,EAAWC,QAAS,EACpBD,EAAW/9I,EAAI,EACfgc,KAAKzF,QAAQ,GAAK,GAGlBwnI,EAAWC,QAAS,EAEpB7iJ,EAAQ,CAER,GADA4iJ,EAAWnD,QAAUqE,EACjBM,EACA,OAAQA,EAAWj+H,WACf,IAAKrH,oBAAiBzE,MAClBuoI,EAAWnD,QAAUqE,EAAOE,EAAS,GAAKhkJ,EAAOiuB,YAAY,EAC7D,MACJ,KAAKnP,oBAAiB+nC,OAClB+7F,EAAWnD,QAAUqE,EAAQE,EAAS,GAAK,EAAMhkJ,EAAOiuB,YAAY,GAAK,EAIjF01H,EAAQe,qBACR9B,EAAWnD,SAAWz/I,EAAOiuB,YAAY,GACjB,IAApB7gB,EAAKqzI,WACLmC,EAAWnD,SAAWgB,EAGtBmC,EAAWnD,SAAWryI,EAAKqzI,YAE3B2D,GAAeA,EAAWj+H,YAAcrH,mBAAiBzE,OAAS+pI,EAAWj+H,YAAcrH,mBAAiB+nC,SAC5G+7F,EAAWnD,SAAW8B,IAalC,MATI+C,KAAkB1B,EAAWrD,cAC7BqD,EAAWrD,YAAc1+H,KAAK8jI,YAAYhB,EAASv2I,EAAMm3I,EAAcV,EAAMjB,EAAWnD,SAEpFmD,EAAWpD,YADXmE,YAAmBtC,IACMkD,EAAat2H,YAAY,GAGzB01H,EAAQt7H,MAAM,KAGtCu6H,WAAYA,EAAYzmJ,OAAQA,EAAQ0I,EAAGA,IAExDs8I,EAAiBjrI,UAAUsuI,oBAAsB,SAAUznJ,EAAO4mJ,EAAS91H,EAAMzgB,GAC7E,MAAIu2I,aAAmBtC,IACZxgI,KAAK+jI,2BAA2BjB,EAASv2I,EAAMrQ,EAAO8wB,GAAM,GAG5DhN,KAAKgkI,6BAA6BlB,EAASv2I,IAG1D+zI,EAAiBjrI,UAAUyuI,YAAc,SAAUhB,EAASv2I,EAAMm3I,EAAcV,EAAMC,GAmBlF,MAlBIH,aAAmBtC,IACfsC,EAAQltI,MAAQ8tI,IACZZ,EAAQltI,KAAK9Z,KAAO4nJ,EAAat2H,YAAY,KAC7C41H,GAASF,EAAQltI,KAAK9Z,KAAO,EAAM4nJ,EAAat2H,YAAY,GAAK,EACjEs2H,EAAat2H,YAAY,GAAKs2H,EAAat2H,YAAY,GAAK41H,GAEhEhjI,KAAKikI,mBAAmBnB,EAASY,EAAcn3I,EAAM02I,EAAMD,KAI3DF,EAAQltI,MAAQ8tI,GACZZ,EAAQltI,KAAK9Z,KAAO4nJ,EAAat2H,YAAY,KAC7C41H,GAASF,EAAQltI,KAAK9Z,KAAO,EAAM4nJ,EAAat2H,YAAY,GAAK,EACjEs2H,EAAat2H,YAAY,GAAKs2H,EAAat2H,YAAY,GAAK41H,GAGpEhjI,KAAKkkI,qBAAqBpB,EAASY,EAAcn3I,EAAM02I,EAAMD,KAE1D,GAEX1C,EAAiBjrI,UAAU6uI,qBAAuB,SAAUpB,EAASY,EAAcn3I,EAAM02I,EAAMD,GAC3F,GAAImB,GAAankI,KAAKokI,eAAetB,EAASv2I,GAC1C83I,EAAYrkI,KAAKskI,cAAcxB,EAASv2I,GACxCg4I,EAAcvkI,KAAKwkI,gBAAgB1B,EAASv2I,EAC5Cm3I,IACAZ,EAAQt7H,MAAQk8H,EAAat2H,YAC7B01H,EAAQ5B,aAAe,GAAIxqI,IAAgBC,gBAAcU,aAAc8sI,EAAWroJ,MAClFgnJ,EAAQ7B,MAAMjhI,KAAK4hI,UAAWqB,EAAOS,EAAat2H,YAAY,GAAI41H,EAAMuB,EAAaF,KAGrFvB,EAAQt7H,OAAS28H,EAAWroJ,KAAMqoJ,EAAWroJ,MAC7CgnJ,EAAQ7B,MAAMjhI,KAAK4hI,UAAWqB,EAAOkB,EAAWroJ,KAAMknJ,EAAMuB,EAAaF,KAGjF/D,EAAiBjrI,UAAU4uI,mBAAqB,SAAUnB,EAASY,EAAcn3I,EAAM02I,EAAMD,GACzF,GAAImB,GAAankI,KAAKokI,eAAetB,EAASv2I,GAC1C83I,EAAYrkI,KAAKskI,cAAcxB,EAASv2I,GACxCg4I,EAAcvkI,KAAKwkI,gBAAgB1B,EAASv2I,GAC5C9H,GAAQw+I,EAAOjjI,KAAKuhI,gBAAiByB,EAAMhjI,KAAKuhI,gBAAiBmC,EAAat2H,YAAY,IAC1Fq3H,EAAezkI,KAAK0kI,uBAAuB5B,EAAS9iI,KAAK2kI,iBAAiB7B,EAASv2I,GACvFyT,MAAK4hI,UAAU7/F,wBAAwB2hG,EAAcS,EAAYE,EAAWE,EAAa9/I,EAAMggJ,IAEnGnE,EAAiBjrI,UAAU6sI,sBAAwB,SAAUv+I,GACrDA,EAAQ25C,QACRt9B,KAAK28B,cAAgBh5C,EAAQ25C,OAE7B35C,EAAQ05C,MACRr9B,KAAK48B,YAAcj5C,EAAQ05C,KAE3B15C,EAAQiS,OACRoK,KAAK68B,aAAel5C,EAAQiS,MAE5BjS,EAAQ0uE,eACRryD,KAAKwiI,eAAiB7+I,EAAQ0uE,aAC1B1uE,YAAmBk8I,MACnB7/H,KAAKwiI,eAAep9H,SAAU,KAI1Ck7H,EAAiBjrI,UAAU8sI,mBAAqB,SAAU/pG,EAAMwsG,GAE5D,IAAK,GADD3gJ,IAAS,EACJ1J,EAAI,EAAGA,EAAI69C,EAAKqnG,MAAMn1I,MAAO/P,IAAK,CACvC,GAAI4E,GAAS6gB,KAAK+jI,2BAA2B3rG,EAAMA,EAAKqnG,MAAMzlJ,GAAGO,GAAIA,EAAI69C,EAAKysG,YAAaD,GAAa,EACpG3gJ,GAAQ9E,EAAOiuB,YAAY,KAC3BnpB,EAAQ9E,EAAOiuB,YAAY,IAGnC,MAAOnpB,IAEXq8I,EAAiBjrI,UAAU2uI,6BAA+B,SAAU5rG,EAAM7rC,GACtE,GAAI43I,GAAankI,KAAKokI,eAAehsG,EAAM7rC,GACvCs1C,EAAW,GAAIz4B,IACf07H,EAAQ,GAAIpuI,IAAgBC,gBAAcU,aAAc8sI,EAAWroJ,MACnEqD,EAAS0iD,EAASx4B,QAAQ+uB,EAAK2oG,iBAAkB+D,EAAO,KAAM9kI,KAAKwH,MAKvE,OAJA4wB,GAAK5wB,MAAQroB,EAAOiuB,YAChBgrB,EAAKiF,MACLl+C,EAAOqoB,OAASroB,EAAOiuB,YAAY,GAAK,EAAIgrB,EAAKiF,IAAIp0B,OAAQ9pB,EAAOiuB,YAAY,GAAK,EAAIgrB,EAAKiF,IAAIp0B,SAE/F9pB,GAEXmhJ,EAAiBjrI,UAAU0uI,2BAA6B,SAAU3rG,EAAM7rC,EAAMrQ,EAAO0oJ,EAAaG,GAC9F3sG,EAAK+nG,cAAgBjkJ,CACrB,IAAIuS,GAAO,EAIX,IAHI2pC,EAAKjyC,QAAUuV,iBAAe7T,OAC9B4G,EAAO2pC,EAAKgrE,aAAehrE,EAAKwoG,QAEhCxoG,EAAK4sG,gBAEL,IAAK,GADDlsH,GAAa8rH,EAAYptG,QACpBj9C,EAAI,EAAGA,EAAIu+B,EAAW1+B,OAAQG,IAAK,CACxC,GAAIsoJ,GAAW/pH,EAAWr+B,OAAOC,SAASH,EAAEI,WAAY,KACpDsqJ,EAAcpC,EAASzB,KAC3B,MAAM6D,GAAeA,YAAuBzE,KAAkByE,EAAY9+I,QAAUuV,iBAAe7T,MAC/F,KAGJ,IADA4G,EAAOo0I,EAASxB,QAAU4D,EAAYtE,UAAYlyI,GAC7Cw2I,EAAYD,gBACb,MAIZ,GAAInjG,GAAW,GAAIz4B,IACfxT,EAAOoK,KAAKokI,eAAehsG,EAAM7rC,GACjCya,EAAShH,KAAK2kI,iBAAiBvsG,EAAM7rC,GACrC24I,GAAc,EAAG,EAKrB,OAJKH,KACDG,EAAW,GAAKllI,KAAKuhI,gBACrBv6H,EAAShH,KAAK0kI,uBAAuBtsG,EAAMpxB,IAExC66B,EAASx4B,QAAQ5a,EAAMmH,EAAMoR,EAAQk+H,IAEhD5E,EAAiBjrI,UAAUqvI,uBAAyB,SAAUtsG,EAAMpxB,GAiBhE,MAfIA,GADAA,EACS5R,OAAOo6G,UAAWxoG,GAGlB,GAAIlC,IAEZszB,EAAKi6B,eACNrrD,EAAO1B,UAAYrH,mBAAiBzE,MAChC4+B,EAAKyrG,qBACL78H,EAAO1B,UAAYrH,mBAAiB1iB,QAGvCykB,KAAK8hI,cAAgB96H,KACtBA,EAAS5R,OAAOo6G,UAAWxoG,IACpB1B,UAAYrH,mBAAiB1iB,MAEjCyrB,GAEXs5H,EAAiBjrI,UAAU+uI,eAAiB,SAAUhsG,EAAM7rC,GACxD,GAAI43I,GAAa/rG,EAAKxiC,IAQtB,OAPKuuI,KACDA,EAAa53I,EAAKqJ,QAEduuI,EAAankI,KAAK68B,cAG1BzE,EAAKxiC,KAAOuuI,EACLA,GAEX7D,EAAiBjrI,UAAUsvI,iBAAmB,SAAUvsG,EAAM7rC,GAC1D,GAAIk4I,GAAersG,EAAKi6B,YAOxB,OANKoyE,KACDA,EAAel4I,EAAK8lE,gBAEhBoyE,EAAezkI,KAAKwiI,gBAGrBiC,GAEXnE,EAAiBjrI,UAAUivI,cAAgB,SAAUlsG,EAAM7rC,GACvD,GAAI83I,GAAYjsG,EAAKiF,GAOrB,OANKgnG,KACDA,EAAY93I,EAAK8wC,OAEbgnG,EAAYrkI,KAAK48B,aAGlBynG,GAEX/D,EAAiBjrI,UAAUmvI,gBAAkB,SAAUpsG,EAAM7rC,GACzD,GAAIg4I,GAAcnsG,EAAKkF,KAOvB,OANKinG,KACDA,EAAch4I,EAAK+wC,SAEfinG,EAAcvkI,KAAK28B,eAGpB4nG,GAEXjE,EAAiBjrI,UAAUouC,aAAe,SAAUpoD,GAChD,GAAIiQ,GAAWjQ,EAAK0R,gBAAgBuM,SACpC,OAAIje,GAAKqoD,WAAap4C,EAASnP,UAAY,EAChCmP,EAASlP,QAAQf,EAAKqoD,WAAa,GAGnCp4C,EAASq4C,WAGjB28F"}