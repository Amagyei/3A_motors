{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/model/base.js","../src/treemap/model/constants.js","../src/treemap/utils/helper.js","../src/treemap/layout/render-panel.js","../src/treemap/model/theme.js","../src/treemap/model/print.js","../src/treemap/model/image-export.js","../src/treemap/model/pdf-export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the title of the treemap.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null, fontWeight: null }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null, fontWeight: null }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, fontWeight: null }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: null, width: null }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, fontWeight: null }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill down to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: null, fontFamily: null }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: null, fontWeight: null, opacity: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the level leaf items of the treemap.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px', fontFamily: null }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n *\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n *\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n *\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n *\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n *\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n *\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n *\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n *\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n *\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n *\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap.\n *\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","import { createElement, compile, merge, isNullOrUndefined, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the size parameters.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n *\n * @param {string} value - specifies the text.\n * @param {number} containerSize - specifies the container size value.\n * @returns {number} - Returns the number value which is converted from string.\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n *\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size.\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = SanitizeHtmlHelper.sanitize(text);\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n *\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Trim the title text\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the string\n * @private\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Specifies the location parameters.\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n *\n * @param {Rect} location - Specifies the location of text.\n * @param {Alignment} alignment - Specifies the alignment of the text.\n * @param {Size} textSize - Specifies the size of the text.\n * @param {type} type - Specifies whether the provided text is title or subtitle.\n * @returns {Location} - Returns the location of text.\n * @private\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    var y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n *\n * @param {SvgRenderer} renderer - Specifies the rendering element of the SVG.\n * @param {any} renderOptions - Specifies the settings of the text.\n * @param {string} text - Specifies the text.\n * @returns {HTMLElement} - Returns the HTML element for the text.\n */\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n *\n * @param {TextOption} options - Specifies the text option\n * @param {FontModel} font - Specifies the font model\n * @param {string} color - Specifies the color\n * @param {HTMLElement | Element} parent - Specifies the parent element of the text\n * @param {boolean} isMinus - Specifies the boolean value\n * @returns {Element} - Returns the element\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var spacing = 5;\n        var drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 &&\n                !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\n/**\n *\n * @param {string} targetId - Specifies the id of the element to which template is to be appended.\n * @param {Element} targetElement - Specifies the element to which template is to be appended.\n * @param {string} contentItemTemplate - Specifies the content to be appended as template.\n * @returns {void}\n */\nexport function setItemTemplateContent(targetId, targetElement, contentItemTemplate) {\n    var itemSelect = targetId.split('_RectPath')[0];\n    var itemTemplate;\n    if (targetId.indexOf('_LabelTemplate') > -1) {\n        itemTemplate = targetElement;\n    }\n    else {\n        itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n    }\n    if (!isNullOrUndefined(itemTemplate)) {\n        itemTemplate.innerHTML = contentItemTemplate;\n    }\n}\n/**\n *\n * @param {string} id - Specifies the id of the element.\n * @returns {Element} - Returns the element.\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n *\n * @param {any} a - Specifies the first order of TreeMap leaf elements.\n * @param {any} b - Specifies the second order of TreeMap leaf elements.\n * @returns {number} - Returns the order of the TreeMap leaf element.\n */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\n/**\n *\n * @param {string[]} source - Specifies the data from the data source.\n * @param {string} pathName - Specifies the path name in the data source.\n * @param {any} processData - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {boolean} - Specifies whether data is available in the data source or not.\n */\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath :\n            treemap.weightValuePath;\n        var data = processData[path] || 'undefined';\n        if (source[i] === data) {\n            name += data + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\n/**\n *\n * @param {any} data - Specifies the data to which the children elements to be found.\n * @returns {any} - Returns the children elements of the TreeMap leaf element.\n */\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\n/**\n *\n * @param {any} data - Specifies the data to which highlight must be done.\n * @param {items} items - Specifies the data source items.\n * @param {string} mode - Specifies the mode of highlight.\n * @param {TreeMap} treeMap - Specifies the treemap instance.\n * @returns {string[]} - Returns the highlighted items.\n */\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n *\n * @param {string} template - Specifies the template\n * @returns {Function} - Returns the template function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n        else {\n            templateFn = compile(template);\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n * @param {HTMLCollection} element - Specifies the element\n * @param {string} labelId - Specifies the label id\n * @param {Object} data - Specifies the data\n * @returns {HTMLElement} - Returns the element\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId\n    });\n    childElement.style.cssText = 'position: absolute;pointer-events: auto;';\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        var regExp = RegExp;\n        templateHtml = templateHtml.replace(new regExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @param {LabelPosition} position - Specifies the position\n * @param {Size} labelSize - Specifies the label size.\n * @param {string} type - Specifies the type.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {Location} - Returns the text location.\n */\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\n/**\n *\n * @param {HTMLElement} element - Specifies the element to be measured.\n * @param {HTMLElement} parentElement - Specifies the parent element of the element to be measured.\n * @returns {Size} - Returns the element size.\n */\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @returns {number} - Returns the area width.\n */\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\n/**\n *\n * @param {Rect} input - Specifies input for the calculation.\n * @returns {number} - Returns the shortest edge.\n */\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\n/**\n *\n * @param {Rect} rect - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\n/**\n *\n * @param {Rect} container - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height\n    };\n}\n/**\n *\n * @param {number} pageX - Specifies the horizontal position of the mouse location.\n * @param {number} pageY - Specifies the vertical position of the mouse location.\n * @param {Element} element - Specifies the element to which the click is done.\n * @returns {Location} - Returns the clicked location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\n/**\n *\n * @param {ColorMappingModel[]} colorMapping - Specifies the color mapping instance.\n * @param {string} equalValue - Specifies the equal value.\n * @param {number | string} value - Specifies the range value.\n * @returns {any} - Returns the color mapping object.\n * @private\n */\nexport function colorMap(colorMapping, equalValue, value) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) &&\n                (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value)\n                || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to)\n            || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity)\n            && fill) {\n            opacity = deSaturationColor(colorMapping[i], value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\n/**\n *\n * @param {ColorMappingModel} colorMapping - Specifies the color mapping object.\n * @param {number} rangeValue - Specifies the range value.\n * @returns {string} - Returns the opacity for the color mapping.\n * @private\n */\nexport function deSaturationColor(colorMapping, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping object.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\n/**\n *\n * @param {number} r - Specifies the red color value.\n * @param {number} g - Specifies the green color value.\n * @param {number} b - Specifies the blue color value.\n * @returns {string} - Returns the fill color.\n */\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/**\n *\n * @param {number} value - Specifies the range value.\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {number} - Returns the color value.\n */\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\n/**\n *\n * @param {number} maximumWidth - Specifies the length of the text.\n * @param {string} dataLabel - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/**\n *\n * @param {number} maxWidth - Specifies the length of the text.\n * @param {string} label - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function textWrap(maxWidth, label, font) {\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n *\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {number} maxHeight - Specifies the maximum height.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the hidden text.\n * @private\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\n/**\n *\n * @param {number} a - Specifies the first value of the leaf.\n * @param {number} b - Specifies the second value of the leaf.\n * @returns {number} - Returns whether values are equal or not.\n */\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} element - Specifies the selected TreeMap leaf item.\n * @param {string} className -Specifies the selected class name.\n * @returns {void}\n */\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index] ||\n                element.children[0].id === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} legendGroup - Specifies the selected element.\n * @returns {void}\n */\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            if (treemap.legendSettings.mode === 'Interactive') {\n                for (var j = 0; j < legendGroup.childElementCount; j++) {\n                    if (legendGroup.childNodes[j]['id'] === elementId[i] ||\n                        parseFloat(legendGroup.childNodes[j]['id'].split('Index_')[1]) === parseFloat(elementId[i].split('Index_')[1])) {\n                        var treemapSVGRectElement = legendGroup.childNodes[j];\n                        treemapSVGRectElement.setAttribute('fill', treemap.selectionSettings.fill);\n                        treemapSVGRectElement.setAttribute('stroke', treemap.selectionSettings.border.color);\n                        treemapSVGRectElement.setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                        treemapSVGRectElement.setAttribute('opacity', treemap.selectionSettings.opacity);\n                    }\n                }\n            }\n            else {\n                var legendItem = document.getElementById(elementId[i]);\n                if (!isNullOrUndefined(legendItem)) {\n                    legendItem.setAttribute('fill', treemap.selectionSettings.fill);\n                    legendItem.setAttribute('stroke', treemap.selectionSettings.border.color);\n                    legendItem.setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    legendItem.setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\n/**\n *\n * @param {HTMLCollection} elements - Specifies the selected TreeMap element.\n * @param {string} type - Specifies the selection type.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeClassNames(elements, type, treemap) {\n    var element;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\n/**\n *\n * @param {SVGPathElement} element - Specifies the SVG path element.\n * @param {any} options - Specifies the settings for the SVG path element.\n * @returns {void}\n */\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    if (!isNullOrUndefined(options['fill'])) {\n        element.setAttribute('fill', options['fill']);\n    }\n    else {\n        element.setAttribute('fill', 'black');\n    }\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\n/**\n *\n * @param {string} format - Specifies the format value.\n * @param {any} data - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string} - Returns the formatted text.\n */\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\n/**\n *\n * @param {number} value - Specifies the text to be formatted.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string | number} - Returns the formatted text.\n */\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/**\n * @private\n */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * @param {ColorValue} value - Specfies the color value\n * @returns {string} - Returns the string\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * @param {number} value - Specifies the value\n * @returns {string} - Returns the string\n * @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * @param {string} hex - Specifies the hex value\n * @returns {ColorValue} - Returns the color value\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * @param {string} color - Specifies the color\n * @returns {string} - Returns the string\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var isRGBValue = color.replace(/[()RGBrgba ]/g, '').split(',');\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[0], 10), parseInt(isRGBValue[1], 10), parseInt(isRGBValue[2], 10)));\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {string} shape - Specifies the shape\n * @param {Size} size - Specifies the size\n * @param {string} url - Specifies the url\n * @param {PathOption} options - Specifies the options\n * @returns {Element} - Returns the element\n * @private\n */\nexport function drawSymbol(location, shape, size, url, options) {\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    return htmlElement;\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {Size} size - Specifies the size\n * @param {string} shape - Specifies the shape\n * @param {PathOption} options - Specifies the path option\n * @param {string} url - Specifies the string\n * @returns {IShapes} - Returns the shapes\n * @private\n */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            // eslint-disable-next-line no-case-declarations\n            var eq = 72;\n            // eslint-disable-next-line no-case-declarations\n            var xValue = void 0;\n            // eslint-disable-next-line no-case-declarations\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\n/**\n *\n * @param {any} data - Specifies the data source object.\n * @param {any} item - Specifies the leaf item.\n * @returns {boolean} - Returns whether the TreeMap item is level item or leaf item.\n */\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Specifies the data to be received through Ajax request for treemap.\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @returns {void}\n * @private\n */\nexport function removeShape(collection) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @param {TreeMap} treeMap - Specifies the treemap instance.\n * @returns {void}\n * @private\n */\nexport function removeLegend(collection, treeMap) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            var legendIndex = parseFloat(item['legendEle'].id.split('_Index_')[1]);\n            var isText = item['legendEle'].id.indexOf('Text') > -1;\n            var shapeId = isText ? item['legendEle'].id.replace('_Text', '') : item['legendEle'].id;\n            var legendShape = treeMap.legendSettings.mode === 'Interactive'\n                ? document.getElementById(shapeId)\n                : document.getElementById(treeMap.element.id + '_Legend_Shape_Index_' + legendIndex);\n            var legendText = treeMap.legendSettings.mode === 'Interactive'\n                ? document.getElementById(shapeId + '_Text')\n                : document.getElementById(treeMap.element.id + '_Legend_Text_Index_' + legendIndex);\n            if (!isNullOrUndefined(legendShape)) {\n                setColor(legendShape, item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            }\n            if (!isNullOrUndefined(legendText)) {\n                setColor(legendText, treeMap.legendSettings.textStyle.color, item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            }\n            var dataCount = !isNullOrUndefined(item['ShapeCollection']) ? item['ShapeCollection']['Elements'].length : 0;\n            for (var k = 0; k < dataCount; k++) {\n                var shapeElement = document.getElementById(item['ShapeCollection']['Elements'][k].id);\n                if (!isNullOrUndefined(shapeElement)) {\n                    setColor(shapeElement, item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n                }\n            }\n        }\n    }\n}\n/**\n *\n * @param {Element} element - Specifies the selected element.\n * @param {string} fill - Specifies the fill color.\n * @param {string} opacity - Specifies the opacity.\n * @param {string} borderColor - Specifies the border color.\n * @param {string} borderWidth - Specifies the border width.\n * @returns {void}\n */\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\n/**\n *\n * @param {any[]} collection - Specifies the selected item collection.\n * @param {any[]} element - Specifies the selected element collection.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeLegend(collection, treemap);\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\n/**\n *\n * @param {number} length - Specifies the length of the legend group.\n * @param {any} item - Specifies the legend item.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {number} - Returns the legend index.\n */\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    var valuePath = treemap.rangeColorValuePath;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        if (dataLength > 0) {\n            for (var j = 0; j < dataLength; j++) {\n                if ((!isNullOrUndefined(valuePath) && valuePath !== '' && treemap.leafItemSettings.colorMapping.length > 0 ?\n                    (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['data'][valuePath] === item['data'][valuePath])\n                    : treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']\n                        || item['levelOrderName'].indexOf(treemap.treeMapLegendModule.legendCollections[i]['legendName']) > -1)) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        else if (treemap.palette && treemap.palette.length > 0) {\n            if ((treemap.treeMapLegendModule.legendCollections[i]['levelOrderName'] === item['levelOrderName'] ||\n                (item['levelOrderName'].indexOf(treemap.treeMapLegendModule.legendCollections[i]['levelOrderName'])) > -1)\n                && treemap.treeMapLegendModule.legendCollections[i]['legendName'] === item['name']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @param {number} index - Specifies the index of legend.\n * @param {number} number - Specifies the leaf item index.\n * @param {Element} legendElement - Specifies the legend element.\n * @param {Element} shapeElement - Specifies the shape element.\n * @param {any[]} renderItems - Specifies the item index.\n * @param {any[]} legendCollection - Specifies the legend collection.\n * @returns {void}\n */\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name\n * @param {ExportType} type - Specifies the type\n * @param {string} url - Specifies the url\n * @param {boolean} isDownload - Specifies the boolean value\n * @returns {void}\n * @private\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n/**\n *\n * @param {string} id - Specifies the id of the element to be removed.\n * @returns {void}\n */\nexport function removeElement(id) {\n    var element = document.getElementById(id);\n    return element ? remove(element) : null;\n}\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data;\n        var totalRect;\n        if (this.treemap.treemapLevelData.levelsData && this.treemap.treemapLevelData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.treemapLevelData.levelsData[0], [])[0] : this.treemap.treemapLevelData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var x = this.treemap.drilledItems[count]['data'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var y = {};\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.treemapLevelData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.treemapLevelData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treemap = this.treemap;\n        var newData = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ?\n                        groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        var index;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 :\n                        (levels.length === 0) ? 0 : levels[index] ?\n                            levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var nextDatum = data[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight\n            };\n            return convertToRect(container);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var coordinates = [];\n        var isParent;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItem = {};\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItemGroupname = {};\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /** @private */\n    LayoutPanel.prototype.renderLayoutItems = function () {\n        var _this = this;\n        var position;\n        var treeMap = this.treemap;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var rectPath = '';\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template'\n        });\n        templateGroup.style.cssText = 'overflow: hidden; position: absolute;pointer-events: none;' +\n            'top:' + treeMap.areaRect.y + 'px;' +\n            'left:' + treeMap.areaRect.x + 'px;' +\n            'height:' + treeMap.areaRect.height + 'px;' +\n            'width:' + treeMap.areaRect.width + 'px;';\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? (treeMap.legendSettings.visible ? this_1.treemap.totalRect\n                : convertToContainer(this_1.treemap.totalRect)) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName || 'undefined';\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            if (treeMap.enableHtmlSanitizer) {\n                renderText = SanitizeHtmlHelper.sanitize(renderText);\n            }\n            var fontFamily = (isLeafItem ? leaf.labelStyle.fontFamily : levels[index].headerStyle.fontFamily);\n            fontFamily = fontFamily || this_1.treemap.themeStyle.labelFontFamily;\n            var size = (isLeafItem ? leaf.labelStyle.size : levels[index].headerStyle.size);\n            size = size || this_1.treemap.themeStyle.labelFontSize;\n            var fontWeight = (isLeafItem ? leaf.labelStyle.fontWeight : levels[index].headerStyle.fontWeight);\n            fontWeight = fontWeight || this_1.treemap.themeStyle.fontWeight;\n            var color = (isLeafItem ? leaf.labelStyle.color : levels[index].headerStyle.color);\n            var fontStyle = (isLeafItem ? leaf.labelStyle.fontStyle : levels[index].headerStyle.fontStyle);\n            var textStyleOpacity = (isLeafItem ? leaf.labelStyle.opacity : levels[index].headerStyle.opacity);\n            textStyle = {\n                fontFamily: fontFamily, size: size, fontWeight: fontWeight, color: color, fontStyle: fontStyle, opacity: textStyleOpacity\n            };\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options'], textColor: textStyle.color\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        textStyle.color = eventArgs.textColor ? eventArgs.textColor : textStyle.color;\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        if (!isNullOrUndefined(templateEle)) {\n                            templateGroup.appendChild(templateEle);\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            _this.treemap.renderReactTemplates();\n                        }\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    if ((_this.treemap.enableDrillDown && isLeafItem) || (_this.treemap.selectionSettings.enable ||\n                        _this.treemap.highlightSettings.enable)) {\n                        itemGroup.setAttribute('role', 'button');\n                        itemGroup.setAttribute('tabindex', _this.treemap.tabIndex.toString());\n                        itemGroup.style.cursor = _this.treemap.highlightSettings.enable && !_this.treemap.selectionSettings.enable && (_this.treemap.enableDrillDown && item['groupIndex'] === (_this.treemap.levels.length - 1)) ? 'default' :\n                            _this.treemap.highlightSettings.enable && !_this.treemap.selectionSettings.enable && !_this.treemap.enableDrillDown ? 'default' : 'pointer';\n                    }\n                    else {\n                        itemGroup.setAttribute('role', 'region');\n                    }\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n        maintainSelection(this.treemap, this.layoutGroup, 'treeMapSelection');\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var padding = 5;\n        var textSize;\n        var textCollection = [];\n        var customText;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        var textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        var textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(treemap.treemapLevelData.defaultLevelsData)) {\n            if (treemap.treemapLevelData.defaultLevelsData.length > 0) {\n                treemap.treemapLevelData.levelsData = treemap.treemapLevelData.defaultLevelsData;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentData = findChildren(treemap.treemapLevelData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var option = colorMap(colorMapping, item['data'][treemap.equalColorValuePath], item['data'][treemap.rangeColorValuePath]);\n            if (!isNullOrUndefined(option)) {\n                itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n                itemOpacity = option['opacity'];\n            }\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : !isNullOrUndefined(item['options']) ?\n                        item['options'].fill : (!isNullOrUndefined(treemap.palette) && treemap.palette.length > 0) ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     *\n     * @param {string} color - Specifies the color\n     * @returns {string} - Returns the color\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, max-len\n    secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype']) && typeof template === 'string') {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                var regExp = RegExp;\n                template = template.replace(new regExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        if (this.treemap.enableHtmlSanitizer && typeof template === 'string') {\n            template = SanitizeHtmlHelper.sanitize(template);\n        }\n        var labelElement;\n        if (!isNullOrUndefined(document.getElementById(this.treemap.element.id + '_Secondary_Element'))) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn = getTemplateFunction(template);\n            var templateElement = templateFn(item['data'], this.treemap, template, this.treemap.element.id + baseTemplateId, false);\n            labelElement = convertElement(templateElement, templateId, item['data']);\n            var templateSize = measureElement(labelElement, secondaryEle);\n            var templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n            labelElement.style.left = templateLocation.x + 'px';\n            labelElement.style.top = templateLocation.y + 'px';\n        }\n        return labelElement;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    LayoutPanel.prototype.destroy = function () {\n        this.treemap = null;\n        this.currentRect = null;\n        this.layoutGroup = null;\n        this.renderer = null;\n        this.renderItems = [];\n        this.parentData = [];\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","/**\n * Maps Themes doc\n */\nimport { defaultFont } from './constants';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Theme;\n(function (Theme) {\n    /**\n     * @private\n     */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * To get the theme style based on treemap theme.\n *\n * @param {TreeMapTheme} theme Specifies the theme of the treemap control.\n * @returns {IThemeStyle} Returns the theme.\n * @private\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontSize: '12px',\n                labelFontFamily: defaultFont,\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                labelFontFamily: defaultFont,\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#374151',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#374151',\n                legendTextColor: '#374151',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#D1D5DB',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#D1D5DB',\n                legendTextColor: '#D1D5DB',\n                fontFamily: 'Inter',\n                fontWeight: 'Normal',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwind3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#111827',\n                titleFontWeight: '600',\n                subTitleFontColor: '#111827',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#111827',\n                legendTextColor: '#111827',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwind3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: '600',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Inter',\n                fontWeight: '400',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#212529',\n                titleFontWeight: '400',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '10px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#DEE2E6',\n                titleFontWeight: '400',\n                subTitleFontColor: '#DEE2E6',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#212529',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 0.9,\n                legendTitleColor: '#DEE2E6',\n                legendTextColor: '#DEE2E6',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '10px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#201F1E',\n                legendTextColor: '#201F1E',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#F3F2F1',\n                legendTextColor: '#F3F2F1',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                titleFontWeight: '500',\n                subTitleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#1C1B1F',\n                legendTextColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                fontWeight: '400',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'Roboto',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                titleFontWeight: '500',\n                subTitleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#E6E1E5',\n                legendTextColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                fontWeight: '400',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'Roboto',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent2':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#242424',\n                titleFontWeight: '600',\n                subTitleFontColor: '#242424',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#242424',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#242424',\n                legendTextColor: '#242424',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent2dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: '600',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#292929',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent2highcontrast':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: '600',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#FFF',\n                legendBorderWidth: 1,\n                tooltipBorderColor: '#FFF',\n                tooltipBorderWidth: 1\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontSize: '12px',\n                labelFontFamily: defaultFont,\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n    }\n    return style;\n}\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * Print module handles the print functionality for treemap.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function Print(control) {\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (treeMap, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(treeMap, elements), name: beforePrint\n        };\n        treeMap.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {string[] | string | Element} elements - Specifies the element\n     * @returns {Element} - Returns the element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (treeMap, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = treeMap.element.cloneNode(true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Tailwind3' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3' ||\n                        treeMap.theme === 'Fluent2')\n                        && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Tailwind3Dark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark' ||\n                        treeMap.theme === 'Fluent2Dark' || treeMap.theme === 'Fluent2HighContrast')\n                        && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print module.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","import { createElement, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * ImageExport module handles the export to image functionality for treemap.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function ImageExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the file or not.\n     * @returns {Promise} - Returns the promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (treeMap, type, fileName, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'height': treeMap.availableSize.height.toString(),\n                    'width': treeMap.availableSize.width.toString()\n                }\n            });\n            var exportElement = treeMap.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Tailwind3' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3' ||\n                    treeMap.theme === 'Fluent2')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n                else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Tailwind3Dark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark' ||\n                    treeMap.theme === 'Fluent2Dark' || treeMap.theme === 'Fluent2HighContrast')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                }\n            }\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ImageExport.prototype.destroy = function () { };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * PdfExport module handles the export to pdf functionality for treemap.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function PdfExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName - Specifies the name of the document.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the treemap.\n     * @param {boolean} allowDownload - Specifies whether to download the document or not.\n     * @returns {Promise} - Returns the string.\n     * @private\n     */\n    PdfExport.prototype.export = function (treeMap, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': treeMap.availableSize.width.toString(),\n                    'height': treeMap.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = treeMap.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Tailwind3' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3' ||\n                    treeMap.theme === 'Fluent2')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n                else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Tailwind3Dark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark' ||\n                    treeMap.theme === 'Fluent2Dark' || treeMap.theme === 'Fluent2HighContrast')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                }\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (treeMap.availableSize.width - 60), treeMap.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Fetch, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeElement, setItemTemplateContent, legendMaintain, removeLegend } from '../treemap/utils/helper';\nimport { removeClassNames, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\nimport { Print } from './model/print';\nimport { ImageExport } from './model/image-export';\nimport { PdfExport } from './model/pdf-export';\n/**\n * Represents the treemap control. It is used to visualize both hierarchical and flat data.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**\n     * Constructor for TreeMap.\n     *\n     * @param {TreeMapModel} options - Specifies the treemap instance.\n     * @param {string | HTMLElement} element - Specifies the treemap element.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * resize the treemap\n         */\n        _this.isResize = false;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.trigger(load, { treemap: this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        this.renderElements();\n    };\n    TreeMap.prototype.renderElements = function () {\n        this.treemapLevelData = new LevelsData();\n        this.treemapLevelData.levelsData = null;\n        this.treemapLevelData.defaultLevelsData = null;\n        this.treemapLevelData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.treemapLevelData.levelsData)) {\n            this.treemapLevelData.defaultLevelsData = this.treemapLevelData.levelsData;\n        }\n        this.processDataManager();\n    };\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var fetchApiModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataManager = dataModule.executeQuery(queryModule);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            fetchApiModule = new Fetch(localAjax.dataOptions, localAjax.type, localAjax.contentType);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            fetchApiModule.onSuccess = function (args) {\n                if (!isNullOrUndefined(args.type) && args.type === 'application/octet-stream') {\n                    var reader_1 = new FileReader();\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    var treemap_1 = _this;\n                    reader_1.onload = function () {\n                        args = JSON.parse(reader_1.result.toString());\n                        treemap_1.dataSource = args;\n                        treemap_1.renderTreeMapElements();\n                    };\n                    reader_1.readAsText(args);\n                }\n                else {\n                    _this.dataSource = args;\n                    _this.renderTreeMapElements();\n                }\n            };\n            fetchApiModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        if (!isNullOrUndefined(this.treeMapLegendModule) && this.legendSettings.visible) {\n            legendMaintain(this, this.treeMapLegendModule.legendGroup);\n        }\n        this.elementChange();\n        this.trigger(loaded, { treemap: this, isResized: this.isResize });\n        this.isResize = false;\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.layout)) {\n            this.layout = new LayoutPanel(this);\n        }\n        this.clearTemplate();\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element'\n            });\n            secondaryElement.style.cssText = 'position: absolute;z-index:1;';\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup\n            && !isNullOrUndefined(this.svgObject) && !isNullOrUndefined(document.getElementById(this.layout.layoutGroup.id))\n            && !isNullOrUndefined(document.getElementById(this.treeMapLegendModule.legendGroup.id))) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * Render the treemap border\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = {\n            color: title.textStyle.color, size: title.textStyle.size, fontFamily: title.textStyle.fontFamily,\n            fontStyle: title.textStyle.fontStyle, fontWeight: title.textStyle.fontWeight, opacity: title.textStyle.opacity\n        };\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        style.fontFamily = style.fontFamily || this.themeStyle.fontFamily;\n        style.fontWeight = style.fontWeight || this.themeStyle.titleFontWeight;\n        style.size = style.size || (type === 'title' ? this.themeStyle.fontSize : this.themeStyle.subtitleFontSize);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var titleText = this.enableHtmlSanitizer ? (SanitizeHtmlHelper.sanitize(title.text)) : title.text;\n            var trimmedTitle = textTrim(width, titleText, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || titleText);\n            element.setAttribute('role', 'region');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.treemapLevelData.levelsData = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var data_1 = {};\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        child.forEach(function (currentData) {\n                            if (currentData[path]) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path],\n                                    levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.treemapLevelData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.treemapLevelData.hierarchyData = [];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.treemapLevelData.hierarchyData = extend([], this.dataSource, this.treemapLevelData.hierarchyData, true);\n                    for (var i = 0; i < this.treemapLevelData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.treemapLevelData.hierarchyData[i], i);\n                    }\n                    this.treemapLevelData.levelsData = this.treemapLevelData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.treemapLevelData.levelsData.length > 1) {\n                        this.reOrderLevelData(this.treemapLevelData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.treemapLevelData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childData;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newData = {};\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.treemapLevelData.hierarchyData.length - 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mainData_1 = this.treemapLevelData.hierarchyData[0][this.levels[0].groupPath];\n            if (!isNullOrUndefined(mainData_1)) {\n                for (var k = 0; k < this.treemapLevelData.hierarchyData.length; k++) {\n                    childData = findChildren(this.treemapLevelData.hierarchyData[k])['values'];\n                    if (k !== 0 && childData) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                        this.treemapLevelData.hierarchyData.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n                mainData_1 = this.treemapLevelData.hierarchyData[0][this.levels[0].groupPath];\n                for (var l = 0; l < mainData_1.length; l++) {\n                    newData[this.levels[0].groupPath] = mainData_1;\n                    mainData_1[l]['parent'] = newData;\n                }\n            }\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the treemap.\n     * @returns {void}\n     */\n    TreeMap.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the extension type of the exported document.\n     * @param {string} fileName - Specifies file name for exporting the rendered TreeMap.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document.\n     * @param {boolean} allowDownload - Specifies whether the exported file should be downloaded or not.\n     * @returns {string} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    TreeMap.prototype.processFlatJsonData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var orderNames = [];\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var level = {};\n            level['level'] = i;\n            level[groupPath] = [];\n            this.treemapLevelData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var currentData = {};\n                var childName = '';\n                if (!isNullOrUndefined(groupPath)) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any, max-len\n                        this.treemapLevelData.levelsData[(this.treemapLevelData.levelsData.length - 1)][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     *\n     * @param {number} start - Specifies the start value of the treemap level.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = this.treemapLevelData.levelsData[start][currentPath];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var previousData = this.treemapLevelData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ?\n                    [] : previousData[j][currentPath];\n                if (this.IsChildHierarchy(currentName.split('#'), previousData[j]['levelOrderName'].split('#'))) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.treemapLevelData.levelsData[this.treemapLevelData.levelsData.length - 1][currentPath], 'Child');\n        this.treemapLevelData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.IsChildHierarchy = function (current, previous) {\n        var isChild = false;\n        for (var i = 0; i < previous.length; i++) {\n            if (current.length < i || previous[i] !== current[i]) {\n                return false;\n            }\n            else {\n                isChild = true;\n            }\n        }\n        return isChild;\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     *\n     * @param {any[]} processData - Specifies the treemap data.\n     * @param {string} type - Specifies the type of the data.\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var split;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupName;\n        var groupObj = {};\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * To bind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        this.resizeEvent = this.resizeOnTreeMap.bind(this);\n        window.addEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * Method to set culture for maps\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('role', 'region');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     *\n     * @param {Event} e - Specifies the pointer event.\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            this.isResize = true;\n            var args_1 = {\n                name: resize,\n                cancel: false,\n                previousSize: this.availableSize,\n                currentSize: new Size(0, 0),\n                treemap: this\n            };\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-treemap')) {\n                this.resizeTo = setTimeout(function () {\n                    _this.unWireEVents();\n                    _this.createSvg();\n                    _this.refreshing = true;\n                    _this.wireEVents();\n                    args_1.currentSize = _this.availableSize;\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    _this.trigger(resize, args_1, function (observedArgs) {\n                        _this.render();\n                        _this.refreshing = false;\n                    });\n                }, 500);\n            }\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the mouse click event in the treemap.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_Item_Index_')[1]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.textContent = observedArgs.text;\n                    }\n                    else {\n                        setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        else {\n            this.element.style.cursor = 'default';\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     *\n     * @param {string} labelText - Specifies the label text.\n     * @param {any} item - Specifies the treemap item.\n     * @returns {any} - Returns label of the drilled level.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {boolean} directLevel - Specifies the current level.\n     * @returns {boolean} - check whether it is previous level or not.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {number} i - Specifies the treemap item.\n     * @returns {any} - return the new drill down object.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var drillLevelChild;\n        var newDrillItem = {};\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var index;\n        var newDrillItem = {};\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            index = parseFloat(targetId.split('_Item_Index_')[1]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.textContent;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: newDrillItem\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems();\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @return {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeLegend(this.treeMapHighlightModule.shapeHighlightCollection, this);\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     *\n     * @param {string[]} levelOrder - Specifies the order of the level.\n     * @param {boolean} isSelected - Specifies whether the treemap item should be selected or the selection should be removed.\n     * @return {void}\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the modules\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this],\n                name: 'TreeMapTooltip'\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this],\n                name: 'TreeMapHighlight'\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this],\n                name: 'TreeMapSelection'\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this],\n                name: 'TreeMapLegend'\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print],\n                name: 'Print'\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport],\n                name: 'ImageExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport],\n                name: 'PdfExport'\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeMapModel} newProp - Specifies the new property\n     * @param {TreeMapModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.isDestroyed) {\n            var render = false;\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'background':\n                        this.renderBorder();\n                        break;\n                    case 'height':\n                    case 'width':\n                    case 'layoutType':\n                    case 'levels':\n                    case 'drillDownView':\n                    case 'renderDirection':\n                    case 'leafItemSettings':\n                    case 'legendSettings':\n                    case 'dataSource':\n                        render = true;\n                        break;\n                }\n            }\n            if (render) {\n                this.createSvg();\n                this.renderElements();\n            }\n        }\n    };\n    /**\n     * Gets component name.\n     *\n     * @returns {string} - return the treemap instance.\n     * @private\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method destroys the treemap. This method removes the events associated with the treemap and disposes the objects created for rendering and updating the treemap.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        removeElement('treeMapMeasureText');\n        this.drilledItems = [];\n        this.levelSelection = [];\n        this.legendId = [];\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n        this.areaRect = null;\n        this.themeStyle = null;\n        this.totalRect = null;\n        this.drilledLegendItems = null;\n        this.doubleTapTimer = null;\n        this.treemapLevelData = null;\n        this.resizeEvent = null;\n        this.availableSize = null;\n        this.intl = null;\n        if (!isNullOrUndefined(this.layout)) {\n            this.layout.destroy();\n        }\n        this.layout = null;\n        this.renderer = null;\n    };\n    TreeMap.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        /** @private */\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        /** @private */\n        this.heightIncrement = 0;\n        /** @private */\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.page = 0;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /** @private */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.treemapLevelData.levelsData[0]);\n        if (((!isNullOrUndefined(this.treemap.palette) && this.treemap.palette.length > 0) || !isNullOrUndefined(treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(treemap.treemapLevelData.levelsData[0]);\n        }\n        if (this.legendCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.levelIndex > nextItem.levelIndex) ? 1 :\n                (firstItem.levelIndex < nextItem.levelIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.groupIndex > nextItem.groupIndex) ? 1 :\n                (firstItem.groupIndex < nextItem.groupIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.leafIndex > nextItem.leafIndex) ? 1 :\n                (firstItem.leafIndex < nextItem.leafIndex) ? -1 : 0; });\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = treemap.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(legend.title.text) : legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = titleTextStyle.fontFamily || treemap.themeStyle.fontFamily;\n            titleTextStyle.fontWeight = titleTextStyle.fontWeight || treemap.themeStyle.titleFontWeight;\n            titleTextStyle.size = titleTextStyle.size || treemap.themeStyle.subtitleFontSize;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var itemTextStyle = legend.textStyle;\n            itemTextStyle.size = itemTextStyle.size || treemap.themeStyle.legendFontSize;\n            itemTextStyle.fontFamily = itemTextStyle.fontFamily || treemap.themeStyle.fontFamily;\n            itemTextStyle.fontWeight = itemTextStyle.fontWeight || treemap.themeStyle.fontWeight;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(treemap.enableHtmlSanitizer ?\n                        SanitizeHtmlHelper.sanitize(legendItem['legendName']) : legendItem['legendName'], itemTextStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[0]['Collection'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var legendLength = this.legendCollections.length;\n                var rectWidth = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength) :\n                    (legendWidth / legendLength) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                var rectHeight = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength) : (legendHeight / legendLength);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth : rectHeight), legendText, itemTextStyle);\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth) - itemStartX) :\n                            (rectWidth + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth, height: rectHeight, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var childElement = this.treemap.drilledLegendItems;\n            if (!isNullOrUndefined(childElement['data']['options'])) {\n                legendFillColor = childElement['data']['options']['fill'];\n            }\n            else {\n                for (var k = 0; k < childElement.length; k++) {\n                    legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                        childElement[k]['data'][this.treemap.colorValuePath];\n                    break;\n                }\n            }\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight'],\n                            levelOrderName: child[i]['levelOrderName']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var isAddData;\n        var fill;\n        var rangeValue;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData;\n        var legendText;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var j = 0; j < colorMapping.length; j++) {\n                var colorMap = colorMapping[j];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    var gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue, levelIndex: !isLeafItem ? j : -1, leafIndex: isLeafItem ? j : -1,\n                        legendName: legendText, legendFill: fill, legendData: [], groupIndex: !isLeafItem ? groupIndex : -1,\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess) {\n                    colorMapProcess = false;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                            this.removeDuplicates(this.legendCollections, labelLegend) : false;\n                        if (isNullOrUndefined(this.outOfRangeLegend) && !isDuplicate) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill, groupIndex: (!isLeafItem || groupIndex > -1) ? groupIndex : -1\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        for (var k = this.legendCollections.length - 1; k >= 0; k--) {\n                            if (this.legendCollections[k]['groupIndex'] === data[i]['groupIndex']) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                this.legendCollections[k]['legendData'].push(data[i]);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To draw the legend\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var legend = this.treemap.legendSettings;\n        var render = this.treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: this.treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = this.treemap.element.id + '_Legend_Index_' + i;\n                var textId = this.treemap.element.id + '_Legend_Index_' + i + '_Text';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (this.treemap.legendSettings.position === 'Left' || this.treemap.legendSettings.position === 'Right'\n                        || (this.treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                var text = this.treemap.enableHtmlSanitizer ? (SanitizeHtmlHelper.sanitize(item['text'])) : item['text'];\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', text, '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textOptions;\n        var legendRtlLocation;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendText = this_1.treemap.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(collection['DisplayText']) : collection['DisplayText'];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                legendElement.setAttribute('aria-label', legendText + ' Legend');\n                legendElement.setAttribute('role', 'region');\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': '',\n                    'role': 'region',\n                    'aria-label': pagingText\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var borderStyle = {\n            color: legend.border.color || this.treemap.themeStyle.legendBorderColor,\n            width: legend.border.width || this.treemap.themeStyle.legendBorderWidth\n        };\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, borderStyle, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var legend = this.treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = this.treemap.enableHtmlSanitizer ? (SanitizeHtmlHelper.sanitize(legend.title.text)) : legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(this.treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            var textElement = renderTextElement(textOptions, textStyle, textStyle.color ||\n                this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n            textElement.setAttribute('role', 'region');\n            textElement.setAttribute('aria-label', legendTitle);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     *\n     * @param {PointerEvent | TouchEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        var pointerDrawn = false;\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentData = void 0;\n            var legendRect = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_Item_Index_')[1])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length && !pointerDrawn; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData']) && currentData['legendData'].length > 0) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = currentData['legendData'];\n                    var valuePath = treemap.rangeColorValuePath;\n                    if (targetItem['levelOrderName'].indexOf(this.legendCollections[i]['legendName']) > -1) {\n                        this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                        pointerDrawn = true;\n                    }\n                    else {\n                        for (var j = 0; j < data.length; j++) {\n                            if ((treemap.rangeColorValuePath && treemap.leafItemSettings.colorMapping.length > 0)\n                                ? data[j]['data'][valuePath] === targetItem['data'][valuePath]\n                                : (data[j]['levelOrderName'] === targetItem['levelOrderName'] ||\n                                    data[j]['levelOrderName'].indexOf(targetItem['levelOrderName']) > -1)) {\n                                this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                                pointerDrawn = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else if (this.treemap.leafItemSettings.colorMapping.length === 0 && this.treemap.palette) {\n                    if (targetItem['levelOrderName'].indexOf(currentData['levelOrderName']) > -1) {\n                        this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                        pointerDrawn = true;\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        // eslint-disable-next-line prefer-const\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    /**\n     * @param {PointerEvent} e - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the interactive pointer\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        if (this.currentPage >= 0 && this.currentPage < this.totalPages.length) {\n            this.drawLegend();\n        }\n        else {\n            this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? 0 : this.totalPages.length - 1;\n        }\n    };\n    /**\n     * Wire events for event handler\n     *\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To add the event listener\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the event listener\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} Returns the legend module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function () {\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = null;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.outOfRangeLegend = null;\n        this.totalPages = [];\n        this.translate = null;\n        this.legendBorderRect = null;\n        this.legendGroup = null;\n        this.legendNames = [];\n        this.defsElement = null;\n        this.legendLinearGradient = null;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = null;\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     *\n     * @param {ColorMappingModel} colorMap - Specifies the color mapping instance.\n     * @param {number} legendIndex - Specifies the index of legend.\n     * @returns {string} - Returns the legend color.\n     * @private\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection, setItemTemplateContent } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in highlight\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {boolean} - return the highlight process is true or false.\n     * @private\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        var shapeSelected = false;\n        if (selectionModule && selectionModule.legendSelectionCollection.length > 0) {\n            for (var i = 0; i < selectionModule.legendSelectionCollection.length; i++) {\n                for (var j = 0; j < selectionModule.legendSelectionCollection[i]['ShapeCollection']['Elements'].length; j++) {\n                    var selectedElementIndex = parseFloat(selectionModule.legendSelectionCollection[i]['ShapeCollection']['Elements'][j].id.split('Item_Index_')[1].split('_')[0]);\n                    var targetElementIndex = targetId.indexOf('_Item_Index_') > -1 ? parseFloat(targetId.split('Item_Index_')[1].split('_')[0]) : null;\n                    if (selectionModule.legendSelectionCollection[i]['ShapeCollection']['Elements'][j].id === targetId ||\n                        selectedElementIndex === targetElementIndex) {\n                        shapeSelected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf('_Item_Index') > -1 && !shapeSelected) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = (!treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0 &&\n                        treemap.leafItemSettings.colorMapping.length === 0 && treemap.levels.length === 0) ?\n                        parseFloat(targetId.split('_Item_Index_')[1]) : getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        var legendShapeElement = selectionModule ? selectionModule.shapeElement : null;\n                        if (selectionModule ? this.shapeElement !== legendShapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeLegend(this.shapeHighlightCollection, treemap);\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            var legendText = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index)\n                                : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index + '_Text');\n                            setColor(legendText, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                        if (this.treemap.legendSettings.mode === 'Interactive') {\n                            this.treemap.treeMapLegendModule.removeInteractivePointer();\n                        }\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ?\n                        this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            var valuePath = treemap.rangeColorValuePath;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            var targetItem = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                            item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process &&\n                                (!isNullOrUndefined(valuePath) && valuePath !== '' ?\n                                    item['data'][valuePath] === targetItem['data'][valuePath] : true)) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1 || targetId.indexOf('_Legend_Text_Index') > -1) {\n            if (!isNullOrUndefined(selectionModule)) {\n                selectionModule.legendSelectId = !isNullOrUndefined(treemap.legendId[0]) ? treemap.legendId[0] : null;\n            }\n            var selectedLegendIndex = selectionModule && selectionModule.legendSelectId ?\n                parseFloat(selectionModule.legendSelectId.split('Index_')[1]) :\n                (selectionModule && selectionModule.shapeSelectId ? parseFloat(selectionModule.shapeSelectId.split('Index_')[1]) : null);\n            var targetIndex = this.treemap.legendSettings.mode === 'Default' ? (targetId.indexOf('Text') === -1 ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Text_Index_')[1]))\n                : parseFloat(targetId.split('_Legend_Index_')[1]);\n            if (this.treemap.legendSettings.visible && targetIndex !== selectedLegendIndex) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var valuePath = treemap.rangeColorValuePath;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, this.treemap);\n                    this.legendHighlightCollection = [];\n                }\n                this.shapeTarget = 'highlight';\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[targetIndex]['legendData'].length;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if ((!isNullOrUndefined(valuePath) && valuePath !== '' && treemap.leafItemSettings.colorMapping.length > 0)\n                            ? treemap.treeMapLegendModule.legendCollections[targetIndex]['legendData'][i]['data'][valuePath] === treemap.layout.renderItems[j]['data'][valuePath]\n                            : (treemap.treeMapLegendModule.legendCollections[targetIndex]['legendData'][i]['levelOrderName'] === treemap.layout.renderItems[j]['levelOrderName'])) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0 || this.legendHighlightCollection.length === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, targetIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            var legendItem = void 0;\n                            if (targetEle.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + targetIndex);\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + targetIndex);\n                            }\n                            setColor(legendItem, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n                if (dataLength === 0 && this.treemap.palette && this.treemap.palette.length > 0) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if ((this.treemap.treeMapLegendModule.legendCollections[targetIndex]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName'] ||\n                            this.treemap.layout.renderItems[j]['levelOrderName'].indexOf(this.treemap.treeMapLegendModule.legendCollections[targetIndex]['levelOrderName']) > -1) &&\n                            ((!this.treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0) ?\n                                targetIndex === j : true)) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            pushCollection(this.legendHighlightCollection, targetIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            var legendItem = void 0;\n                            if (targetEle.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + targetIndex);\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + targetIndex);\n                            }\n                            setColor(legendItem, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ?\n                        selectionModule.legendSelect : true) {\n                        removeLegend(this.shapeHighlightCollection, treemap);\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, this.treemap);\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeSelectionCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in selection\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var selectionElements = [];\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        item = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n        var isDrillItem = (item && !item.isLeafItem && treemap.enableDrillDown) &&\n            (targetEle.nextSibling.textContent.indexOf('[+]') > -1 || targetEle.nextSibling.textContent.indexOf('[-]') > -1);\n        if (targetId.indexOf('_Item_Index') > -1 && !isDrillItem) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId) {\n                treemap.levelSelection = [];\n                treemap.legendId = [];\n                this.shapeSelectId = '';\n                removeLegend(this.legendSelectionCollection, treemap);\n                this.legendSelectionCollection = [];\n                treeMapElement = document.getElementById(layoutID);\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeLegend(this.shapeSelectionCollection, treemap);\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = (!treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0 &&\n                        treemap.leafItemSettings.colorMapping.length === 0\n                        && treemap.levels.length === 0) ?\n                        parseFloat(targetId.split('_Item_Index_')[1]) : getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        var legendText = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index)\n                            : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index + '_Text');\n                        setColor(legendText, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                        treemap.legendId.push(this.shapeElement.id);\n                        treemap.legendId.push(legendText.id);\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var targetItem = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                    item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                    var valuePath = treemap.rangeColorValuePath;\n                    if (orders.indexOf(item['levelOrderName']) > -1 &&\n                        (!isNullOrUndefined(valuePath) && valuePath !== '' ?\n                            item['data'][valuePath] === targetItem['data'][valuePath] : true)) {\n                        selectionElements.push(element);\n                        if (targetId.indexOf('_RectPath') > -1) {\n                            treemap.levelSelection.push(targetId);\n                        }\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    treemap.trigger(itemSelected, eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                        }\n                    });\n                }\n            }\n            else {\n                removeLegend(this.shapeSelectionCollection, treemap);\n                this.treemap.legendId = [];\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.levelSelection = [];\n                if (this.legendSelect) {\n                    removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                    this.treemap.selectionId = '';\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1 || targetId.indexOf('_Legend_Text_') > -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            var legendSelectIdIndex = !isNullOrUndefined(this.legendSelectId) ? parseFloat(this.legendSelectId.split('_Index_')[1]) : null;\n            if (this.treemap.legendSettings.visible && (legendSelectIdIndex !== parseFloat(targetId.split('_Index_')[1]))) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                treemap.legendId = [];\n                treemap.levelSelection = [];\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = !isNaN(parseInt(targetId[targetId.length - 1], 10)) ?\n                    parseInt(targetId[targetId.length - 1], 10) :\n                    parseInt(targetId[targetId.length - 6], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, treemap);\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                removeLegend(this.shapeSelectionCollection, treemap);\n                this.legendSelectionCollection = [];\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                    highlightModule.legendHighlightCollection = [];\n                }\n                var valuePath = treemap.rangeColorValuePath;\n                var index = this.treemap.legendSettings.mode === 'Default' ? (targetId.indexOf('Text') === -1 ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Text_Index_')[1]))\n                    : parseFloat(targetId.split('_Legend_Index_')[1]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if ((!isNullOrUndefined(valuePath) && valuePath !== '' && treemap.leafItemSettings.colorMapping.length > 0) ?\n                            (treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['data'][valuePath] === treemap.layout.renderItems[l]['data'][valuePath])\n                            : (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName'])) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            this.treemap.selectionId = nodeEle.id;\n                            if (k === 0 || this.legendSelectionCollection.length === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            this.treemap.selectionId = nodeEle.id;\n                            var legendItem = void 0;\n                            if (targetEle_1.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index);\n                                this.legendSelectId = legendItem.id;\n                                this.shapeElement = legendItem;\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index);\n                                this.shapeElement = targetEle_1;\n                            }\n                            setColor(legendItem, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            treemap.levelSelection.push(nodeEle.id);\n                            if (treemap.legendId.indexOf(targetEle_1.id) === -1) {\n                                treemap.legendId.push(targetEle_1.id);\n                            }\n                            if (treemap.legendId.indexOf(legendItem.id) === -1) {\n                                treemap.legendId.push(legendItem.id);\n                            }\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n                if (dataLength === 0 && this.treemap.palette && this.treemap.palette.length > 0) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if ((this.treemap.treeMapLegendModule.legendCollections[index]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName'] ||\n                            this.treemap.layout.renderItems[j]['levelOrderName'].indexOf(this.treemap.treeMapLegendModule.legendCollections[index]['levelOrderName']) > -1) &&\n                            ((!this.treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0) ?\n                                index === j : true)) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            pushCollection(this.legendSelectionCollection, index, j, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                            this.treemap.selectionId = nodeEle.id;\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            var legendItem = void 0;\n                            if (targetEle_1.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index);\n                                this.legendSelectId = legendItem.id;\n                                this.shapeElement = legendItem;\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index);\n                                this.legendSelectId = targetId;\n                                this.shapeElement = targetEle_1;\n                            }\n                            setColor(legendItem, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            treemap.levelSelection.push(nodeEle.id);\n                            if (treemap.legendId.indexOf(legendItem.id) === -1) {\n                                treemap.legendId.push(legendItem.id);\n                            }\n                            if (treemap.legendId.indexOf(targetEle_1.id) === -1) {\n                                treemap.legendId.push(targetEle_1.id);\n                            }\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, this.treemap);\n                this.legendSelectionCollection = [];\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n                this.treemap.legendId = [];\n                this.treemap.levelSelection = [];\n            }\n        }\n        else if (isDrillItem) {\n            removeLegend(this.legendSelectionCollection, this.treemap);\n            this.legendSelectionCollection = [];\n            this.legendSelect = true;\n            this.legendSelectId = '';\n            this.treemap.legendId = [];\n            this.treemap.levelSelection = [];\n        }\n    };\n    /**\n     * @param {string} levelOrder - Specifies the level order of treemap item\n     * @param {boolean} enable - Specifies the boolean value\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var index = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection);\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            var selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection);\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var location;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            if (!isNullOrUndefined(item)) {\n                value = item['weight'];\n                toolTipData = item['data'];\n                if (!isNullOrUndefined(item['options'])) {\n                    markerFill = item['options']['fill'];\n                }\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [(!isNullOrUndefined(this.tooltipSettings.format) ?\n                            textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) : null)\n                            || formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [(!isNullOrUndefined(this.tooltipSettings.format) ?\n                            textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) : null)\n                            || this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip'\n                    });\n                    tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.size = this.tooltipSettings.textStyle.size || this.treemap.themeStyle.tooltipFontSize;\n                this.tooltipSettings.textStyle.fontFamily = this.tooltipSettings.textStyle.fontFamily || this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.fontStyle = !isNullOrUndefined(this.tooltipSettings.textStyle.fontStyle) ? this.tooltipSettings.textStyle.fontStyle : 'Normal';\n                this.tooltipSettings.textStyle.fontWeight = this.tooltipSettings.textStyle.fontWeight || this.treemap.themeStyle.fontWeight;\n                this.tooltipSettings.textStyle.color = this.tooltipSettings.textStyle.color || this.treemap.themeStyle.tooltipFontColor;\n                // eslint-disable-next-line max-len\n                this.tooltipSettings.textStyle.opacity = this.tooltipSettings.textStyle.opacity || this.treemap.themeStyle.tooltipTextOpacity;\n                var border = {\n                    width: this.tooltipSettings.border.width || this.treemap.themeStyle.tooltipBorderWidth || 0,\n                    color: this.tooltipSettings.border.color || this.treemap.themeStyle.tooltipBorderColor || 'transparent'\n                };\n                if (this.treemap.enableHtmlSanitizer) {\n                    for (var a = 0; a < tooltipContent.length; a++) {\n                        tooltipContent[a] = SanitizeHtmlHelper.sanitize(tooltipContent[a]);\n                    }\n                }\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData, border: border,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                    _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                theme: this.treemap.theme,\n                enable: true,\n                header: '',\n                data: args['data'],\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                fill: this.treemap.tooltipSettings.fill ? this.treemap.tooltipSettings.fill : this.treemap.themeStyle.tooltipFillColor,\n                border: args['border'],\n                enableShadow: true\n            });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.treemap.isVue || this.treemap.isVue3) {\n                this.svgTooltip.controlInstance = this.treemap;\n            }\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     *\n     * @private\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     *\n     * @private\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} returns string\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.svgTooltip)) {\n            this.svgTooltip.destroy();\n        }\n        this.svgTooltip = null;\n        this.tooltipSettings = null;\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["extendStatics","_super","load","loaded","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","click","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","ChildProperty","Property","apply","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","fontFamily","fontWeight","TitleSettings","ColorMapping","LegendSettings","size","color","width","x","y","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","opacity","SelectionSettings","HighlightSettings","LevelSettings","Size","height","stringToNumber","value","containerSize","indexOf","parseInt","Rect","RectOption","id","fill","border","rect","dashArray","stroke","PathOption","measureText","text","font","measureObject","document","getElementById","createElement","body","appendChild","innerHTML","SanitizeHtmlHelper","sanitize","style","position","fontSize","fontStyle","visibility","top","left","whiteSpace","lineHeight","clientWidth","clientHeight","TextOption","anchor","transform","baseLine","connectorText","textTrim","maxWidth","label","substring","Location","findPosition","location","alignment","textSize","type","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","parent","isMinus","font-size","font-style","font-family","font-weight","text-anchor","dominant-baseline","SvgRenderer","isNullOrUndefined","search","drillLevelText","split","z","drillText","replace","len","tspanElement","createTSpan","setItemTemplateContent","targetId","targetElement","contentItemTemplate","itemSelect","itemTemplate","querySelector","getElement","itemsToOrder","a","isContainsData","source","pathName","processData","treemap","isExist","name","leaf","leafItemSettings","data","levels","groupPath","labelPath","weightValuePath","findChildren","keys","children","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","trim","e","convertElement","element","labelId","childElement","elementLength","cssText","templateHtml","regExp","RegExp","toString","findLabelLocation","labelSize","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","measureElementId","offsetHeight","offsetWidth","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","g","componentToHex","Number","rbg","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","charAt","colorNameToHex","nextColor","splitColor","length_1","splitColorValueOffset","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","selectionSettings","legendMaintain","legendGroup","legendId","legendSettings","treemapSVGRectElement","parseFloat","legendItem","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","isRGBValue","window","getComputedStyle","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","xValue","yValue","cos","PI","sin","href","isParentItem","item","TreeMapAjax","async","contentType","sendData","dataOptions","removeShape","collection","setColor","removeLegend","legendIndex","shapeId","legendShape","legendText","dataCount","textStyle","k","shapeElement","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","valuePath","rangeColorValuePath","dataLength","treeMapLegendModule","legendCollections","palette","pushCollection","number","legendElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","triggerDownload","fileName","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","removeElement","LayoutPanel","processLayoutPanel","totalRect","treemapLevelData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","currentLevel","calculateLayoutItems","count","enableBreadcrumb","renderLayoutItems","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","isHorizontal","forEach","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","newStack","currentMaxAspectRatio","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaHeight","areaWidth","isParent","parentRect","subXOffset","subYOffset","coordinates","x1","y1","dataLength_1","dataSum","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","txtVisible","eventArgs","templatePosition","renderText","groupId","templateEle","itemGroup","_this","elementID","interSectAction","rectPath","secondaryEle","templateGroup","layoutGroup","createGroup","isLeafItem","this_1","_loop_1","drillDownView","levelName","treemapItemRect","visible","getItemColor","labelFormat","headerFormat","showLabels","breadcrumbConnector","enableRtl","enableHtmlSanitizer","labelStyle","headerStyle","themeStyle","labelFontFamily","labelFontSize","textStyleOpacity","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","textColor","trigger","observedArgs","pathOptions","path","drawPath","renderItemText","renderTemplate","renderReactTemplates","enable","highlightSettings","tabIndex","cursor","svgObject","tspanText","customText","labelInterSectAction","textLocation","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","textName","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","colorValuePath","saturatedColor","rgbValue","backgroundColor","labelElement","templateId","baseTemplateId","templateLocation","textValue","destroy","currentRect","getThemeStyle","theme","toLowerCase","titleFontColor","titleFontWeight","subTitleFontColor","tooltipFillColor","tooltipFontColor","tooltipFontSize","legendTitleColor","legendTextColor","subtitleFontSize","legendFontSize","legendBorderColor","legendBorderWidth","tooltipFillOpacity","tooltipTextOpacity","tooltipBorderColor","tooltipBorderWidth","Theme","mapsTitleFont","Print","print","printWindow","open","outerHeight","outerWidth","argsData","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","printFunction","backgroundElement","div","cloneNode","Element","exportElement","getElementsByTagName","getModuleName","control","ImageExport","export","allowDownload","Promise","resolve","reject","image_1","context_1","availableSize","Browser","userAgent","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","Image","getContext","onload","drawImage","revokeObjectURL","toDataURL","src","PdfExport","orientation","PdfPageOrientation","Landscape","image","context","PdfDocument","imageString","pageSettings","pages","add","graphics","PdfBitmap","save","TreeMap","Component","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","renderElements","LevelsData","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","localAjax","fetchApiModule","Fetch","onSuccess","args","reader_1","treemap_1","FileReader","JSON","parse","readAsText","send","processingData","renderLegend","elementChange","isResized","isResize","renderComplete","firstChild","hasChildNodes","clearTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","titleText","margin","right","elementSize","trimmedTitle","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","level","currentData","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","levelIndex","childData","childItemLevel","childLevel","mainData_1","l","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","orderNames","childName","name_1","childGroupPath","start","currentPath","prevPath","previousData","currentName","IsChildHierarchy","current","isChild","groupObj","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeEvent","resizeOnTreeMap","bind","addEventListener","Internationalization","args_1","isDestroyed","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","doubleTapTimer1","targetEle","labelText","end","mouseEvent","preventDefault","itemIndex","textContent","Date","getMilliseconds","mouseDown","notify","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","text1","drillTextLevel","h","levelItems","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","layoutID","templateID","drillMouseMove","drillLength","startEvent","which","drillElementId","layerElementId","widthIncrement","heightIncrement","drilledLegendItems","endEvent","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","selectTreemapItem","requiredModules","modules","tooltipSettings","member","onPropertyChanged","newProp","oldProp","removeSvg","doubleTapTimer","getPersistData","Event","NotifyPropertyChanges","TreeMapLegend","page","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","firstItem","nextItem","leafIndex","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","itemTextStyle","maxSize","prevPositionY","nextPositionX","legendTextSize","Page","textMaxWidth","prvePositionX","nextPositionY","getPageChanged","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","legendItemRect","legendLength","rectWidth","rectHeight","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","actualValue","isRange","colorMapProcess","isDesaturation","outOfRangeLegend","gradientElement","showLegend","isAddNewLegendData","colors","q","stop1Color","colorStop","stop2Color","gradient","x2","y2","drawGradient","isDuplicate","legendGradientColor","legendLinearGradient","outfill","labelLegend","otherIndex","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","currentPage","itemId","textId","rectOptions","shapeBorder","translate","legendBorderRect","defaultLegendRtlLocation","spacing","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","legendRtlLocation","imageUrl","pagingText","pagingFont","pagingTextSize","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPageOptions","rightRectPageOptions","pageTextOptions","pagingGroup","leftPageX","rightPath","leftPageOptions","leftRectPageOptions","wireEvents","role","aria-label","borderStyle","legendBorder","pointerEvents","getLegendAlignment","trimTitle","textElement","renderInteractivePointer","interactiveId","pointerDrawn","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","strokeWidth","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","on","off","legendInteractiveGradient","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","processHighlight","orders","highlight","highLightElements","selectionModule","shapeSelected","legendSelectionCollection","selectedElementIndex","targetElementIndex","treeMapElement","selectionElements","legendSelectId","currentElement","legendShapeElement","selectedLegendIndex","shapeSelectId","targetIndex","length_2","shapeTarget","legendHighlightCollection","nodeEle","Elements","TreeMapSelection","selection","highlightModule","isDrillItem","nextSibling","selectionId","shapeSelect","length_3","undefined","shapeSelectionCollection","legendSelect","legendSelectIdIndex","length_4","targetEle_1","s","m","length_5","selectionElement","__rest","t","getOwnPropertySymbols","TreeMapTooltip","renderTooltip","tootipArgs","tooltipEle","toolTipData","markerFill","isTouch","pointerType","tooltipContent","tooltipId","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","enableShadow","isVue","isVue3","controlInstance","appendTo","tooltipElementId"],"mappings":"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"}