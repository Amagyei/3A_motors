{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/model/print.js","../../src/treemap/model/image-export.js","../../src/treemap/model/pdf-export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the size parameters.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n *\n * @param {string} value - specifies the text.\n * @param {number} containerSize - specifies the container size value.\n * @returns {number} - Returns the number value which is converted from string.\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n *\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size.\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = SanitizeHtmlHelper.sanitize(text);\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n *\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Trim the title text\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the string\n * @private\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Specifies the location parameters.\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n *\n * @param {Rect} location - Specifies the location of text.\n * @param {Alignment} alignment - Specifies the alignment of the text.\n * @param {Size} textSize - Specifies the size of the text.\n * @param {type} type - Specifies whether the provided text is title or subtitle.\n * @returns {Location} - Returns the location of text.\n * @private\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    var y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n *\n * @param {SvgRenderer} renderer - Specifies the rendering element of the SVG.\n * @param {any} renderOptions - Specifies the settings of the text.\n * @param {string} text - Specifies the text.\n * @returns {HTMLElement} - Returns the HTML element for the text.\n */\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n *\n * @param {TextOption} options - Specifies the text option\n * @param {FontModel} font - Specifies the font model\n * @param {string} color - Specifies the color\n * @param {HTMLElement | Element} parent - Specifies the parent element of the text\n * @param {boolean} isMinus - Specifies the boolean value\n * @returns {Element} - Returns the element\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var spacing = 5;\n        var drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 &&\n                !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\n/**\n *\n * @param {string} targetId - Specifies the id of the element to which template is to be appended.\n * @param {Element} targetElement - Specifies the element to which template is to be appended.\n * @param {string} contentItemTemplate - Specifies the content to be appended as template.\n * @returns {void}\n */\nexport function setItemTemplateContent(targetId, targetElement, contentItemTemplate) {\n    var itemSelect = targetId.split('_RectPath')[0];\n    var itemTemplate;\n    if (targetId.indexOf('_LabelTemplate') > -1) {\n        itemTemplate = targetElement;\n    }\n    else {\n        itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n    }\n    if (!isNullOrUndefined(itemTemplate)) {\n        itemTemplate.innerHTML = contentItemTemplate;\n    }\n}\n/**\n *\n * @param {string} id - Specifies the id of the element.\n * @returns {Element} - Returns the element.\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n *\n * @param {any} a - Specifies the first order of TreeMap leaf elements.\n * @param {any} b - Specifies the second order of TreeMap leaf elements.\n * @returns {number} - Returns the order of the TreeMap leaf element.\n */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\n/**\n *\n * @param {string[]} source - Specifies the data from the data source.\n * @param {string} pathName - Specifies the path name in the data source.\n * @param {any} processData - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {boolean} - Specifies whether data is available in the data source or not.\n */\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath :\n            treemap.weightValuePath;\n        var data = processData[path] || 'undefined';\n        if (source[i] === data) {\n            name += data + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\n/**\n *\n * @param {any} data - Specifies the data to which the children elements to be found.\n * @returns {any} - Returns the children elements of the TreeMap leaf element.\n */\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\n/**\n *\n * @param {any} data - Specifies the data to which highlight must be done.\n * @param {items} items - Specifies the data source items.\n * @param {string} mode - Specifies the mode of highlight.\n * @param {TreeMap} treeMap - Specifies the treemap instance.\n * @returns {string[]} - Returns the highlighted items.\n */\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n *\n * @param {string} template - Specifies the template\n * @returns {Function} - Returns the template function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n        else {\n            templateFn = compile(template);\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n * @param {HTMLCollection} element - Specifies the element\n * @param {string} labelId - Specifies the label id\n * @param {Object} data - Specifies the data\n * @returns {HTMLElement} - Returns the element\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId\n    });\n    childElement.style.cssText = 'position: absolute;pointer-events: auto;';\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        var regExp = RegExp;\n        templateHtml = templateHtml.replace(new regExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @param {LabelPosition} position - Specifies the position\n * @param {Size} labelSize - Specifies the label size.\n * @param {string} type - Specifies the type.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {Location} - Returns the text location.\n */\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\n/**\n *\n * @param {HTMLElement} element - Specifies the element to be measured.\n * @param {HTMLElement} parentElement - Specifies the parent element of the element to be measured.\n * @returns {Size} - Returns the element size.\n */\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @returns {number} - Returns the area width.\n */\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\n/**\n *\n * @param {Rect} input - Specifies input for the calculation.\n * @returns {number} - Returns the shortest edge.\n */\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\n/**\n *\n * @param {Rect} rect - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\n/**\n *\n * @param {Rect} container - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height\n    };\n}\n/**\n *\n * @param {number} pageX - Specifies the horizontal position of the mouse location.\n * @param {number} pageY - Specifies the vertical position of the mouse location.\n * @param {Element} element - Specifies the element to which the click is done.\n * @returns {Location} - Returns the clicked location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\n/**\n *\n * @param {ColorMappingModel[]} colorMapping - Specifies the color mapping instance.\n * @param {string} equalValue - Specifies the equal value.\n * @param {number | string} value - Specifies the range value.\n * @returns {any} - Returns the color mapping object.\n * @private\n */\nexport function colorMap(colorMapping, equalValue, value) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        var colorMappingValue = colorMapping[i].value ? colorMapping[i].value.toString() :\n            colorMapping[i].value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) &&\n                (colorMappingValue === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value)\n                || (colorMappingValue === equalValue)) {\n                if (colorMappingValue === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to)\n            || (colorMappingValue === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity)\n            && fill) {\n            opacity = deSaturationColor(colorMapping[i], value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\n/**\n *\n * @param {ColorMappingModel} colorMapping - Specifies the color mapping object.\n * @param {number} rangeValue - Specifies the range value.\n * @returns {string} - Returns the opacity for the color mapping.\n * @private\n */\nexport function deSaturationColor(colorMapping, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping object.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\n/**\n *\n * @param {number} r - Specifies the red color value.\n * @param {number} g - Specifies the green color value.\n * @param {number} b - Specifies the blue color value.\n * @returns {string} - Returns the fill color.\n */\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/**\n *\n * @param {number} value - Specifies the range value.\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {number} - Returns the color value.\n */\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\n/**\n *\n * @param {number} maximumWidth - Specifies the length of the text.\n * @param {string} dataLabel - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/**\n *\n * @param {number} maxWidth - Specifies the length of the text.\n * @param {string} label - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function textWrap(maxWidth, label, font) {\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n *\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {number} maxHeight - Specifies the maximum height.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the hidden text.\n * @private\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\n/**\n *\n * @param {number} a - Specifies the first value of the leaf.\n * @param {number} b - Specifies the second value of the leaf.\n * @returns {number} - Returns whether values are equal or not.\n */\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} element - Specifies the selected TreeMap leaf item.\n * @param {string} className -Specifies the selected class name.\n * @returns {void}\n */\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index] ||\n                element.children[0].id === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} legendGroup - Specifies the selected element.\n * @returns {void}\n */\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            if (treemap.legendSettings.mode === 'Interactive') {\n                for (var j = 0; j < legendGroup.childElementCount; j++) {\n                    if (legendGroup.childNodes[j]['id'] === elementId[i] ||\n                        parseFloat(legendGroup.childNodes[j]['id'].split('Index_')[1]) === parseFloat(elementId[i].split('Index_')[1])) {\n                        var treemapSVGRectElement = legendGroup.childNodes[j];\n                        treemapSVGRectElement.setAttribute('fill', treemap.selectionSettings.fill);\n                        treemapSVGRectElement.setAttribute('stroke', treemap.selectionSettings.border.color);\n                        treemapSVGRectElement.setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                        treemapSVGRectElement.setAttribute('opacity', treemap.selectionSettings.opacity);\n                    }\n                }\n            }\n            else {\n                var legendItem = document.getElementById(elementId[i]);\n                if (!isNullOrUndefined(legendItem)) {\n                    legendItem.setAttribute('fill', treemap.selectionSettings.fill);\n                    legendItem.setAttribute('stroke', treemap.selectionSettings.border.color);\n                    legendItem.setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    legendItem.setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\n/**\n *\n * @param {HTMLCollection} elements - Specifies the selected TreeMap element.\n * @param {string} type - Specifies the selection type.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeClassNames(elements, type, treemap) {\n    var element;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\n/**\n *\n * @param {SVGPathElement} element - Specifies the SVG path element.\n * @param {any} options - Specifies the settings for the SVG path element.\n * @returns {void}\n */\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    if (!isNullOrUndefined(options['fill'])) {\n        element.setAttribute('fill', options['fill']);\n    }\n    else {\n        element.setAttribute('fill', 'black');\n    }\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\n/**\n *\n * @param {string} format - Specifies the format value.\n * @param {any} data - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string} - Returns the formatted text.\n */\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\n/**\n *\n * @param {number} value - Specifies the text to be formatted.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string | number} - Returns the formatted text.\n */\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/**\n * @private\n */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * @param {ColorValue} value - Specfies the color value\n * @returns {string} - Returns the string\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * @param {number} value - Specifies the value\n * @returns {string} - Returns the string\n * @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * @param {string} hex - Specifies the hex value\n * @returns {ColorValue} - Returns the color value\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * @param {string} color - Specifies the color\n * @returns {string} - Returns the string\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var isRGBValue = color.replace(/[()RGBrgba ]/g, '').split(',');\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[0], 10), parseInt(isRGBValue[1], 10), parseInt(isRGBValue[2], 10)));\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {string} shape - Specifies the shape\n * @param {Size} size - Specifies the size\n * @param {string} url - Specifies the url\n * @param {PathOption} options - Specifies the options\n * @returns {Element} - Returns the element\n * @private\n */\nexport function drawSymbol(location, shape, size, url, options) {\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    return htmlElement;\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {Size} size - Specifies the size\n * @param {string} shape - Specifies the shape\n * @param {PathOption} options - Specifies the path option\n * @param {string} url - Specifies the string\n * @returns {IShapes} - Returns the shapes\n * @private\n */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            // eslint-disable-next-line no-case-declarations\n            var eq = 72;\n            // eslint-disable-next-line no-case-declarations\n            var xValue = void 0;\n            // eslint-disable-next-line no-case-declarations\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\n/**\n *\n * @param {any} data - Specifies the data source object.\n * @param {any} item - Specifies the leaf item.\n * @returns {boolean} - Returns whether the TreeMap item is level item or leaf item.\n */\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Specifies the data to be received through Ajax request for treemap.\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @returns {void}\n * @private\n */\nexport function removeShape(collection) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @param {TreeMap} treeMap - Specifies the treemap instance.\n * @returns {void}\n * @private\n */\nexport function removeLegend(collection, treeMap) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            var legendIndex = parseFloat(item['legendEle'].id.split('_Index_')[1]);\n            var isText = item['legendEle'].id.indexOf('Text') > -1;\n            var shapeId = isText ? item['legendEle'].id.replace('_Text', '') : item['legendEle'].id;\n            var legendShape = treeMap.legendSettings.mode === 'Interactive'\n                ? document.getElementById(shapeId)\n                : document.getElementById(treeMap.element.id + '_Legend_Shape_Index_' + legendIndex);\n            var legendText = treeMap.legendSettings.mode === 'Interactive'\n                ? document.getElementById(shapeId + '_Text')\n                : document.getElementById(treeMap.element.id + '_Legend_Text_Index_' + legendIndex);\n            if (!isNullOrUndefined(legendShape)) {\n                setColor(legendShape, item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            }\n            if (!isNullOrUndefined(legendText)) {\n                setColor(legendText, treeMap.legendSettings.textStyle.color, item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            }\n            var dataCount = !isNullOrUndefined(item['ShapeCollection']) ? item['ShapeCollection']['Elements'].length : 0;\n            for (var k = 0; k < dataCount; k++) {\n                var shapeElement = document.getElementById(item['ShapeCollection']['Elements'][k].id);\n                if (!isNullOrUndefined(shapeElement)) {\n                    setColor(shapeElement, item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n                }\n            }\n        }\n    }\n}\n/**\n *\n * @param {Element} element - Specifies the selected element.\n * @param {string} fill - Specifies the fill color.\n * @param {string} opacity - Specifies the opacity.\n * @param {string} borderColor - Specifies the border color.\n * @param {string} borderWidth - Specifies the border width.\n * @returns {void}\n */\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\n/**\n *\n * @param {any[]} collection - Specifies the selected item collection.\n * @param {any[]} element - Specifies the selected element collection.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeLegend(collection, treemap);\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\n/**\n *\n * @param {number} length - Specifies the length of the legend group.\n * @param {any} item - Specifies the legend item.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {number} - Returns the legend index.\n */\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    var valuePath = treemap.rangeColorValuePath;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        if (dataLength > 0) {\n            for (var j = 0; j < dataLength; j++) {\n                if ((!isNullOrUndefined(valuePath) && valuePath !== '' && treemap.leafItemSettings.colorMapping.length > 0 ?\n                    (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['data'][valuePath] === item['data'][valuePath])\n                    : treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']\n                        || item['levelOrderName'].indexOf(treemap.treeMapLegendModule.legendCollections[i]['legendName']) > -1)) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        else if (treemap.palette && treemap.palette.length > 0) {\n            if ((treemap.treeMapLegendModule.legendCollections[i]['levelOrderName'] === item['levelOrderName'] ||\n                (item['levelOrderName'].indexOf(treemap.treeMapLegendModule.legendCollections[i]['levelOrderName'])) > -1)\n                && treemap.treeMapLegendModule.legendCollections[i]['legendName'] === item['name']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @param {number} index - Specifies the index of legend.\n * @param {number} number - Specifies the leaf item index.\n * @param {Element} legendElement - Specifies the legend element.\n * @param {Element} shapeElement - Specifies the shape element.\n * @param {any[]} renderItems - Specifies the item index.\n * @param {any[]} legendCollection - Specifies the legend collection.\n * @returns {void}\n */\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name\n * @param {ExportType} type - Specifies the type\n * @param {string} url - Specifies the url\n * @param {boolean} isDownload - Specifies the boolean value\n * @returns {void}\n * @private\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n/**\n *\n * @param {string} id - Specifies the id of the element to be removed.\n * @returns {void}\n */\nexport function removeElement(id) {\n    var element = document.getElementById(id);\n    return element ? remove(element) : null;\n}\n","/**\n * Maps Themes doc\n */\nimport { defaultFont } from './constants';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Theme;\n(function (Theme) {\n    /**\n     * @private\n     */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * To get the theme style based on treemap theme.\n *\n * @param {TreeMapTheme} theme Specifies the theme of the treemap control.\n * @returns {IThemeStyle} Returns the theme.\n * @private\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontSize: '12px',\n                labelFontFamily: defaultFont,\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                labelFontFamily: defaultFont,\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#374151',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#374151',\n                legendTextColor: '#374151',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#D1D5DB',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#D1D5DB',\n                legendTextColor: '#D1D5DB',\n                fontFamily: 'Inter',\n                fontWeight: 'Normal',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwind3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#111827',\n                titleFontWeight: '600',\n                subTitleFontColor: '#111827',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#111827',\n                legendTextColor: '#111827',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'tailwind3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: '600',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Inter',\n                fontWeight: '400',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#212529',\n                titleFontWeight: '400',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '10px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#DEE2E6',\n                titleFontWeight: '400',\n                subTitleFontColor: '#DEE2E6',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#212529',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 0.9,\n                legendTitleColor: '#DEE2E6',\n                legendTextColor: '#DEE2E6',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '10px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#201F1E',\n                legendTextColor: '#201F1E',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#F3F2F1',\n                legendTextColor: '#F3F2F1',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                titleFontWeight: '500',\n                subTitleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#1C1B1F',\n                legendTextColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                fontWeight: '400',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'Roboto',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                titleFontWeight: '500',\n                subTitleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#E6E1E5',\n                legendTextColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                fontWeight: '400',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'Roboto',\n                labelFontSize: '12px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent2':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#242424',\n                titleFontWeight: '600',\n                subTitleFontColor: '#242424',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#242424',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#242424',\n                legendTextColor: '#242424',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent2dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: '600',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#292929',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n        case 'fluent2highcontrast':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: '600',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '12px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: '400',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI',\n                labelFontSize: '10px',\n                legendBorderColor: '#FFF',\n                legendBorderWidth: 1,\n                tooltipBorderColor: '#FFF',\n                tooltipBorderWidth: 1\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif',\n                labelFontSize: '12px',\n                labelFontFamily: defaultFont,\n                legendBorderColor: '#000000',\n                legendBorderWidth: 0\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n *\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n *\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n *\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n *\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n *\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n *\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n *\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n *\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n *\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n *\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap.\n *\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the title of the treemap.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null, fontWeight: null }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null, fontWeight: null }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, fontWeight: null }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: null, width: null }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, fontWeight: null }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill down to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: null, fontFamily: null }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: null, fontWeight: null, opacity: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the level leaf items of the treemap.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px', fontFamily: null }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data;\n        var totalRect;\n        if (this.treemap.treemapLevelData.levelsData && this.treemap.treemapLevelData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.treemapLevelData.levelsData[0], [])[0] : this.treemap.treemapLevelData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var x = this.treemap.drilledItems[count]['data'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var y = {};\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.treemapLevelData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.treemapLevelData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treemap = this.treemap;\n        var newData = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ?\n                        groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        var index;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 :\n                        (levels.length === 0) ? 0 : levels[index] ?\n                            levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var nextDatum = data[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight\n            };\n            return convertToRect(container);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var coordinates = [];\n        var isParent;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItem = {};\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItemGroupname = {};\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /** @private */\n    LayoutPanel.prototype.renderLayoutItems = function () {\n        var _this = this;\n        var position;\n        var treeMap = this.treemap;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var rectPath = '';\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template'\n        });\n        templateGroup.style.cssText = 'overflow: hidden; position: absolute;pointer-events: none;' +\n            'top:' + treeMap.areaRect.y + 'px;' +\n            'left:' + treeMap.areaRect.x + 'px;' +\n            'height:' + treeMap.areaRect.height + 'px;' +\n            'width:' + treeMap.areaRect.width + 'px;';\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? (treeMap.legendSettings.visible ? this_1.treemap.totalRect\n                : convertToContainer(this_1.treemap.totalRect)) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName || 'undefined';\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            if (treeMap.enableHtmlSanitizer) {\n                renderText = SanitizeHtmlHelper.sanitize(renderText);\n            }\n            var fontFamily = (isLeafItem ? leaf.labelStyle.fontFamily : levels[index].headerStyle.fontFamily);\n            fontFamily = fontFamily || this_1.treemap.themeStyle.labelFontFamily;\n            var size = (isLeafItem ? leaf.labelStyle.size : levels[index].headerStyle.size);\n            size = size || this_1.treemap.themeStyle.labelFontSize;\n            var fontWeight = (isLeafItem ? leaf.labelStyle.fontWeight : levels[index].headerStyle.fontWeight);\n            fontWeight = fontWeight || this_1.treemap.themeStyle.fontWeight;\n            var color = (isLeafItem ? leaf.labelStyle.color : levels[index].headerStyle.color);\n            var fontStyle = (isLeafItem ? leaf.labelStyle.fontStyle : levels[index].headerStyle.fontStyle);\n            var textStyleOpacity = (isLeafItem ? leaf.labelStyle.opacity : levels[index].headerStyle.opacity);\n            textStyle = {\n                fontFamily: fontFamily, size: size, fontWeight: fontWeight, color: color, fontStyle: fontStyle, opacity: textStyleOpacity\n            };\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options'], textColor: textStyle.color\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        textStyle.color = eventArgs.textColor ? eventArgs.textColor : textStyle.color;\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        if (!isNullOrUndefined(templateEle)) {\n                            templateGroup.appendChild(templateEle);\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            _this.treemap.renderReactTemplates();\n                        }\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    if ((_this.treemap.enableDrillDown && isLeafItem) || (_this.treemap.selectionSettings.enable ||\n                        _this.treemap.highlightSettings.enable)) {\n                        itemGroup.setAttribute('role', 'button');\n                        itemGroup.setAttribute('tabindex', _this.treemap.tabIndex.toString());\n                        itemGroup.style.cursor = _this.treemap.highlightSettings.enable && !_this.treemap.selectionSettings.enable && (_this.treemap.enableDrillDown && item['groupIndex'] === (_this.treemap.levels.length - 1)) ? 'default' :\n                            _this.treemap.highlightSettings.enable && !_this.treemap.selectionSettings.enable && !_this.treemap.enableDrillDown ? 'default' : 'pointer';\n                    }\n                    else {\n                        itemGroup.setAttribute('role', 'region');\n                    }\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n        maintainSelection(this.treemap, this.layoutGroup, 'treeMapSelection');\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var padding = 5;\n        var textSize;\n        var textCollection = [];\n        var customText;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        var textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        var textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(treemap.treemapLevelData.defaultLevelsData)) {\n            if (treemap.treemapLevelData.defaultLevelsData.length > 0) {\n                treemap.treemapLevelData.levelsData = treemap.treemapLevelData.defaultLevelsData;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentData = findChildren(treemap.treemapLevelData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var option = colorMap(colorMapping, item['data'][treemap.equalColorValuePath], item['data'][treemap.rangeColorValuePath]);\n            if (!isNullOrUndefined(option)) {\n                itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n                itemOpacity = option['opacity'];\n            }\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : !isNullOrUndefined(item['options']) ?\n                        item['options'].fill : (!isNullOrUndefined(treemap.palette) && treemap.palette.length > 0) ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     *\n     * @param {string} color - Specifies the color\n     * @returns {string} - Returns the color\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, max-len\n    secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype']) && typeof template === 'string') {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                var regExp = RegExp;\n                template = template.replace(new regExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        if (this.treemap.enableHtmlSanitizer && typeof template === 'string') {\n            template = SanitizeHtmlHelper.sanitize(template);\n        }\n        var labelElement;\n        if (!isNullOrUndefined(document.getElementById(this.treemap.element.id + '_Secondary_Element'))) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn = getTemplateFunction(template);\n            var templateElement = templateFn(item['data'], this.treemap, template, this.treemap.element.id + baseTemplateId, false);\n            labelElement = convertElement(templateElement, templateId, item['data']);\n            var templateSize = measureElement(labelElement, secondaryEle);\n            var templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n            labelElement.style.left = templateLocation.x + 'px';\n            labelElement.style.top = templateLocation.y + 'px';\n        }\n        return labelElement;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    LayoutPanel.prototype.destroy = function () {\n        this.treemap = null;\n        this.currentRect = null;\n        this.layoutGroup = null;\n        this.renderer = null;\n        this.renderItems = [];\n        this.parentData = [];\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * Print module handles the print functionality for treemap.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function Print(control) {\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (treeMap, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(treeMap, elements), name: beforePrint\n        };\n        treeMap.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {string[] | string | Element} elements - Specifies the element\n     * @returns {Element} - Returns the element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (treeMap, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = treeMap.element.cloneNode(true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Tailwind3' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3' ||\n                        treeMap.theme === 'Fluent2')\n                        && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Tailwind3Dark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark' ||\n                        treeMap.theme === 'Fluent2Dark' || treeMap.theme === 'Fluent2HighContrast')\n                        && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print module.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","import { createElement, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * ImageExport module handles the export to image functionality for treemap.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function ImageExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the file or not.\n     * @returns {Promise} - Returns the promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (treeMap, type, fileName, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'height': treeMap.availableSize.height.toString(),\n                    'width': treeMap.availableSize.width.toString()\n                }\n            });\n            var exportElement = treeMap.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Tailwind3' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3' ||\n                    treeMap.theme === 'Fluent2')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n                else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Tailwind3Dark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark' ||\n                    treeMap.theme === 'Fluent2Dark' || treeMap.theme === 'Fluent2HighContrast')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                }\n            }\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ImageExport.prototype.destroy = function () { };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * PdfExport module handles the export to pdf functionality for treemap.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function PdfExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName - Specifies the name of the document.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the treemap.\n     * @param {boolean} allowDownload - Specifies whether to download the document or not.\n     * @returns {Promise} - Returns the string.\n     * @private\n     */\n    PdfExport.prototype.export = function (treeMap, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': treeMap.availableSize.width.toString(),\n                    'height': treeMap.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = treeMap.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Tailwind3' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3' ||\n                    treeMap.theme === 'Fluent2')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n                else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Tailwind3Dark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark' ||\n                    treeMap.theme === 'Fluent2Dark' || treeMap.theme === 'Fluent2HighContrast')\n                    && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                }\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (treeMap.availableSize.width - 60), treeMap.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Fetch, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeElement, setItemTemplateContent, legendMaintain, removeLegend } from '../treemap/utils/helper';\nimport { removeClassNames, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\nimport { Print } from './model/print';\nimport { ImageExport } from './model/image-export';\nimport { PdfExport } from './model/pdf-export';\n/**\n * Represents the treemap control. It is used to visualize both hierarchical and flat data.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**\n     * Constructor for TreeMap.\n     *\n     * @param {TreeMapModel} options - Specifies the treemap instance.\n     * @param {string | HTMLElement} element - Specifies the treemap element.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * resize the treemap\n         */\n        _this.isResize = false;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.trigger(load, { treemap: this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        this.renderElements();\n    };\n    TreeMap.prototype.renderElements = function () {\n        this.treemapLevelData = new LevelsData();\n        this.treemapLevelData.levelsData = null;\n        this.treemapLevelData.defaultLevelsData = null;\n        this.treemapLevelData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.treemapLevelData.levelsData)) {\n            this.treemapLevelData.defaultLevelsData = this.treemapLevelData.levelsData;\n        }\n        this.processDataManager();\n    };\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var fetchApiModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataManager = dataModule.executeQuery(queryModule);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            fetchApiModule = new Fetch(localAjax.dataOptions, localAjax.type, localAjax.contentType);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            fetchApiModule.onSuccess = function (args) {\n                if (!isNullOrUndefined(args.type) && args.type === 'application/octet-stream') {\n                    var reader_1 = new FileReader();\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    var treemap_1 = _this;\n                    reader_1.onload = function () {\n                        args = JSON.parse(reader_1.result.toString());\n                        treemap_1.dataSource = args;\n                        treemap_1.renderTreeMapElements();\n                    };\n                    reader_1.readAsText(args);\n                }\n                else {\n                    _this.dataSource = args;\n                    _this.renderTreeMapElements();\n                }\n            };\n            fetchApiModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        if (!isNullOrUndefined(this.treeMapLegendModule) && this.legendSettings.visible) {\n            legendMaintain(this, this.treeMapLegendModule.legendGroup);\n        }\n        this.elementChange();\n        this.trigger(loaded, { treemap: this, isResized: this.isResize });\n        this.isResize = false;\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.layout)) {\n            this.layout = new LayoutPanel(this);\n        }\n        this.clearTemplate();\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element'\n            });\n            secondaryElement.style.cssText = 'position: absolute;z-index:1;';\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup\n            && !isNullOrUndefined(this.svgObject) && !isNullOrUndefined(document.getElementById(this.layout.layoutGroup.id))\n            && !isNullOrUndefined(document.getElementById(this.treeMapLegendModule.legendGroup.id))) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * Render the treemap border\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = {\n            color: title.textStyle.color, size: title.textStyle.size, fontFamily: title.textStyle.fontFamily,\n            fontStyle: title.textStyle.fontStyle, fontWeight: title.textStyle.fontWeight, opacity: title.textStyle.opacity\n        };\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        style.fontFamily = style.fontFamily || this.themeStyle.fontFamily;\n        style.fontWeight = style.fontWeight || this.themeStyle.titleFontWeight;\n        style.size = style.size || (type === 'title' ? this.themeStyle.fontSize : this.themeStyle.subtitleFontSize);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var titleText = this.enableHtmlSanitizer ? (SanitizeHtmlHelper.sanitize(title.text)) : title.text;\n            var trimmedTitle = textTrim(width, titleText, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || titleText);\n            element.setAttribute('role', 'region');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.treemapLevelData.levelsData = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var data_1 = {};\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        child.forEach(function (currentData) {\n                            if (currentData[path]) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path],\n                                    levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.treemapLevelData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.treemapLevelData.hierarchyData = [];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.treemapLevelData.hierarchyData = extend([], this.dataSource, this.treemapLevelData.hierarchyData, true);\n                    for (var i = 0; i < this.treemapLevelData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.treemapLevelData.hierarchyData[i], i);\n                    }\n                    this.treemapLevelData.levelsData = this.treemapLevelData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.treemapLevelData.levelsData.length > 1) {\n                        this.reOrderLevelData(this.treemapLevelData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.treemapLevelData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childData;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newData = {};\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.treemapLevelData.hierarchyData.length - 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mainData_1 = this.treemapLevelData.hierarchyData[0][this.levels[0].groupPath];\n            if (!isNullOrUndefined(mainData_1)) {\n                for (var k = 0; k < this.treemapLevelData.hierarchyData.length; k++) {\n                    childData = findChildren(this.treemapLevelData.hierarchyData[k])['values'];\n                    if (k !== 0 && childData) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                        this.treemapLevelData.hierarchyData.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n                mainData_1 = this.treemapLevelData.hierarchyData[0][this.levels[0].groupPath];\n                for (var l = 0; l < mainData_1.length; l++) {\n                    newData[this.levels[0].groupPath] = mainData_1;\n                    mainData_1[l]['parent'] = newData;\n                }\n            }\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the treemap.\n     * @returns {void}\n     */\n    TreeMap.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the extension type of the exported document.\n     * @param {string} fileName - Specifies file name for exporting the rendered TreeMap.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document.\n     * @param {boolean} allowDownload - Specifies whether the exported file should be downloaded or not.\n     * @returns {string} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    TreeMap.prototype.processFlatJsonData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var orderNames = [];\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var level = {};\n            level['level'] = i;\n            level[groupPath] = [];\n            this.treemapLevelData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var currentData = {};\n                var childName = '';\n                if (!isNullOrUndefined(groupPath)) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any, max-len\n                        this.treemapLevelData.levelsData[(this.treemapLevelData.levelsData.length - 1)][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     *\n     * @param {number} start - Specifies the start value of the treemap level.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = this.treemapLevelData.levelsData[start][currentPath];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var previousData = this.treemapLevelData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ?\n                    [] : previousData[j][currentPath];\n                if (this.IsChildHierarchy(currentName.split('#'), previousData[j]['levelOrderName'].split('#'))) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.treemapLevelData.levelsData[this.treemapLevelData.levelsData.length - 1][currentPath], 'Child');\n        this.treemapLevelData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.IsChildHierarchy = function (current, previous) {\n        var isChild = false;\n        for (var i = 0; i < previous.length; i++) {\n            if (current.length < i || previous[i] !== current[i]) {\n                return false;\n            }\n            else {\n                isChild = true;\n            }\n        }\n        return isChild;\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     *\n     * @param {any[]} processData - Specifies the treemap data.\n     * @param {string} type - Specifies the type of the data.\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var split;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupName;\n        var groupObj = {};\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * To bind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        this.resizeEvent = this.resizeOnTreeMap.bind(this);\n        window.addEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * Method to set culture for maps\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('role', 'region');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     *\n     * @param {Event} e - Specifies the pointer event.\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            this.isResize = true;\n            var args_1 = {\n                name: resize,\n                cancel: false,\n                previousSize: this.availableSize,\n                currentSize: new Size(0, 0),\n                treemap: this\n            };\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-treemap')) {\n                this.resizeTo = setTimeout(function () {\n                    _this.unWireEVents();\n                    _this.createSvg();\n                    _this.refreshing = true;\n                    _this.wireEVents();\n                    args_1.currentSize = _this.availableSize;\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    _this.trigger(resize, args_1, function (observedArgs) {\n                        _this.render();\n                        _this.refreshing = false;\n                    });\n                }, 500);\n            }\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the mouse click event in the treemap.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_Item_Index_')[1]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.textContent = observedArgs.text;\n                    }\n                    else {\n                        setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        else {\n            this.element.style.cursor = 'default';\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     *\n     * @param {string} labelText - Specifies the label text.\n     * @param {any} item - Specifies the treemap item.\n     * @returns {any} - Returns label of the drilled level.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {boolean} directLevel - Specifies the current level.\n     * @returns {boolean} - check whether it is previous level or not.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {number} i - Specifies the treemap item.\n     * @returns {any} - return the new drill down object.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var drillLevelChild;\n        var newDrillItem = {};\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var index;\n        var newDrillItem = {};\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            index = parseFloat(targetId.split('_Item_Index_')[1]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.textContent;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: newDrillItem\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems();\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @return {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeLegend(this.treeMapHighlightModule.shapeHighlightCollection, this);\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     *\n     * @param {string[]} levelOrder - Specifies the order of the level.\n     * @param {boolean} isSelected - Specifies whether the treemap item should be selected or the selection should be removed.\n     * @return {void}\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the modules\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this],\n                name: 'TreeMapTooltip'\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this],\n                name: 'TreeMapHighlight'\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this],\n                name: 'TreeMapSelection'\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this],\n                name: 'TreeMapLegend'\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print],\n                name: 'Print'\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport],\n                name: 'ImageExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport],\n                name: 'PdfExport'\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeMapModel} newProp - Specifies the new property\n     * @param {TreeMapModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.isDestroyed) {\n            var render = false;\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'background':\n                        this.renderBorder();\n                        break;\n                    case 'height':\n                    case 'width':\n                    case 'layoutType':\n                    case 'levels':\n                    case 'drillDownView':\n                    case 'renderDirection':\n                    case 'leafItemSettings':\n                    case 'legendSettings':\n                    case 'dataSource':\n                        render = true;\n                        break;\n                }\n            }\n            if (render) {\n                this.createSvg();\n                this.renderElements();\n            }\n        }\n    };\n    /**\n     * Gets component name.\n     *\n     * @returns {string} - return the treemap instance.\n     * @private\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method destroys the treemap. This method removes the events associated with the treemap and disposes the objects created for rendering and updating the treemap.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        removeElement('treeMapMeasureText');\n        this.drilledItems = [];\n        this.levelSelection = [];\n        this.legendId = [];\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n        this.areaRect = null;\n        this.themeStyle = null;\n        this.totalRect = null;\n        this.drilledLegendItems = null;\n        this.doubleTapTimer = null;\n        this.treemapLevelData = null;\n        this.resizeEvent = null;\n        this.availableSize = null;\n        this.intl = null;\n        if (!isNullOrUndefined(this.layout)) {\n            this.layout.destroy();\n        }\n        this.layout = null;\n        this.renderer = null;\n    };\n    TreeMap.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        /** @private */\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        /** @private */\n        this.heightIncrement = 0;\n        /** @private */\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.page = 0;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /** @private */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.treemapLevelData.levelsData[0]);\n        if (((!isNullOrUndefined(this.treemap.palette) && this.treemap.palette.length > 0) || !isNullOrUndefined(treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(treemap.treemapLevelData.levelsData[0]);\n        }\n        if (this.legendCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.levelIndex > nextItem.levelIndex) ? 1 :\n                (firstItem.levelIndex < nextItem.levelIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.groupIndex > nextItem.groupIndex) ? 1 :\n                (firstItem.groupIndex < nextItem.groupIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.leafIndex > nextItem.leafIndex) ? 1 :\n                (firstItem.leafIndex < nextItem.leafIndex) ? -1 : 0; });\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = treemap.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(legend.title.text) : legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = titleTextStyle.fontFamily || treemap.themeStyle.fontFamily;\n            titleTextStyle.fontWeight = titleTextStyle.fontWeight || treemap.themeStyle.titleFontWeight;\n            titleTextStyle.size = titleTextStyle.size || treemap.themeStyle.subtitleFontSize;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var itemTextStyle = legend.textStyle;\n            itemTextStyle.size = itemTextStyle.size || treemap.themeStyle.legendFontSize;\n            itemTextStyle.fontFamily = itemTextStyle.fontFamily || treemap.themeStyle.fontFamily;\n            itemTextStyle.fontWeight = itemTextStyle.fontWeight || treemap.themeStyle.fontWeight;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(treemap.enableHtmlSanitizer ?\n                        SanitizeHtmlHelper.sanitize(legendItem['legendName']) : legendItem['legendName'], itemTextStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[0]['Collection'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var legendLength = this.legendCollections.length;\n                var rectWidth = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength) :\n                    (legendWidth / legendLength) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                var rectHeight = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength) : (legendHeight / legendLength);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth : rectHeight), legendText, itemTextStyle);\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth) - itemStartX) :\n                            (rectWidth + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth, height: rectHeight, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var childElement = this.treemap.drilledLegendItems;\n            if (!isNullOrUndefined(childElement['data']['options'])) {\n                legendFillColor = childElement['data']['options']['fill'];\n            }\n            else {\n                for (var k = 0; k < childElement.length; k++) {\n                    legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                        childElement[k]['data'][this.treemap.colorValuePath];\n                    break;\n                }\n            }\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight'],\n                            levelOrderName: child[i]['levelOrderName']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var isAddData;\n        var fill;\n        var rangeValue;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData;\n        var legendText;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var j = 0; j < colorMapping.length; j++) {\n                var colorMap = colorMapping[j];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    var gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue, levelIndex: !isLeafItem ? j : -1, leafIndex: isLeafItem ? j : -1,\n                        legendName: legendText, legendFill: fill, legendData: [], groupIndex: !isLeafItem ? groupIndex : -1,\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess) {\n                    colorMapProcess = false;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                            this.removeDuplicates(this.legendCollections, labelLegend) : false;\n                        if (isNullOrUndefined(this.outOfRangeLegend) && !isDuplicate) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill, groupIndex: (!isLeafItem || groupIndex > -1) ? groupIndex : -1\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        for (var k = this.legendCollections.length - 1; k >= 0; k--) {\n                            if (this.legendCollections[k]['groupIndex'] === data[i]['groupIndex']) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                this.legendCollections[k]['legendData'].push(data[i]);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To draw the legend\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var legend = this.treemap.legendSettings;\n        var render = this.treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: this.treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = this.treemap.element.id + '_Legend_Index_' + i;\n                var textId = this.treemap.element.id + '_Legend_Index_' + i + '_Text';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (this.treemap.legendSettings.position === 'Left' || this.treemap.legendSettings.position === 'Right'\n                        || (this.treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                var text = this.treemap.enableHtmlSanitizer ? (SanitizeHtmlHelper.sanitize(item['text'])) : item['text'];\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', text, '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textOptions;\n        var legendRtlLocation;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendText = this_1.treemap.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(collection['DisplayText']) : collection['DisplayText'];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                legendElement.setAttribute('aria-label', legendText + ' Legend');\n                legendElement.setAttribute('role', 'region');\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': '',\n                    'role': 'region',\n                    'aria-label': pagingText\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var borderStyle = {\n            color: legend.border.color || this.treemap.themeStyle.legendBorderColor,\n            width: legend.border.width || this.treemap.themeStyle.legendBorderWidth\n        };\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, borderStyle, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var legend = this.treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = this.treemap.enableHtmlSanitizer ? (SanitizeHtmlHelper.sanitize(legend.title.text)) : legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(this.treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            var textElement = renderTextElement(textOptions, textStyle, textStyle.color ||\n                this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n            textElement.setAttribute('role', 'region');\n            textElement.setAttribute('aria-label', legendTitle);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     *\n     * @param {PointerEvent | TouchEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        var pointerDrawn = false;\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentData = void 0;\n            var legendRect = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_Item_Index_')[1])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length && !pointerDrawn; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData']) && currentData['legendData'].length > 0) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = currentData['legendData'];\n                    var valuePath = treemap.rangeColorValuePath;\n                    if (targetItem['levelOrderName'].indexOf(this.legendCollections[i]['legendName']) > -1) {\n                        this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                        pointerDrawn = true;\n                    }\n                    else {\n                        for (var j = 0; j < data.length; j++) {\n                            if ((treemap.rangeColorValuePath && treemap.leafItemSettings.colorMapping.length > 0)\n                                ? data[j]['data'][valuePath] === targetItem['data'][valuePath]\n                                : (data[j]['levelOrderName'] === targetItem['levelOrderName'] ||\n                                    data[j]['levelOrderName'].indexOf(targetItem['levelOrderName']) > -1)) {\n                                this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                                pointerDrawn = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else if (this.treemap.leafItemSettings.colorMapping.length === 0 && this.treemap.palette) {\n                    if (targetItem['levelOrderName'].indexOf(currentData['levelOrderName']) > -1) {\n                        this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                        pointerDrawn = true;\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        // eslint-disable-next-line prefer-const\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    /**\n     * @param {PointerEvent} e - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the interactive pointer\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        if (this.currentPage >= 0 && this.currentPage < this.totalPages.length) {\n            this.drawLegend();\n        }\n        else {\n            this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? 0 : this.totalPages.length - 1;\n        }\n    };\n    /**\n     * Wire events for event handler\n     *\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To add the event listener\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the event listener\n     *\n     * @private\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} Returns the legend module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function () {\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = null;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.outOfRangeLegend = null;\n        this.totalPages = [];\n        this.translate = null;\n        this.legendBorderRect = null;\n        this.legendGroup = null;\n        this.legendNames = [];\n        this.defsElement = null;\n        this.legendLinearGradient = null;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = null;\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     *\n     * @param {ColorMappingModel} colorMap - Specifies the color mapping instance.\n     * @param {number} legendIndex - Specifies the index of legend.\n     * @returns {string} - Returns the legend color.\n     * @private\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection, setItemTemplateContent } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in highlight\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {boolean} - return the highlight process is true or false.\n     * @private\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        var shapeSelected = false;\n        if (selectionModule && selectionModule.legendSelectionCollection.length > 0) {\n            for (var i = 0; i < selectionModule.legendSelectionCollection.length; i++) {\n                for (var j = 0; j < selectionModule.legendSelectionCollection[i]['ShapeCollection']['Elements'].length; j++) {\n                    var selectedElementIndex = parseFloat(selectionModule.legendSelectionCollection[i]['ShapeCollection']['Elements'][j].id.split('Item_Index_')[1].split('_')[0]);\n                    var targetElementIndex = targetId.indexOf('_Item_Index_') > -1 ? parseFloat(targetId.split('Item_Index_')[1].split('_')[0]) : null;\n                    if (selectionModule.legendSelectionCollection[i]['ShapeCollection']['Elements'][j].id === targetId ||\n                        selectedElementIndex === targetElementIndex) {\n                        shapeSelected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf('_Item_Index') > -1 && !shapeSelected) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = (!treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0 &&\n                        treemap.leafItemSettings.colorMapping.length === 0 && treemap.levels.length === 0) ?\n                        parseFloat(targetId.split('_Item_Index_')[1]) : getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        var legendShapeElement = selectionModule ? selectionModule.shapeElement : null;\n                        if (selectionModule ? this.shapeElement !== legendShapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeLegend(this.shapeHighlightCollection, treemap);\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            var legendText = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index)\n                                : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index + '_Text');\n                            setColor(legendText, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                        if (this.treemap.legendSettings.mode === 'Interactive') {\n                            this.treemap.treeMapLegendModule.removeInteractivePointer();\n                        }\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ?\n                        this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            var valuePath = treemap.rangeColorValuePath;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            var targetItem = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                            item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process &&\n                                (!isNullOrUndefined(valuePath) && valuePath !== '' ?\n                                    item['data'][valuePath] === targetItem['data'][valuePath] : true)) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1 || targetId.indexOf('_Legend_Text_Index') > -1) {\n            if (!isNullOrUndefined(selectionModule)) {\n                selectionModule.legendSelectId = !isNullOrUndefined(treemap.legendId[0]) ? treemap.legendId[0] : null;\n            }\n            var selectedLegendIndex = selectionModule && selectionModule.legendSelectId ?\n                parseFloat(selectionModule.legendSelectId.split('Index_')[1]) :\n                (selectionModule && selectionModule.shapeSelectId ? parseFloat(selectionModule.shapeSelectId.split('Index_')[1]) : null);\n            var targetIndex = this.treemap.legendSettings.mode === 'Default' ? (targetId.indexOf('Text') === -1 ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Text_Index_')[1]))\n                : parseFloat(targetId.split('_Legend_Index_')[1]);\n            if (this.treemap.legendSettings.visible && targetIndex !== selectedLegendIndex) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var valuePath = treemap.rangeColorValuePath;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, this.treemap);\n                    this.legendHighlightCollection = [];\n                }\n                this.shapeTarget = 'highlight';\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[targetIndex]['legendData'].length;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if ((!isNullOrUndefined(valuePath) && valuePath !== '' && treemap.leafItemSettings.colorMapping.length > 0)\n                            ? treemap.treeMapLegendModule.legendCollections[targetIndex]['legendData'][i]['data'][valuePath] === treemap.layout.renderItems[j]['data'][valuePath]\n                            : (treemap.treeMapLegendModule.legendCollections[targetIndex]['legendData'][i]['levelOrderName'] === treemap.layout.renderItems[j]['levelOrderName'])) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0 || this.legendHighlightCollection.length === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, targetIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            var legendItem = void 0;\n                            if (targetEle.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + targetIndex);\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + targetIndex);\n                            }\n                            setColor(legendItem, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n                if (dataLength === 0 && this.treemap.palette && this.treemap.palette.length > 0) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if ((this.treemap.treeMapLegendModule.legendCollections[targetIndex]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName'] ||\n                            this.treemap.layout.renderItems[j]['levelOrderName'].indexOf(this.treemap.treeMapLegendModule.legendCollections[targetIndex]['levelOrderName']) > -1) &&\n                            ((!this.treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0) ?\n                                targetIndex === j : true)) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            pushCollection(this.legendHighlightCollection, targetIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            var legendItem = void 0;\n                            if (targetEle.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + targetIndex);\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + targetIndex);\n                            }\n                            setColor(legendItem, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ?\n                        selectionModule.legendSelect : true) {\n                        removeLegend(this.shapeHighlightCollection, treemap);\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, this.treemap);\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeSelectionCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in selection\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var selectionElements = [];\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        item = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n        var isDrillItem = (item && !item.isLeafItem && treemap.enableDrillDown) &&\n            (targetEle.nextSibling.textContent.indexOf('[+]') > -1 || targetEle.nextSibling.textContent.indexOf('[-]') > -1);\n        if (targetId.indexOf('_Item_Index') > -1 && !isDrillItem) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId) {\n                treemap.levelSelection = [];\n                treemap.legendId = [];\n                this.shapeSelectId = '';\n                removeLegend(this.legendSelectionCollection, treemap);\n                this.legendSelectionCollection = [];\n                treeMapElement = document.getElementById(layoutID);\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeLegend(this.shapeSelectionCollection, treemap);\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = (!treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0 &&\n                        treemap.leafItemSettings.colorMapping.length === 0\n                        && treemap.levels.length === 0) ?\n                        parseFloat(targetId.split('_Item_Index_')[1]) : getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        var legendText = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index)\n                            : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index + '_Text');\n                        setColor(legendText, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                        treemap.legendId.push(this.shapeElement.id);\n                        treemap.legendId.push(legendText.id);\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var targetItem = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                    item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                    var valuePath = treemap.rangeColorValuePath;\n                    if (orders.indexOf(item['levelOrderName']) > -1 &&\n                        (!isNullOrUndefined(valuePath) && valuePath !== '' ?\n                            item['data'][valuePath] === targetItem['data'][valuePath] : true)) {\n                        selectionElements.push(element);\n                        if (targetId.indexOf('_RectPath') > -1) {\n                            treemap.levelSelection.push(targetId);\n                        }\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    treemap.trigger(itemSelected, eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                        }\n                    });\n                }\n            }\n            else {\n                removeLegend(this.shapeSelectionCollection, treemap);\n                this.treemap.legendId = [];\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.levelSelection = [];\n                if (this.legendSelect) {\n                    removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                    this.treemap.selectionId = '';\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1 || targetId.indexOf('_Legend_Text_') > -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            var legendSelectIdIndex = !isNullOrUndefined(this.legendSelectId) ? parseFloat(this.legendSelectId.split('_Index_')[1]) : null;\n            if (this.treemap.legendSettings.visible && (legendSelectIdIndex !== parseFloat(targetId.split('_Index_')[1]))) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                treemap.legendId = [];\n                treemap.levelSelection = [];\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = !isNaN(parseInt(targetId[targetId.length - 1], 10)) ?\n                    parseInt(targetId[targetId.length - 1], 10) :\n                    parseInt(targetId[targetId.length - 6], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, treemap);\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                removeLegend(this.shapeSelectionCollection, treemap);\n                this.legendSelectionCollection = [];\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                    highlightModule.legendHighlightCollection = [];\n                }\n                var valuePath = treemap.rangeColorValuePath;\n                var index = this.treemap.legendSettings.mode === 'Default' ? (targetId.indexOf('Text') === -1 ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Text_Index_')[1]))\n                    : parseFloat(targetId.split('_Legend_Index_')[1]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if ((!isNullOrUndefined(valuePath) && valuePath !== '' && treemap.leafItemSettings.colorMapping.length > 0) ?\n                            (treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['data'][valuePath] === treemap.layout.renderItems[l]['data'][valuePath])\n                            : (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName'])) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            this.treemap.selectionId = nodeEle.id;\n                            if (k === 0 || this.legendSelectionCollection.length === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            this.treemap.selectionId = nodeEle.id;\n                            var legendItem = void 0;\n                            if (targetEle_1.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index);\n                                this.legendSelectId = legendItem.id;\n                                this.shapeElement = legendItem;\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index);\n                                this.shapeElement = targetEle_1;\n                            }\n                            setColor(legendItem, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            treemap.levelSelection.push(nodeEle.id);\n                            if (treemap.legendId.indexOf(targetEle_1.id) === -1) {\n                                treemap.legendId.push(targetEle_1.id);\n                            }\n                            if (treemap.legendId.indexOf(legendItem.id) === -1) {\n                                treemap.legendId.push(legendItem.id);\n                            }\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n                if (dataLength === 0 && this.treemap.palette && this.treemap.palette.length > 0) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if ((this.treemap.treeMapLegendModule.legendCollections[index]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName'] ||\n                            this.treemap.layout.renderItems[j]['levelOrderName'].indexOf(this.treemap.treeMapLegendModule.legendCollections[index]['levelOrderName']) > -1) &&\n                            ((!this.treemap.legendSettings.removeDuplicateLegend && treemap.palette && treemap.palette.length > 0) ?\n                                index === j : true)) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            pushCollection(this.legendSelectionCollection, index, j, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                            this.treemap.selectionId = nodeEle.id;\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            var legendItem = void 0;\n                            if (targetEle_1.id.indexOf('Text') > -1) {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id.replace('_Text', ''))\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index);\n                                this.legendSelectId = legendItem.id;\n                                this.shapeElement = legendItem;\n                            }\n                            else {\n                                legendItem = this.treemap.legendSettings.mode === 'Interactive' ? document.getElementById(targetEle_1.id + '_Text')\n                                    : document.getElementById(this.treemap.element.id + '_Legend_Text_Index_' + index);\n                                this.legendSelectId = targetId;\n                                this.shapeElement = targetEle_1;\n                            }\n                            setColor(legendItem, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            treemap.levelSelection.push(nodeEle.id);\n                            if (treemap.legendId.indexOf(legendItem.id) === -1) {\n                                treemap.legendId.push(legendItem.id);\n                            }\n                            if (treemap.legendId.indexOf(targetEle_1.id) === -1) {\n                                treemap.legendId.push(targetEle_1.id);\n                            }\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, this.treemap);\n                this.legendSelectionCollection = [];\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n                this.treemap.legendId = [];\n                this.treemap.levelSelection = [];\n            }\n        }\n        else if (isDrillItem) {\n            removeLegend(this.legendSelectionCollection, this.treemap);\n            this.legendSelectionCollection = [];\n            this.legendSelect = true;\n            this.legendSelectId = '';\n            this.treemap.legendId = [];\n            this.treemap.levelSelection = [];\n        }\n    };\n    /**\n     * @param {string} levelOrder - Specifies the level order of treemap item\n     * @param {boolean} enable - Specifies the boolean value\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var index = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection);\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            var selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection);\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var location;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            if (!isNullOrUndefined(item)) {\n                value = item['weight'];\n                toolTipData = item['data'];\n                if (!isNullOrUndefined(item['options'])) {\n                    markerFill = item['options']['fill'];\n                }\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [(!isNullOrUndefined(this.tooltipSettings.format) ?\n                            textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) : null)\n                            || formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [(!isNullOrUndefined(this.tooltipSettings.format) ?\n                            textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) : null)\n                            || this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip'\n                    });\n                    tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.size = this.tooltipSettings.textStyle.size || this.treemap.themeStyle.tooltipFontSize;\n                this.tooltipSettings.textStyle.fontFamily = this.tooltipSettings.textStyle.fontFamily || this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.fontStyle = !isNullOrUndefined(this.tooltipSettings.textStyle.fontStyle) ? this.tooltipSettings.textStyle.fontStyle : 'Normal';\n                this.tooltipSettings.textStyle.fontWeight = this.tooltipSettings.textStyle.fontWeight || this.treemap.themeStyle.fontWeight;\n                this.tooltipSettings.textStyle.color = this.tooltipSettings.textStyle.color || this.treemap.themeStyle.tooltipFontColor;\n                // eslint-disable-next-line max-len\n                this.tooltipSettings.textStyle.opacity = this.tooltipSettings.textStyle.opacity || this.treemap.themeStyle.tooltipTextOpacity;\n                var border = {\n                    width: this.tooltipSettings.border.width || this.treemap.themeStyle.tooltipBorderWidth || 0,\n                    color: this.tooltipSettings.border.color || this.treemap.themeStyle.tooltipBorderColor || 'transparent'\n                };\n                if (this.treemap.enableHtmlSanitizer) {\n                    for (var a = 0; a < tooltipContent.length; a++) {\n                        tooltipContent[a] = SanitizeHtmlHelper.sanitize(tooltipContent[a]);\n                    }\n                }\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData, border: border,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                    _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                theme: this.treemap.theme,\n                enable: true,\n                header: '',\n                data: args['data'],\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                fill: this.treemap.tooltipSettings.fill ? this.treemap.tooltipSettings.fill : this.treemap.themeStyle.tooltipFillColor,\n                border: args['border'],\n                enableShadow: true\n            });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.treemap.isVue || this.treemap.isVue3) {\n                this.svgTooltip.controlInstance = this.treemap;\n            }\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     *\n     * @private\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     *\n     * @private\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} returns string\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.svgTooltip)) {\n            this.svgTooltip.destroy();\n        }\n        this.svgTooltip = null;\n        this.tooltipSettings = null;\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection, index.Print, index.PdfExport, index.ImageExport);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","SanitizeHtmlHelper","sanitize","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","setItemTemplateContent","targetId","targetElement","contentItemTemplate","itemTemplate","itemSelect","querySelector","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","data","levels","groupPath","labelPath","weightValuePath","findChildren","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","trim","e","convertElement","element","labelId","childElement","cssText","elementLength","templateHtml","regExp","RegExp","toString","findLabelLocation","rect","labelSize","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","colorMappingValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","legendMaintain","legendGroup","legendId","legendSettings","parseFloat","treemapSVGRectElement","legendItem","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","isRGBValue","window","getComputedStyle","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","legendIndex","shapeId","legendShape","legendText","textStyle","dataCount","k","shapeElement","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","valuePath","rangeColorValuePath","dataLength","treeMapLegendModule","legendCollections","palette","pushCollection","number","legendElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","triggerDownload","fileName","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","removeElement","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","titleFontWeight","subTitleFontColor","tooltipFillColor","tooltipFontColor","tooltipFontSize","legendTitleColor","legendTextColor","subtitleFontSize","legendFontSize","labelFontSize","labelFontFamily","defaultFont","legendBorderColor","legendBorderWidth","tooltipFillOpacity","tooltipTextOpacity","tooltipBorderColor","tooltipBorderWidth","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","treemapLevelData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","this_1","drillDownView","treemapItemRect","visible","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","enableHtmlSanitizer","labelStyle","headerStyle","themeStyle","textStyleOpacity","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","textColor","trigger","observedArgs","drawPath","renderItemText","renderTemplate","renderReactTemplates","enable","highlightSettings","tabIndex","cursor","svgObject","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","textLocation","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","colorValuePath","saturatedColor","rgbValue","templateId","baseTemplateId","labelElement","templateLocation","textValue","destroy","currentRect","Theme","mapsTitleFont","Print","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","printFunction","div","cloneNode","Element","exportElement","backgroundElement","getElementsByTagName","getModuleName","ImageExport","export","allowDownload","Promise","resolve","reject","availableSize","Browser","userAgent","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image_1","Image","context_1","getContext","onload","drawImage","revokeObjectURL","toDataURL","src","PdfExport","orientation","PdfPageOrientation","Landscape","image","context","PdfDocument","imageString","pageSettings","pages","add","graphics","PdfBitmap","save","TreeMap","isResize","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","renderElements","LevelsData","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","fetchApiModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Fetch","onSuccess","args","reader_1","FileReader","treemap_1","JSON","parse","readAsText","send","processingData","renderLegend","elementChange","isResized","renderComplete","firstChild","hasChildNodes","clearTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","titleText","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","orderNames","level","childName","name_1","childGroupPath","start","currentName","currentPath","prevPath","previousData","IsChildHierarchy","current","isChild","groupObj","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeEvent","resizeOnTreeMap","bind","addEventListener","Internationalization","isDestroyed","args_1","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","labelText","clickArgs","mouseEvent","preventDefault","textContent","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","layoutID","templateID","drillMouseMove","drillLength","rightClick","which","layerElementId","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","selectTreemapItem","requiredModules","modules","tooltipSettings","member","onPropertyChanged","newProp","oldProp","removeSvg","doubleTapTimer","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","firstItem","nextItem","leafIndex","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","itemTextStyle","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","legendLength","rectWidth","rectHeight","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","outOfRangeLegend","showLegend","isAddNewLegendData","colors","q","stop1Color","colorStop","stop2Color","gradient","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","role","aria-label","borderStyle","legendBorder","pointerEvents","getLegendAlignment","trimTitle","textElement","renderInteractivePointer","interactiveId","pointerDrawn","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","shapeSelected","legendSelectionCollection","selectedElementIndex","targetElementIndex","selectionElements","legendSelectId","legendShapeElement","selectedLegendIndex","shapeSelectId","targetIndex","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","shapeSelect","selection","highlightModule","isDrillItem","nextSibling","selectionId","length_3","legendSelectIdIndex","length_4","targetEle_1","s","m","length_5","selectionElement","__rest","t","getOwnPropertySymbols","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","enableShadow","isVue","isVue3","controlInstance","appendTo","tooltipElementId","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection","index.Print","index.PdfExport","index.ImageExport"],"mappings":"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"}